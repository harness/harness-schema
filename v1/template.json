{
  "type" : "object",
  "title" : "template",
  "required" : [ "version", "kind", "spec" ],
  "properties" : {
    "version" : {
      "description" : "Version defines the schema version.",
      "type" : "number",
      "enum" : [ 1 ]
    },
    "kind" : {
      "description" : "defines the kind of yaml",
      "type" : "string",
      "enum" : [ "template" ]
    }
  },
  "allOf" : [ {
    "if" : {
      "properties" : {
        "kind" : {
          "const" : "template"
        }
      }
    },
    "then" : {
      "properties" : {
        "spec" : {
          "oneOf" : [ {
            "$ref" : "#/definitions/template/step/StepTemplate"
          }, {
            "$ref" : "#/definitions/template/secretmanager/SecretManagerTemplate"
          }, {
            "$ref" : "#/definitions/template/stage/StageTemplate"
          }, {
            "$ref" : "#/definitions/template/pipeline/PipelineTemplate"
          }, {
            "$ref" : "#/definitions/template/stepgroup/StepGroupTemplate"
          }, {
            "$ref" : "#/definitions/template/monitoredservice/template"
          }, {
            "$ref" : "#/definitions/template/artifactsourcetemplate/ArtifactSourceTemplate"
          }, {
            "$ref" : "#/definitions/template/customdeployment/CustomDeploymentTemplate"
          } ]
        }
      }
    }
  } ],
  "$schema" : "http://json-schema.org/draft-07/schema#",
  "definitions" : {
    "template" : {
      "step" : {
        "StepTemplate" : {
          "type" : "object",
          "title" : "StepTemplate",
          "required" : [ "type", "spec" ],
          "properties" : {
            "labels" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            },
            "inputs" : {
              "type" : "object",
              "description" : "Inputs defines the template input parameters.",
              "additionalProperties" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StringInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/NumberInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/ArrayInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/BooleanInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/ObjectInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/SecretInput"
                } ]
              },
              "propertyNames" : {
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_\\.$-]{0,127}$"
              }
            },
            "type" : {
              "description" : "defines the type of template",
              "type" : "string",
              "enum" : [ "step" ]
            }
          },
          "allOf" : [ {
            "if" : {
              "properties" : {
                "type" : {
                  "const" : "step"
                }
              }
            },
            "then" : {
              "properties" : {
                "spec" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenDeployStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenRollbackStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenSwapServiceStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgShiftTrafficStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgCanaryDeleteStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgCanaryDeployStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgRollingDeployStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgRollingRollbackStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaDeployStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaRollbackStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsSamBuildStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsSamDeployStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsSamRollbackStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureARMRollbackStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateARMResourceStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateBPStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppRollbackStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppSlotDeploymentStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppSwapSlotStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppTrafficShiftStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/BambooBuildStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ChaosStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/CloudformationCreateStackStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/CloudformationDeleteStackStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/CloudformationRollbackStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/CommandStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/DownloadManifestsStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsBlueGreenCreateServiceStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsBlueGreenRollbackStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsBlueGreenSwapTargetGroupsStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsCanaryDeleteStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsCanaryDeployStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsRollingDeployStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsRollingRollbackStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsRunTaskStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsUpgradeContainerStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsServiceSetupStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsBasicRollbackStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupBGStageSetupStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupDeployStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupRollbackStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupSetupStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupSwapRouteStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/FetchInstanceScriptStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/FetchLinkedAppsStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsDeployStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsGenOneDeployStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsDeployWithoutTrafficStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsRollbackStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsTrafficShiftStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/HelmDeployStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/HelmRollbackStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/JenkinsBuildStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sApplyStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sBGSwapServicesStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sBlueGreenStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sCanaryDeleteStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sCanaryStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sDeleteStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sDryRunManifestStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sRollingRollbackStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sRollingStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sScaleStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/MergePRStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/RevertPRStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaDeployStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaDeployV2StepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaPackageV2StepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaPrepareRollbackV2StepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaRollbackStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaRollbackV2StepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ShellScriptProvisionStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/SyncStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasAppResizeStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasBGAppSetupStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasBasicAppSetupStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasCanaryAppSetupStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasCommandStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasRouteMappingStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasRollbackStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasRollingDeployStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasRollingRollbackStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasSwapRollbackStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasSwapRoutesStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformApplyStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRollbackStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRunStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformDestroyStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformPlanStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformRollbackStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerragruntApplyStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerragruntDestroyStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerragruntPlanStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerragruntRollbackStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/UpdateReleaseRepoStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/ActionStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/AquaTrivyScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsEcrScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsSecurityHubScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/BackgroundStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/BanditScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/BlackDuckScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/BrakemanScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/BurpScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/CheckmarxScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/ClairScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/CodeqlScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/CoverityScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/CustomIngestScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/DataTheoremScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/DockerContentTrustScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/FortifyOnDemandScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/FossaScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/GitleaksScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/GrypeScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/JfrogXrayScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/MendScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/MetasploitScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/NessusScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/NexusIQScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/NiktoScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/NmapScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/OpenvasScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/OwaspScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/PluginStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/PrismaCloudScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/ProwlerScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/QualysScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/ReapsawScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/RunStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/SecurityNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/SemgrepScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/ShiftLeftScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/SniperScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/SnykScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/SonarqubeScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/SysdigScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/TenableScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/VeracodeScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/ZapScanNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/BarrierStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ContainerStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/CustomApprovalStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/EmailStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/FlagConfigurationStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/HarnessApprovalStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/HttpStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/JiraApprovalStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/JiraCreateStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/JiraUpdateStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/PolicyStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/QueueStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowApprovalStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowCreateStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowImportSetStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowUpdateStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ShellScriptStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/TemplateStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/WaitStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cvng/CVAnalyzeDeploymentStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cvng/CVVerifyStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/iacm/IACMApprovalStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/iacm/IACMTerraformPluginStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkBootstrapStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkSynthStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDiffStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sBGStageScaleDownStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsGenOneRollbackStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/stages/cd/CustomDeploymentConfig_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDeployStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDestroyStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/UpdateGitOpsAppStepNode_template"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sTrafficRoutingStepNode_template"
                  } ]
                }
              }
            }
          } ]
        }
      },
      "secretmanager" : {
        "SecretManagerTemplate" : {
          "type" : "object",
          "title" : "SecretManagerTemplate",
          "required" : [ "type", "spec" ],
          "properties" : {
            "labels" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            },
            "inputs" : {
              "type" : "object",
              "description" : "Inputs defines the template input parameters.",
              "additionalProperties" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StringInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/NumberInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/ArrayInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/BooleanInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/ObjectInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/SecretInput"
                } ]
              },
              "propertyNames" : {
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_\\.$-]{0,127}$"
              }
            },
            "type" : {
              "description" : "defines the type of template",
              "type" : "string",
              "enum" : [ "secret-manager" ]
            }
          },
          "allOf" : [ {
            "if" : {
              "properties" : {
                "type" : {
                  "const" : "secret-manager"
                }
              }
            },
            "then" : {
              "properties" : {
                "spec" : {
                  "type" : "object"
                }
              }
            }
          } ]
        }
      },
      "stage" : {
        "StageTemplate" : {
          "type" : "object",
          "title" : "StageTemplate",
          "required" : [ "type", "spec" ],
          "properties" : {
            "labels" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            },
            "inputs" : {
              "type" : "object",
              "description" : "Inputs defines the template input parameters.",
              "additionalProperties" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StringInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/NumberInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/ArrayInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/BooleanInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/ObjectInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/SecretInput"
                } ]
              },
              "propertyNames" : {
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_\\.$-]{0,127}$"
              }
            },
            "type" : {
              "description" : "defines the type of template",
              "type" : "string",
              "enum" : [ "stage" ]
            }
          },
          "allOf" : [ {
            "if" : {
              "properties" : {
                "type" : {
                  "const" : "stage"
                }
              }
            },
            "then" : {
              "properties" : {
                "spec" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/stages/iacm/IACMStageNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/stages/cd/DeploymentStageNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/stages/security/SecurityStageNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/stages/approval/ApprovalStageNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/stages/custom/PipelineStageNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/stages/custom/CustomStageNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/stages/cf/FeatureFlagStageNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/stages/template/TemplateStageNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/stages/ParallelStageElementConfig"
                  }, {
                    "$ref" : "#/definitions/pipeline/stages/idp/IDPStageNode"
                  } ]
                }
              }
            }
          } ]
        }
      },
      "pipeline" : {
        "PipelineTemplate" : {
          "type" : "object",
          "title" : "PipelineTemplate",
          "required" : [ "type", "spec" ],
          "properties" : {
            "labels" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            },
            "inputs" : {
              "type" : "object",
              "description" : "Inputs defines the template input parameters.",
              "additionalProperties" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StringInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/NumberInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/ArrayInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/BooleanInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/ObjectInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/SecretInput"
                } ]
              },
              "propertyNames" : {
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_\\.$-]{0,127}$"
              }
            },
            "type" : {
              "description" : "defines the type of template",
              "type" : "string",
              "enum" : [ "pipeline" ]
            }
          },
          "allOf" : [ {
            "if" : {
              "properties" : {
                "type" : {
                  "const" : "pipeline"
                }
              }
            },
            "then" : {
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/template/pipeline/PipelineTemplateSpec"
                }
              }
            }
          } ]
        },
        "PipelineTemplateSpec" : {
          "type" : "object",
          "title" : "PipelineTemplateSpec",
          "required" : [ "stages" ],
          "properties" : {
            "stages" : {
              "type" : "array",
              "items" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/stages/iacm/IACMStageNode"
                }, {
                  "$ref" : "#/definitions/pipeline/stages/cd/DeploymentStageNode"
                }, {
                  "$ref" : "#/definitions/pipeline/stages/security/SecurityStageNode"
                }, {
                  "$ref" : "#/definitions/pipeline/stages/approval/ApprovalStageNode"
                }, {
                  "$ref" : "#/definitions/pipeline/stages/custom/PipelineStageNode"
                }, {
                  "$ref" : "#/definitions/pipeline/stages/custom/CustomStageNode"
                }, {
                  "$ref" : "#/definitions/pipeline/stages/cf/FeatureFlagStageNode"
                }, {
                  "$ref" : "#/definitions/pipeline/stages/template/TemplateStageNode"
                }, {
                  "$ref" : "#/definitions/pipeline/stages/ParallelStageElementConfig"
                }, {
                  "$ref" : "#/definitions/pipeline/stages/idp/IDPStageNode"
                } ]
              },
              "maxItems" : 256,
              "minItems" : 1
            },
            "inputs" : {
              "type" : "object",
              "description" : "Inputs defines the pipeline template input parameters.",
              "additionalProperties" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StringInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/NumberInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/ArrayInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/BooleanInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/ObjectInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/SecretInput"
                } ]
              },
              "propertyNames" : {
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_\\.$-]{0,127}$"
              }
            },
            "timeout" : {
              "type" : "string",
              "description" : "Defines pipeline timeout",
              "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
            },
            "options" : {
              "type" : "object",
              "description" : "Options defines global configuration options.",
              "$ref" : "#/definitions/pipeline/Options"
            },
            "labels" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "stepgroup" : {
        "StepGroupTemplate" : {
          "type" : "object",
          "title" : "StepGroupTemplate",
          "required" : [ "type", "spec" ],
          "properties" : {
            "labels" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            },
            "inputs" : {
              "type" : "object",
              "description" : "Inputs defines the template input parameters.",
              "additionalProperties" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StringInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/NumberInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/ArrayInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/BooleanInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/ObjectInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/SecretInput"
                } ]
              },
              "propertyNames" : {
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_\\.$-]{0,127}$"
              }
            },
            "type" : {
              "description" : "defines the type of template",
              "type" : "string",
              "enum" : [ "group" ]
            }
          },
          "allOf" : [ {
            "if" : {
              "properties" : {
                "type" : {
                  "const" : "group"
                }
              }
            },
            "then" : {
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/template/stepgroup/GroupTemplateSpec"
                }
              }
            }
          } ]
        },
        "GroupTemplateSpec" : {
          "title" : "GroupTemplateSpec",
          "type" : "object",
          "required" : [ "steps" ],
          "properties" : {
            "steps" : {
              "type" : "array",
              "items" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepElementConfig"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/BackgroundStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerraformApplyStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerraformPlanStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerraformDestroyStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerraformRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/CloudformationCreateStackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/CloudformationDeleteStackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/CloudformationRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateARMResourceStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateBPStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AzureARMRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/JenkinsBuildStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/ShellScriptProvisionStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/ChaosStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerragruntPlanStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerragruntApplyStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerragruntDestroyStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerragruntRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AsgCanaryDeployStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AsgCanaryDeleteStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AsgRollingDeployStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AsgRollingRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenDeployStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenSwapServiceStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRunStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaDeployStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AwsSamDeployStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/DownloadManifestsStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AwsSamBuildStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AwsSamRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/BambooBuildStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/HttpStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/EmailStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/QueueStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/ShellScriptStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/CustomApprovalStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/JiraCreateStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/JiraUpdateStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/TemplateStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowApprovalStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/JiraApprovalStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/HarnessApprovalStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/BarrierStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowCreateStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowUpdateStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowImportSetStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/FlagConfigurationStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/PolicyStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/WaitStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/ContainerStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/RunStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/PluginStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/ActionStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaDeployV2StepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaPackageV2StepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaPrepareRollbackV2StepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaRollbackV2StepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/AwsCdkBootstrapStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/AwsCdkSynthStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDiffStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDeployStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDestroyStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/StepGroupNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/ParallelNode"
                } ]
              },
              "maxItems" : 256,
              "minItems" : 1
            }
          },
          "$schema" : "http://json-schema.org/draft-07/schema#"
        }
      },
      "monitoredservice" : {
        "template" : {
          "type" : "object",
          "title" : "template",
          "required" : [ "type", "spec" ],
          "properties" : {
            "labels" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            },
            "inputs" : {
              "type" : "object",
              "description" : "Inputs defines the template input parameters.",
              "additionalProperties" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StringInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/NumberInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/ArrayInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/BooleanInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/ObjectInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/SecretInput"
                } ]
              },
              "propertyNames" : {
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_\\.$-]{0,127}$"
              }
            },
            "type" : {
              "description" : "defines the type of template",
              "type" : "string",
              "enum" : [ "monitered-service" ]
            }
          },
          "allOf" : [ {
            "if" : {
              "properties" : {
                "type" : {
                  "const" : "monitered-service"
                }
              }
            },
            "then" : {
              "properties" : {
                "spec" : {
                  "type" : "object"
                }
              }
            }
          } ]
        }
      },
      "artifactsourcetemplate" : {
        "ArtifactSourceTemplate" : {
          "type" : "object",
          "title" : "ArtifactSourceTemplate",
          "required" : [ "type", "spec" ],
          "properties" : {
            "labels" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            },
            "inputs" : {
              "type" : "object",
              "description" : "Inputs defines the template input parameters.",
              "additionalProperties" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StringInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/NumberInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/ArrayInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/BooleanInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/ObjectInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/SecretInput"
                } ]
              },
              "propertyNames" : {
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_\\.$-]{0,127}$"
              }
            },
            "type" : {
              "description" : "defines the type of template",
              "type" : "string",
              "enum" : [ "artifact-source" ]
            }
          },
          "allOf" : [ {
            "if" : {
              "properties" : {
                "type" : {
                  "const" : "artifact-source"
                }
              }
            },
            "then" : {
              "properties" : {
                "spec" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/stages/cd/ArtifactSource_template"
                  } ]
                }
              }
            }
          } ]
        }
      },
      "customdeployment" : {
        "CustomDeploymentTemplate" : {
          "type" : "object",
          "title" : "CustomDeploymentTemplate",
          "required" : [ "type", "spec" ],
          "properties" : {
            "labels" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              }
            },
            "inputs" : {
              "type" : "object",
              "description" : "Inputs defines the template input parameters.",
              "additionalProperties" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StringInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/NumberInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/ArrayInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/BooleanInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/ObjectInput"
                }, {
                  "$ref" : "#/definitions/pipeline/common/SecretInput"
                } ]
              },
              "propertyNames" : {
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_\\.$-]{0,127}$"
              }
            },
            "type" : {
              "description" : "defines the type of template",
              "type" : "string",
              "enum" : [ "custom-deployment" ]
            }
          },
          "allOf" : [ {
            "if" : {
              "properties" : {
                "type" : {
                  "const" : "artifact-source"
                }
              }
            },
            "then" : {
              "properties" : {
                "spec" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/stages/cd/CustomDeploymentConfig_template"
                  } ]
                }
              }
            }
          } ]
        }
      }
    },
    "pipeline" : {
      "common" : {
        "StringInput" : {
          "title" : "StringInput",
          "allOf" : [ {
            "$ref" : "#/definitions/pipeline/common/Input"
          }, {
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "default" : {
                "type" : "string"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "string" ]
              },
              "value" : {
                "type" : "string"
              },
              "validator" : {
                "type" : "object",
                "oneOf" : [ {
                  "allOf" : [ {
                    "properties" : {
                      "allowed" : {
                        "description" : "defines allowed values for an input",
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    }
                  } ],
                  "required" : [ "allowed" ]
                }, {
                  "allOf" : [ {
                    "properties" : {
                      "regex" : {
                        "description" : "defines regex pattern for an input value",
                        "type" : "string"
                      }
                    }
                  } ],
                  "required" : [ "regex" ]
                } ]
              }
            }
          } ],
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "Input" : {
          "title" : "Input",
          "type" : "object",
          "discriminator" : "type",
          "description" : "Input defines an input parameter.",
          "properties" : {
            "type" : {
              "description" : "Type defines the input type.",
              "type" : "string",
              "enum" : [ "string", "number", "boolean", "array", "object", "secret" ]
            },
            "desc" : {
              "type" : "string",
              "description" : "Desc defines the input description."
            },
            "required" : {
              "type" : "boolean",
              "description" : "Required indicates the input is required."
            },
            "execution_input" : {
              "description" : "a boolean that defines whether the value is an execution input",
              "type" : "boolean",
              "default" : false
            }
          }
        },
        "NumberInput" : {
          "title" : "NumberInput",
          "allOf" : [ {
            "$ref" : "#/definitions/pipeline/common/Input"
          }, {
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "default" : {
                "type" : "number",
                "format" : "double"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "number" ]
              },
              "value" : {
                "oneOf" : [ {
                  "type" : "number",
                  "format" : "double"
                }, {
                  "type" : "string",
                  "pattern" : "((^[+-]?[0-9]*\\.?[0-9]+$)|(<\\+.+>.*))"
                } ]
              },
              "validator" : {
                "type" : "object",
                "oneOf" : [ {
                  "allOf" : [ {
                    "properties" : {
                      "allowed" : {
                        "description" : "defines allowed values for an input",
                        "type" : "array",
                        "items" : {
                          "oneOf" : [ {
                            "type" : "number",
                            "format" : "double"
                          }, {
                            "type" : "string",
                            "pattern" : "((^[+-]?[0-9]*\\.?[0-9]+$)|(<\\+.+>.*))"
                          } ]
                        }
                      }
                    }
                  } ],
                  "required" : [ "allowed" ]
                }, {
                  "allOf" : [ {
                    "properties" : {
                      "regex" : {
                        "description" : "defines regex pattern for an input value",
                        "type" : "string"
                      }
                    }
                  } ],
                  "required" : [ "regex" ]
                } ]
              }
            }
          } ],
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "ArrayInput" : {
          "title" : "ArrayInput",
          "allOf" : [ {
            "$ref" : "#/definitions/pipeline/common/Input"
          }, {
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "default" : {
                "type" : "array"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "array" ]
              },
              "value" : {
                "type" : "array"
              },
              "validator" : {
                "type" : "object",
                "oneOf" : [ {
                  "allOf" : [ {
                    "properties" : {
                      "allowed" : {
                        "description" : "defines allowed values for an input",
                        "type" : "array",
                        "items" : {
                          "type" : "array"
                        }
                      }
                    }
                  } ],
                  "required" : [ "allowed" ]
                }, {
                  "allOf" : [ {
                    "properties" : {
                      "regex" : {
                        "description" : "defines regex pattern for an input value",
                        "type" : "string"
                      }
                    }
                  } ],
                  "required" : [ "regex" ]
                } ]
              }
            }
          } ],
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "BooleanInput" : {
          "title" : "BooleanInput",
          "allOf" : [ {
            "$ref" : "#/definitions/pipeline/common/Input"
          }, {
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "default" : {
                "type" : "boolean"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "boolean" ]
              },
              "value" : {
                "type" : "boolean"
              }
            }
          } ],
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "ObjectInput" : {
          "title" : "ObjectInput",
          "allOf" : [ {
            "$ref" : "#/definitions/pipeline/common/Input"
          }, {
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "default" : {
                "type" : "object"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "object" ]
              },
              "value" : {
                "type" : "object"
              },
              "validator" : {
                "type" : "object",
                "oneOf" : [ {
                  "allOf" : [ {
                    "properties" : {
                      "allowed" : {
                        "description" : "defines allowed values for an input",
                        "type" : "array",
                        "items" : {
                          "type" : "object"
                        }
                      }
                    }
                  } ],
                  "required" : [ "allowed" ]
                }, {
                  "allOf" : [ {
                    "properties" : {
                      "regex" : {
                        "description" : "defines regex pattern for an input value",
                        "type" : "string"
                      }
                    }
                  } ],
                  "required" : [ "regex" ]
                } ]
              }
            }
          } ],
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "SecretInput" : {
          "title" : "SecretInput",
          "allOf" : [ {
            "$ref" : "#/definitions/pipeline/common/Input"
          }, {
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "default" : {
                "type" : "string"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "secret" ]
              },
              "value" : {
                "type" : "string"
              }
            }
          } ],
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "PolicyConfig" : {
          "title" : "PolicyConfig",
          "type" : "object",
          "required" : [ "policy_sets" ],
          "properties" : {
            "policy_sets" : {
              "oneOf" : [ {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }, {
                "type" : "string",
                "pattern" : "(<\\+inputs\\..+>.*)",
                "minLength" : 1
              } ]
            },
            "description" : {
              "desc" : "This is the description for PolicyConfig"
            }
          },
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "FailureStrategyConfig" : {
          "title" : "FailureStrategyConfig",
          "type" : "object",
          "required" : [ "onFailure" ],
          "properties" : {
            "onFailure" : {
              "$ref" : "#/definitions/pipeline/common/OnFailureConfig"
            },
            "description" : {
              "desc" : "This is the description for FailureStrategyConfig"
            }
          },
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "OnFailureConfig" : {
          "title" : "OnFailureConfig",
          "type" : "object",
          "required" : [ "action", "errors" ],
          "properties" : {
            "action" : {
              "$ref" : "#/definitions/pipeline/common/FailureStrategyActionConfig"
            },
            "errors" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "Unknown", "AllErrors", "Authentication", "Connectivity", "Timeout", "Authorization", "Verification", "DelegateProvisioning", "PolicyEvaluationFailure", "InputTimeoutError", "ApprovalRejection", "DelegateRestart", "UserMarkedFailure" ]
              }
            },
            "description" : {
              "desc" : "This is the description for OnFailureConfig"
            }
          },
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "FailureStrategyActionConfig" : {
          "title" : "FailureStrategyActionConfig",
          "type" : "object",
          "required" : [ "type" ],
          "discriminator" : "type",
          "properties" : {
            "type" : {
              "type" : "string",
              "enum" : [ "Ignore", "Retry", "MarkAsSuccess", "Abort", "StageRollback", "StepGroupRollback", "PipelineRollback", "ManualIntervention", "ProceedWithDefaultValues", "MarkAsFailure", "RetryStepGroup" ]
            },
            "description" : {
              "desc" : "This is the description for FailureStrategyActionConfig"
            }
          },
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "StrategyConfig" : {
          "title" : "StrategyConfig",
          "type" : "object",
          "properties" : {
            "matrix" : {
              "oneOf" : [ {
                "$ref" : "#/definitions/pipeline/common/ParameterFieldMatrixConfigInterface"
              }, {
                "type" : "string",
                "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                "minLength" : 1
              } ]
            },
            "parallelism" : {
              "oneOf" : [ {
                "type" : "integer",
                "format" : "int32",
                "minimum" : 0
              }, {
                "type" : "string",
                "pattern" : "(<\\+.+>.*)",
                "minLength" : 1
              } ]
            },
            "repeat" : {
              "$ref" : "#/definitions/pipeline/common/HarnessForConfig"
            },
            "description" : {
              "desc" : "This is the description for StrategyConfig"
            }
          },
          "$schema" : "http://json-schema.org/draft-07/schema#",
          "allOf" : [ {
            "oneOf" : [ {
              "required" : [ "repeat" ]
            }, {
              "required" : [ "parallelism" ]
            }, {
              "required" : [ "matrix" ]
            } ]
          } ]
        },
        "ParameterFieldMatrixConfigInterface" : {
          "title" : "ParameterFieldMatrixConfigInterface",
          "type" : "object",
          "properties" : {
            "defaultValue" : {
              "$ref" : "#/definitions/pipeline/common/MatrixConfigInterface"
            },
            "executionInput" : {
              "type" : "boolean"
            },
            "expression" : {
              "type" : "boolean"
            },
            "expressionValue" : {
              "type" : "string"
            },
            "inputSetValidator" : {
              "$ref" : "#/definitions/pipeline/common/InputSetValidator"
            },
            "jsonResponseField" : {
              "type" : "boolean"
            },
            "responseField" : {
              "type" : "string"
            },
            "typeString" : {
              "type" : "boolean"
            },
            "value" : {
              "$ref" : "#/definitions/pipeline/common/MatrixConfigInterface"
            },
            "description" : {
              "desc" : "This is the description for ParameterFieldMatrixConfigInterface"
            }
          },
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "MatrixConfigInterface" : {
          "title" : "MatrixConfigInterface",
          "type" : "object",
          "$schema" : "http://json-schema.org/draft-07/schema#",
          "properties" : {
            "description" : {
              "desc" : "This is the description for MatrixConfigInterface"
            }
          }
        },
        "InputSetValidator" : {
          "title" : "InputSetValidator",
          "type" : "object",
          "properties" : {
            "parameters" : {
              "type" : "string"
            },
            "validatorType" : {
              "type" : "string",
              "enum" : [ "ALLOWED_VALUES", "REGEX" ]
            },
            "description" : {
              "desc" : "This is the description for InputSetValidator"
            }
          },
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "HarnessForConfig" : {
          "title" : "HarnessForConfig",
          "type" : "object",
          "properties" : {
            "end" : {
              "oneOf" : [ {
                "type" : "integer",
                "format" : "int32",
                "minimum" : 0
              }, {
                "type" : "string",
                "pattern" : "(<\\+.+>.*)",
                "minLength" : 1
              } ]
            },
            "items" : {
              "oneOf" : [ {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }, {
                "type" : "string",
                "pattern" : "(<\\+.+>.*)",
                "minLength" : 1
              } ]
            },
            "maxConcurrency" : {
              "oneOf" : [ {
                "type" : "integer",
                "format" : "int32",
                "minimum" : 0
              }, {
                "type" : "string",
                "pattern" : "(<\\+.+>.*)",
                "minLength" : 1
              } ]
            },
            "partitionSize" : {
              "oneOf" : [ {
                "type" : "integer",
                "format" : "int32",
                "minimum" : 0
              }, {
                "type" : "string",
                "pattern" : "(<\\+.+>.*)",
                "minLength" : 1
              } ]
            },
            "start" : {
              "oneOf" : [ {
                "type" : "integer",
                "format" : "int32",
                "minimum" : 0
              }, {
                "type" : "string",
                "pattern" : "(<\\+.+>.*)",
                "minLength" : 1
              } ]
            },
            "times" : {
              "oneOf" : [ {
                "type" : "integer",
                "format" : "int32",
                "minimum" : 0
              }, {
                "type" : "string",
                "pattern" : "(<\\+.+>.*)",
                "minLength" : 1
              } ]
            },
            "unit" : {
              "type" : "string",
              "enum" : [ "Percentage", "Count" ]
            },
            "description" : {
              "desc" : "This is the description for HarnessForConfig"
            }
          },
          "$schema" : "http://json-schema.org/draft-07/schema#",
          "allOf" : [ {
            "oneOf" : [ {
              "required" : [ "times" ]
            }, {
              "required" : [ "items" ]
            } ]
          } ]
        },
        "StepWhenCondition" : {
          "title" : "StepWhenCondition",
          "type" : "object",
          "required" : [ "stageStatus" ],
          "properties" : {
            "condition" : {
              "type" : "string",
              "pattern" : "^(?!<\\+input>.*\\.executionInput\\(\\)(.*)$)"
            },
            "stageStatus" : {
              "type" : "string",
              "enum" : [ "Success", "Failure", "All" ]
            },
            "description" : {
              "desc" : "This is the description for StepWhenCondition"
            }
          },
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "StepSpecType" : {
          "title" : "StepSpecType",
          "type" : "object",
          "discriminator" : "type",
          "$schema" : "http://json-schema.org/draft-07/schema#",
          "properties" : {
            "description" : {
              "desc" : "This is the description for StepSpecType"
            }
          }
        },
        "ContainerResource" : {
          "title" : "ContainerResource",
          "type" : "object",
          "required" : [ "limits" ],
          "properties" : {
            "limits" : {
              "$ref" : "#/definitions/pipeline/common/Limits"
            },
            "description" : {
              "desc" : "This is the description for ContainerResource"
            }
          },
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "Limits" : {
          "title" : "Limits",
          "type" : "object",
          "properties" : {
            "cpu" : {
              "oneOf" : [ {
                "type" : "string"
              }, {
                "type" : "number"
              } ]
            },
            "memory" : {
              "type" : "string"
            },
            "description" : {
              "desc" : "This is the description for Limits"
            }
          },
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "NumberNGVariable" : {
          "title" : "NumberNGVariable",
          "allOf" : [ {
            "$ref" : "#/definitions/pipeline/common/NGVariable"
          }, {
            "type" : "object",
            "required" : [ "value" ],
            "properties" : {
              "default" : {
                "type" : "number",
                "format" : "double"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_\\.$]{0,127}$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Number" ]
              },
              "value" : {
                "oneOf" : [ {
                  "type" : "number",
                  "format" : "double"
                }, {
                  "type" : "string",
                  "pattern" : "((^[+-]?[0-9]*\\.?[0-9]+$)|(<\\+.+>.*))"
                } ]
              }
            }
          } ],
          "$schema" : "http://json-schema.org/draft-07/schema#",
          "properties" : {
            "description" : {
              "desc" : "This is the description for NumberNGVariable"
            }
          }
        },
        "NGVariable" : {
          "title" : "NGVariable",
          "type" : "object",
          "discriminator" : "type",
          "properties" : {
            "description" : {
              "type" : "string",
              "desc" : "This is the description for NGVariable"
            },
            "metadata" : {
              "type" : "string"
            },
            "name" : {
              "type" : "string"
            },
            "required" : {
              "type" : "boolean"
            },
            "type" : {
              "type" : "string",
              "enum" : [ "String", "Number", "Secret" ]
            }
          },
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "SecretNGVariable" : {
          "title" : "SecretNGVariable",
          "allOf" : [ {
            "$ref" : "#/definitions/pipeline/common/NGVariable"
          }, {
            "type" : "object",
            "required" : [ "value" ],
            "properties" : {
              "default" : {
                "type" : "string"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_\\.$]{0,127}$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Secret" ]
              },
              "value" : {
                "type" : "string"
              }
            }
          } ],
          "$schema" : "http://json-schema.org/draft-07/schema#",
          "properties" : {
            "description" : {
              "desc" : "This is the description for SecretNGVariable"
            }
          }
        },
        "StringNGVariable" : {
          "title" : "StringNGVariable",
          "allOf" : [ {
            "$ref" : "#/definitions/pipeline/common/NGVariable"
          }, {
            "type" : "object",
            "required" : [ "value" ],
            "properties" : {
              "default" : {
                "type" : "string"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_\\.$]{0,127}$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "String" ]
              },
              "value" : {
                "type" : "string"
              }
            }
          } ],
          "$schema" : "http://json-schema.org/draft-07/schema#",
          "properties" : {
            "description" : {
              "desc" : "This is the description for StringNGVariable"
            }
          }
        },
        "ShellScriptSourceWrapper" : {
          "title" : "ShellScriptSourceWrapper",
          "type" : "object",
          "required" : [ "spec", "type" ],
          "properties" : {
            "type" : {
              "type" : "string"
            },
            "description" : {
              "desc" : "This is the description for ShellScriptSourceWrapper"
            }
          },
          "$schema" : "http://json-schema.org/draft-07/schema#",
          "allOf" : [ {
            "if" : {
              "properties" : {
                "type" : {
                  "const" : "harness"
                }
              }
            },
            "then" : {
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/common/HarnessFileStoreSource"
                }
              }
            }
          }, {
            "if" : {
              "properties" : {
                "type" : {
                  "const" : "inline"
                }
              }
            },
            "then" : {
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/common/ShellScriptInlineSource"
                }
              }
            }
          } ]
        },
        "HarnessFileStoreSource" : {
          "title" : "HarnessFileStoreSource",
          "allOf" : [ {
            "$ref" : "#/definitions/pipeline/common/ShellScriptBaseSource"
          }, {
            "type" : "object",
            "properties" : {
              "file" : {
                "type" : "string"
              }
            }
          } ],
          "$schema" : "http://json-schema.org/draft-07/schema#",
          "properties" : {
            "description" : {
              "desc" : "This is the description for HarnessFileStoreSource"
            }
          }
        },
        "ShellScriptBaseSource" : {
          "title" : "ShellScriptBaseSource",
          "type" : "object",
          "discriminator" : "type",
          "properties" : {
            "type" : {
              "type" : "string"
            },
            "description" : {
              "desc" : "This is the description for ShellScriptBaseSource"
            }
          },
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "ShellScriptInlineSource" : {
          "title" : "ShellScriptInlineSource",
          "allOf" : [ {
            "$ref" : "#/definitions/pipeline/common/ShellScriptBaseSource"
          }, {
            "type" : "object",
            "properties" : {
              "script" : {
                "type" : "string"
              }
            }
          } ],
          "$schema" : "http://json-schema.org/draft-07/schema#",
          "properties" : {
            "description" : {
              "desc" : "This is the description for ShellScriptInlineSource"
            }
          }
        },
        "OutputNGVariable" : {
          "title" : "OutputNGVariable",
          "type" : "object",
          "properties" : {
            "description" : {
              "type" : "string",
              "desc" : "This is the description for OutputNGVariable"
            },
            "name" : {
              "type" : "string",
              "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
            }
          },
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "ParameterFieldMapStringJsonNode" : {
          "title" : "ParameterFieldMapStringJsonNode",
          "type" : "object",
          "properties" : {
            "defaultValue" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/definitions/pipeline/common/JsonNode"
              }
            },
            "executionInput" : {
              "type" : "boolean"
            },
            "expression" : {
              "type" : "boolean"
            },
            "expressionValue" : {
              "type" : "string"
            },
            "inputSetValidator" : {
              "$ref" : "#/definitions/pipeline/common/InputSetValidator"
            },
            "jsonResponseField" : {
              "type" : "boolean"
            },
            "responseField" : {
              "type" : "string"
            },
            "typeString" : {
              "type" : "boolean"
            },
            "value" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/definitions/pipeline/common/JsonNode"
              }
            },
            "description" : {
              "desc" : "This is the description for ParameterFieldMapStringJsonNode"
            }
          },
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "JsonNode" : {
          "title" : "JsonNode",
          "type" : "object",
          "$schema" : "http://json-schema.org/draft-07/schema#",
          "properties" : {
            "description" : {
              "desc" : "This is the description for JsonNode"
            }
          }
        },
        "FailureList" : {
          "title" : "FailureList",
          "oneOf" : [ {
            "$ref" : "#/definitions/pipeline/common/Failure"
          }, {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/pipeline/common/Failure"
            }
          } ]
        },
        "Failure" : {
          "title" : "Failure",
          "type" : "object",
          "description" : "Failure defines a failure strategy.",
          "properties" : {
            "errors" : {
              "description" : "Errors specifies the types of errors.",
              "type" : "array",
              "items" : {
                "type" : "string",
                "enum" : [ "all", "approval-rejection", "authentication", "authorization", "connectivity", "delegate-provisioning", "delegate-restart", "input-timeout", "policy-evaluation", "timeout", "unknown", "verification", "user-mark-fail" ]
              }
            },
            "action" : {
              "$ref" : "#/definitions/pipeline/common/FailureAction"
            }
          }
        },
        "FailureAction" : {
          "title" : "FailureAction",
          "type" : "object",
          "description" : "Failure Action defines action to be taken on failure.",
          "properties" : {
            "type" : {
              "description" : "Type defines the failure strategy type.",
              "type" : "string",
              "enum" : [ "abort", "fail", "ignore", "manual-intervention", "pipeline-rollback", "retry", "retry-step-group", "stage-rollback", "success" ]
            }
          },
          "oneOf" : [ {
            "allOf" : [ {
              "properties" : {
                "type" : {
                  "const" : "success"
                }
              }
            }, {
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/common/EmptySpec"
                }
              }
            } ]
          }, {
            "allOf" : [ {
              "properties" : {
                "type" : {
                  "const" : "fail"
                }
              }
            }, {
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/common/EmptySpec"
                }
              }
            } ]
          }, {
            "allOf" : [ {
              "properties" : {
                "type" : {
                  "const" : "retry-step-group"
                }
              }
            }, {
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/common/EmptySpec"
                }
              }
            } ]
          }, {
            "allOf" : [ {
              "properties" : {
                "type" : {
                  "const" : "stage-rollback"
                }
              }
            }, {
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/common/EmptySpec"
                }
              }
            } ]
          }, {
            "allOf" : [ {
              "properties" : {
                "type" : {
                  "const" : "pipeline-rollback"
                }
              }
            }, {
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/common/EmptySpec"
                }
              }
            } ]
          }, {
            "allOf" : [ {
              "properties" : {
                "type" : {
                  "const" : "abort"
                }
              }
            }, {
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/common/Abort"
                }
              }
            } ]
          }, {
            "allOf" : [ {
              "properties" : {
                "type" : {
                  "const" : "ignore"
                }
              }
            }, {
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/common/Ignore"
                }
              }
            } ]
          }, {
            "allOf" : [ {
              "properties" : {
                "type" : {
                  "const" : "retry"
                }
              }
            }, {
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/common/Retry"
                }
              }
            } ]
          }, {
            "allOf" : [ {
              "properties" : {
                "type" : {
                  "const" : "manual-intervention"
                }
              }
            }, {
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/common/ManualIntervention"
                }
              }
            } ]
          } ]
        },
        "EmptySpec" : {
          "title" : "EmptySpec",
          "type" : "object",
          "properties" : { }
        },
        "Abort" : {
          "title" : "Abort",
          "type" : "object",
          "properties" : { }
        },
        "Ignore" : {
          "title" : "Ignore",
          "type" : "object",
          "properties" : { }
        },
        "Retry" : {
          "title" : "Retry",
          "properties" : {
            "attempts" : {
              "type" : "number",
              "example" : 3
            },
            "interval" : {
              "anyOf" : [ {
                "items" : {
                  "type" : "string",
                  "format" : "duration"
                },
                "type" : "array",
                "example" : [ "5s", "10s", "20s" ]
              }, {
                "type" : "string",
                "example" : "1m",
                "format" : "duration"
              } ]
            },
            "failure" : {
              "$ref" : "#/definitions/pipeline/common/RetryFailure"
            }
          },
          "type" : "object"
        },
        "RetryFailure" : {
          "title" : "RetryFailure",
          "type" : "object",
          "properties" : {
            "action" : {
              "$ref" : "#/definitions/pipeline/common/RetryFailureAction"
            }
          }
        },
        "RetryFailureAction" : {
          "title" : "RetryFailureAction",
          "type" : "object",
          "description" : "Failure action on failure for all retries",
          "properties" : {
            "type" : {
              "description" : "Type defines the failure strategy type.",
              "type" : "string",
              "enum" : [ "abort", "fail", "ignore", "manual-intervention", "pipeline-rollback", "stage-rollback", "success" ]
            }
          },
          "oneOf" : [ {
            "allOf" : [ {
              "properties" : {
                "type" : {
                  "const" : "success"
                }
              }
            }, {
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/common/EmptySpec"
                }
              }
            } ]
          }, {
            "allOf" : [ {
              "properties" : {
                "type" : {
                  "const" : "fail"
                }
              }
            }, {
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/common/EmptySpec"
                }
              }
            } ]
          }, {
            "allOf" : [ {
              "properties" : {
                "type" : {
                  "const" : "stage-rollback"
                }
              }
            }, {
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/common/EmptySpec"
                }
              }
            } ]
          }, {
            "allOf" : [ {
              "properties" : {
                "type" : {
                  "const" : "pipeline-rollback"
                }
              }
            }, {
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/common/EmptySpec"
                }
              }
            } ]
          }, {
            "allOf" : [ {
              "properties" : {
                "type" : {
                  "const" : "abort"
                }
              }
            }, {
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/common/Abort"
                }
              }
            } ]
          }, {
            "allOf" : [ {
              "properties" : {
                "type" : {
                  "const" : "ignore"
                }
              }
            }, {
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/common/Ignore"
                }
              }
            } ]
          }, {
            "allOf" : [ {
              "properties" : {
                "type" : {
                  "const" : "manual-intervention"
                }
              }
            }, {
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/common/ManualIntervention"
                }
              }
            } ]
          } ]
        },
        "ManualIntervention" : {
          "title" : "ManualIntervention",
          "properties" : {
            "timeout_action" : {
              "$ref" : "#/definitions/pipeline/common/TimeoutAction"
            },
            "timeout" : {
              "format" : "duration",
              "type" : "string",
              "example" : "30m"
            }
          },
          "type" : "object"
        },
        "TimeoutAction" : {
          "title" : "TimeoutAction",
          "type" : "object",
          "description" : "Manual intervention for timeout failure action",
          "properties" : {
            "type" : {
              "description" : "Type defines the failure strategy type.",
              "type" : "string",
              "enum" : [ "abort", "ignore", "success", "stage-rollback", "pipeline-rollback", "fail" ]
            }
          },
          "oneOf" : [ {
            "allOf" : [ {
              "properties" : {
                "type" : {
                  "const" : "abort"
                }
              }
            }, {
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/common/Abort"
                }
              }
            } ]
          }, {
            "allOf" : [ {
              "properties" : {
                "type" : {
                  "const" : "ignore"
                }
              }
            }, {
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/common/Ignore"
                }
              }
            } ]
          }, {
            "allOf" : [ {
              "properties" : {
                "type" : {
                  "const" : "fail"
                }
              }
            }, {
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/common/EmptySpec"
                }
              }
            } ]
          }, {
            "allOf" : [ {
              "properties" : {
                "type" : {
                  "const" : "stage-rollback"
                }
              }
            }, {
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/common/EmptySpec"
                }
              }
            } ]
          }, {
            "allOf" : [ {
              "properties" : {
                "type" : {
                  "const" : "pipeline-rollback"
                }
              }
            }, {
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/common/EmptySpec"
                }
              }
            } ]
          }, {
            "allOf" : [ {
              "properties" : {
                "type" : {
                  "const" : "success"
                }
              }
            }, {
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/common/EmptySpec"
                }
              }
            } ]
          } ]
        },
        "Strategy" : {
          "title" : "Strategy",
          "type" : "object",
          "description" : "Strategy defines an optional execution strategy.",
          "properties" : {
            "type" : {
              "description" : "Type defines the execution strategy type.",
              "type" : "string",
              "enum" : [ "for", "matrix", "while" ]
            }
          },
          "oneOf" : [ {
            "allOf" : [ {
              "properties" : {
                "type" : {
                  "const" : "for"
                }
              }
            }, {
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/common/For"
                }
              }
            } ]
          }, {
            "allOf" : [ {
              "properties" : {
                "type" : {
                  "const" : "matrix"
                }
              }
            }, {
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/common/Matrix"
                }
              }
            } ]
          }, {
            "allOf" : [ {
              "properties" : {
                "type" : {
                  "const" : "while"
                }
              }
            }, {
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/common/While"
                }
              }
            } ]
          } ]
        },
        "For" : {
          "title" : "For",
          "description" : "Defines a for loop execution strategy.",
          "type" : "object",
          "properties" : {
            "concurrency" : {
              "description" : "Defines the for loop concurrency.",
              "type" : "number"
            },
            "iterations" : {
              "type" : "number"
            }
          }
        },
        "Matrix" : {
          "title" : "Matrix",
          "type" : "object",
          "description" : "Defines a matrix execution strategy.",
          "properties" : {
            "axis" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "concurrency" : {
              "description" : "Defines the matrix concurrency.",
              "type" : "number"
            },
            "nodeName" : {
              "description" : "Defines the naming for matrix nodes.",
              "type" : "string"
            },
            "include" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              }
            },
            "exclude" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "While" : {
          "title" : "While",
          "description" : "Defines a while loop execution strategy.",
          "type" : "object",
          "properties" : {
            "condition" : {
              "type" : "string",
              "description" : "Defines the while condition."
            },
            "iterations" : {
              "type" : "number",
              "description" : "Defines the maximum number of iterations."
            }
          }
        },
        "StringVariable" : {
          "title" : "StringVariable",
          "allOf" : [ {
            "$ref" : "#/definitions/pipeline/common/Variable"
          }, {
            "type" : "object",
            "required" : [ "type", "value" ],
            "properties" : {
              "default" : {
                "type" : "string"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "string" ]
              },
              "value" : {
                "type" : "string"
              },
              "validator" : {
                "type" : "object",
                "oneOf" : [ {
                  "allOf" : [ {
                    "properties" : {
                      "allowed" : {
                        "description" : "defines allowed values for a variable",
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    }
                  } ],
                  "required" : [ "allowed" ]
                }, {
                  "allOf" : [ {
                    "properties" : {
                      "regex" : {
                        "description" : "defines regex pattern for a variable value",
                        "type" : "string"
                      }
                    }
                  } ],
                  "required" : [ "regex" ]
                } ]
              }
            }
          } ],
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "Variable" : {
          "title" : "Variable",
          "type" : "object",
          "discriminator" : "type",
          "description" : "Variable defines a variable object",
          "properties" : {
            "type" : {
              "description" : "Type defines the variable type.",
              "type" : "string",
              "enum" : [ "string", "number", "boolean", "array", "object", "secret" ]
            },
            "desc" : {
              "type" : "string",
              "description" : "Desc defines the variable description."
            },
            "required" : {
              "type" : "boolean",
              "description" : "Required indicates the variable is required."
            },
            "execution_input" : {
              "description" : "a boolean that defines whether the value is an execution input",
              "type" : "boolean",
              "default" : false
            }
          }
        },
        "NumberVariable" : {
          "title" : "NumberVariable",
          "allOf" : [ {
            "$ref" : "#/definitions/pipeline/common/Variable"
          }, {
            "type" : "object",
            "required" : [ "type", "value" ],
            "properties" : {
              "default" : {
                "type" : "number",
                "format" : "double"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "number" ]
              },
              "value" : {
                "oneOf" : [ {
                  "type" : "number",
                  "format" : "double"
                }, {
                  "type" : "string",
                  "pattern" : "((^[+-]?[0-9]*\\.?[0-9]+$)|(<\\+.+>.*))"
                } ]
              },
              "validator" : {
                "type" : "object",
                "oneOf" : [ {
                  "allOf" : [ {
                    "properties" : {
                      "allowed" : {
                        "description" : "defines allowed values for a variable",
                        "type" : "array",
                        "items" : {
                          "oneOf" : [ {
                            "type" : "number",
                            "format" : "double"
                          }, {
                            "type" : "string",
                            "pattern" : "((^[+-]?[0-9]*\\.?[0-9]+$)|(<\\+.+>.*))"
                          } ]
                        }
                      }
                    }
                  } ],
                  "required" : [ "allowed" ]
                }, {
                  "allOf" : [ {
                    "properties" : {
                      "regex" : {
                        "description" : "defines regex pattern for an variable value",
                        "type" : "string"
                      }
                    }
                  } ],
                  "required" : [ "regex" ]
                } ]
              }
            }
          } ],
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "ArrayVariable" : {
          "title" : "ArrayVariable",
          "allOf" : [ {
            "$ref" : "#/definitions/pipeline/common/Variable"
          }, {
            "type" : "object",
            "required" : [ "type", "value" ],
            "properties" : {
              "default" : {
                "type" : "array"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "array" ]
              },
              "value" : {
                "type" : "array"
              },
              "validator" : {
                "type" : "object",
                "oneOf" : [ {
                  "allOf" : [ {
                    "properties" : {
                      "allowed" : {
                        "description" : "defines allowed values for a variable",
                        "type" : "array",
                        "items" : {
                          "type" : "array"
                        }
                      }
                    }
                  } ],
                  "required" : [ "allowed" ]
                }, {
                  "allOf" : [ {
                    "properties" : {
                      "regex" : {
                        "description" : "defines regex pattern for a variable value",
                        "type" : "string"
                      }
                    }
                  } ],
                  "required" : [ "regex" ]
                } ]
              }
            }
          } ],
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "BooleanVariable" : {
          "title" : "BooleanVariable",
          "allOf" : [ {
            "$ref" : "#/definitions/pipeline/common/Variable"
          }, {
            "type" : "object",
            "required" : [ "type", "value" ],
            "properties" : {
              "default" : {
                "type" : "boolean"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "boolean" ]
              },
              "value" : {
                "type" : "boolean"
              }
            }
          } ],
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "ObjectVariable" : {
          "title" : "ObjectVariable",
          "allOf" : [ {
            "$ref" : "#/definitions/pipeline/common/Variable"
          }, {
            "type" : "object",
            "required" : [ "type", "value" ],
            "properties" : {
              "default" : {
                "type" : "object"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "object" ]
              },
              "value" : {
                "type" : "object"
              },
              "validator" : {
                "type" : "object",
                "oneOf" : [ {
                  "allOf" : [ {
                    "properties" : {
                      "allowed" : {
                        "description" : "defines allowed values for a variable",
                        "type" : "array",
                        "items" : {
                          "type" : "object"
                        }
                      }
                    }
                  } ],
                  "required" : [ "allowed" ]
                }, {
                  "allOf" : [ {
                    "properties" : {
                      "regex" : {
                        "description" : "defines regex pattern for a variable value",
                        "type" : "string"
                      }
                    }
                  } ],
                  "required" : [ "regex" ]
                } ]
              }
            }
          } ],
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "SecretVariable" : {
          "title" : "SecretVariable",
          "allOf" : [ {
            "$ref" : "#/definitions/pipeline/common/Variable"
          }, {
            "type" : "object",
            "required" : [ "type", "value" ],
            "properties" : {
              "default" : {
                "type" : "string"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "secret" ]
              },
              "value" : {
                "type" : "string"
              }
            }
          } ],
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "StepElementConfig" : {
          "title" : "StepElementConfig",
          "type" : "object",
          "required" : [ "identifier", "name", "type" ],
          "properties" : {
            "description" : {
              "type" : "string",
              "desc" : "This is the description for StepElementConfig"
            },
            "enforce" : {
              "$ref" : "#/definitions/pipeline/common/PolicyConfig"
            },
            "failureStrategies" : {
              "oneOf" : [ {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                }
              }, {
                "type" : "string",
                "pattern" : "^<\\+input>$",
                "minLength" : 1
              } ]
            },
            "identifier" : {
              "type" : "string",
              "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
            },
            "name" : {
              "type" : "string",
              "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
            },
            "strategy" : {
              "$ref" : "#/definitions/pipeline/common/StrategyConfig"
            },
            "timeout" : {
              "type" : "string",
              "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+input>.*)|(.*<\\+.*>.*)|(^$))$"
            },
            "type" : {
              "type" : "string",
              "enum" : [ ]
            },
            "when" : {
              "oneOf" : [ {
                "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
              }, {
                "type" : "string",
                "pattern" : "^<\\+input>$",
                "minLength" : 1
              } ]
            }
          },
          "$schema" : "http://json-schema.org/draft-07/schema#",
          "allOf" : [ ]
        },
        "Delegate" : {
          "title" : "Delegate",
          "type" : "array",
          "description" : "Delegate defines the delegate matching logic.",
          "items" : {
            "type" : "string"
          }
        },
        "K8sDirectInfra" : {
          "title" : "K8sDirectInfra",
          "allOf" : [ {
            "$ref" : "#/definitions/pipeline/common/StepGroupInfra"
          }, {
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "spec" : {
                "$ref" : "#/definitions/pipeline/steps/custom/ContainerInfraYamlSpec"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "KubernetesDirect", "Delegate", "Noop" ]
              }
            }
          } ],
          "$schema" : "http://json-schema.org/draft-07/schema#",
          "properties" : {
            "description" : {
              "desc" : "This is the description for K8sDirectInfra"
            }
          }
        },
        "StepGroupInfra" : {
          "title" : "StepGroupInfra",
          "type" : "object",
          "discriminator" : "type",
          "properties" : {
            "type" : {
              "type" : "string",
              "enum" : [ "KubernetesDirect", "Delegate", "Noop" ]
            },
            "description" : {
              "desc" : "This is the description for StepGroupInfra"
            }
          },
          "$schema" : "http://json-schema.org/draft-07/schema#"
        }
      },
      "steps" : {
        "cd" : {
          "AsgBlueGreenDeployStepNode_template" : {
            "title" : "AsgBlueGreenDeployStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AsgBlueGreenDeploy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AsgBlueGreenDeploy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenDeployStepInfo"
                  }
                }
              }
            } ]
          },
          "AsgBlueGreenDeployStepInfo" : {
            "title" : "AsgBlueGreenDeployStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "asgName" : {
                  "type" : "string"
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "instances" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/AsgInstances"
                },
                "loadBalancer" : {
                  "type" : "string"
                },
                "loadBalancers" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/steps/cd/AwsAsgLoadBalancerConfigYaml"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "prodListener" : {
                  "type" : "string"
                },
                "prodListenerRuleArn" : {
                  "type" : "string"
                },
                "stageListener" : {
                  "type" : "string"
                },
                "stageListenerRuleArn" : {
                  "type" : "string"
                },
                "useAlreadyRunningInstances" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "asgName" : {
                "type" : "string"
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "instances" : {
                "$ref" : "#/definitions/pipeline/steps/cd/AsgInstances"
              },
              "loadBalancer" : {
                "type" : "string"
              },
              "loadBalancers" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsAsgLoadBalancerConfigYaml"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "prodListener" : {
                "type" : "string"
              },
              "prodListenerRuleArn" : {
                "type" : "string"
              },
              "stageListener" : {
                "type" : "string"
              },
              "stageListenerRuleArn" : {
                "type" : "string"
              },
              "useAlreadyRunningInstances" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for AsgBlueGreenDeployStepInfo"
              }
            }
          },
          "AsgInstances" : {
            "title" : "AsgInstances",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "Fixed", "CurrentRunning" ]
              },
              "description" : {
                "desc" : "This is the description for AsgInstances"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "CurrentRunning"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgCurrentRunningInstances"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Fixed"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgFixedInstances"
                  }
                }
              }
            } ]
          },
          "AsgCurrentRunningInstances" : {
            "title" : "AsgCurrentRunningInstances",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/AsgInstancesSpec"
            }, {
              "type" : "object"
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for AsgCurrentRunningInstances"
              }
            }
          },
          "AsgInstancesSpec" : {
            "title" : "AsgInstancesSpec",
            "type" : "object",
            "discriminator" : "type",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "Fixed", "CurrentRunning" ]
              },
              "description" : {
                "desc" : "This is the description for AsgInstancesSpec"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "AsgFixedInstances" : {
            "title" : "AsgFixedInstances",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/AsgInstancesSpec"
            }, {
              "type" : "object",
              "required" : [ "desired", "max", "min" ],
              "properties" : {
                "desired" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "max" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "min" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for AsgFixedInstances"
              }
            }
          },
          "AwsAsgLoadBalancerConfigYaml" : {
            "title" : "AwsAsgLoadBalancerConfigYaml",
            "type" : "object",
            "required" : [ "loadBalancer", "prodListener", "prodListenerRuleArn" ],
            "properties" : {
              "loadBalancer" : {
                "type" : "string"
              },
              "prodListener" : {
                "type" : "string"
              },
              "prodListenerRuleArn" : {
                "type" : "string"
              },
              "stageListener" : {
                "type" : "string"
              },
              "stageListenerRuleArn" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for AwsAsgLoadBalancerConfigYaml"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "AsgBlueGreenRollbackStepNode_template" : {
            "title" : "AsgBlueGreenRollbackStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AsgBlueGreenRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AsgBlueGreenRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "AsgBlueGreenRollbackStepInfo" : {
            "title" : "AsgBlueGreenRollbackStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for AsgBlueGreenRollbackStepInfo"
              }
            }
          },
          "AsgBlueGreenSwapServiceStepNode_template" : {
            "title" : "AsgBlueGreenSwapServiceStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AsgBlueGreenSwapService" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AsgBlueGreenSwapService"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenSwapServiceStepInfo"
                  }
                }
              }
            } ]
          },
          "AsgBlueGreenSwapServiceStepInfo" : {
            "title" : "AsgBlueGreenSwapServiceStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "downsizeOldAsg" ],
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "downsizeOldAsg" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "downsizeOldAsg" ],
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "downsizeOldAsg" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for AsgBlueGreenSwapServiceStepInfo"
              }
            }
          },
          "AsgShiftTrafficStepNode_template" : {
            "title" : "AsgShiftTrafficStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AsgShiftTraffic" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AsgShiftTraffic"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgShiftTrafficStepInfo"
                  }
                }
              }
            } ]
          },
          "AsgShiftTrafficStepInfo" : {
            "title" : "AsgShiftTrafficStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "weight", "downsizeOldAsg" ],
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "weight" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "downsizeOldAsg" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "downsizeOldAsg" ],
            "properties" : {
              "description" : {
                "desc" : "This is the description for AsgShiftTrafficStepInfo"
              }
            }
          },
          "AsgCanaryDeleteStepNode_template" : {
            "title" : "AsgCanaryDeleteStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AsgCanaryDelete" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AsgCanaryDelete"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgCanaryDeleteStepInfo"
                  }
                }
              }
            } ]
          },
          "AsgCanaryDeleteStepInfo" : {
            "title" : "AsgCanaryDeleteStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for AsgCanaryDeleteStepInfo"
              }
            }
          },
          "AsgCanaryDeployStepNode_template" : {
            "title" : "AsgCanaryDeployStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AsgCanaryDeploy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AsgCanaryDeploy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgCanaryDeployStepInfo"
                  }
                }
              }
            } ]
          },
          "AsgCanaryDeployStepInfo" : {
            "title" : "AsgCanaryDeployStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "instanceSelection" ],
              "properties" : {
                "asgName" : {
                  "type" : "string"
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "instanceSelection" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/Capacity"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "instanceSelection" ],
            "properties" : {
              "asgName" : {
                "type" : "string"
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "instanceSelection" : {
                "$ref" : "#/definitions/pipeline/steps/cd/Capacity"
              },
              "description" : {
                "desc" : "This is the description for AsgCanaryDeployStepInfo"
              }
            }
          },
          "Capacity" : {
            "title" : "Capacity",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for Capacity"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Count"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/CountCapacitySpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Percentage"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/PercentageCapacitySpec"
                  }
                }
              }
            } ]
          },
          "CountCapacitySpec" : {
            "title" : "CountCapacitySpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/CapacitySpec"
            }, {
              "type" : "object",
              "required" : [ "count" ],
              "properties" : {
                "count" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32",
                    "minimum" : 0
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for CountCapacitySpec"
              }
            }
          },
          "CapacitySpec" : {
            "title" : "CapacitySpec",
            "type" : "object",
            "discriminator" : "type",
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for CapacitySpec"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "PercentageCapacitySpec" : {
            "title" : "PercentageCapacitySpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/CapacitySpec"
            }, {
              "type" : "object",
              "required" : [ "percentage" ],
              "properties" : {
                "percentage" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32",
                    "minimum" : 0,
                    "maximum" : 100
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for PercentageCapacitySpec"
              }
            }
          },
          "AsgRollingDeployStepNode_template" : {
            "title" : "AsgRollingDeployStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AsgRollingDeploy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AsgRollingDeploy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgRollingDeployStepInfo"
                  }
                }
              }
            } ]
          },
          "AsgRollingDeployStepInfo" : {
            "title" : "AsgRollingDeployStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "asgName" : {
                  "type" : "string"
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "instanceWarmup" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32",
                    "minimum" : 0
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "instances" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/AsgInstances"
                },
                "minimumHealthyPercentage" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32",
                    "minimum" : 0,
                    "maximum" : 100
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "skipMatching" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "useAlreadyRunningInstances" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "asgName" : {
                "type" : "string"
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "instanceWarmup" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32",
                  "minimum" : 0
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "instances" : {
                "$ref" : "#/definitions/pipeline/steps/cd/AsgInstances"
              },
              "minimumHealthyPercentage" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32",
                  "minimum" : 0,
                  "maximum" : 100
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "skipMatching" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "useAlreadyRunningInstances" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for AsgRollingDeployStepInfo"
              }
            }
          },
          "AsgRollingRollbackStepNode_template" : {
            "title" : "AsgRollingRollbackStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AsgRollingRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AsgRollingRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgRollingRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "AsgRollingRollbackStepInfo" : {
            "title" : "AsgRollingRollbackStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for AsgRollingRollbackStepInfo"
              }
            }
          },
          "AwsLambdaDeployStepNode_template" : {
            "title" : "AwsLambdaDeployStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AwsLambdaDeploy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AwsLambdaDeploy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaDeployStepInfo"
                  }
                }
              }
            } ]
          },
          "AwsLambdaDeployStepInfo" : {
            "title" : "AwsLambdaDeployStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for AwsLambdaDeployStepInfo"
              }
            }
          },
          "AwsLambdaRollbackStepNode_template" : {
            "title" : "AwsLambdaRollbackStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AwsLambdaRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AwsLambdaRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "AwsLambdaRollbackStepInfo" : {
            "title" : "AwsLambdaRollbackStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for AwsLambdaRollbackStepInfo"
              }
            }
          },
          "AwsSamBuildStepNode_template" : {
            "title" : "AwsSamBuildStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AwsSamBuild" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AwsSamBuild"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsSamBuildStepInfo"
                  }
                }
              }
            } ]
          },
          "AwsSamBuildStepInfo" : {
            "title" : "AwsSamBuildStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "buildCommandOptions" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "connectorRef" : {
                  "type" : "string"
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "image" : {
                  "type" : "string"
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "samBuildDockerRegistryConnectorRef" : {
                  "type" : "string"
                },
                "samVersion" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "buildCommandOptions" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "connectorRef" : {
                "type" : "string"
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "image" : {
                "type" : "string"
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "samBuildDockerRegistryConnectorRef" : {
                "type" : "string"
              },
              "samVersion" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for AwsSamBuildStepInfo"
              }
            }
          },
          "AwsSamDeployStepNode_template" : {
            "title" : "AwsSamDeployStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AwsSamDeploy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AwsSamDeploy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsSamDeployStepInfo"
                  }
                }
              }
            } ]
          },
          "AwsSamDeployStepInfo" : {
            "title" : "AwsSamDeployStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "stackName" ],
              "properties" : {
                "connectorRef" : {
                  "type" : "string"
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "deployCommandOptions" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "image" : {
                  "type" : "string"
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "samVersion" : {
                  "type" : "string"
                },
                "stackName" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "stackName" ],
            "properties" : {
              "connectorRef" : {
                "type" : "string"
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "deployCommandOptions" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "image" : {
                "type" : "string"
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "samVersion" : {
                "type" : "string"
              },
              "stackName" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for AwsSamDeployStepInfo"
              }
            }
          },
          "AwsSamRollbackStepNode_template" : {
            "title" : "AwsSamRollbackStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AwsSamRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AwsSamRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsSamRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "AwsSamRollbackStepInfo" : {
            "title" : "AwsSamRollbackStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for AwsSamRollbackStepInfo"
              }
            }
          },
          "AzureARMRollbackStepNode_template" : {
            "title" : "AzureARMRollbackStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AzureARMRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AzureARMRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureARMRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "AzureARMRollbackStepInfo" : {
            "title" : "AzureARMRollbackStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "provisionerIdentifier" ],
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "provisionerIdentifier" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "provisionerIdentifier" ],
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "provisionerIdentifier" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for AzureARMRollbackStepInfo"
              }
            }
          },
          "AzureCreateARMResourceStepNode_template" : {
            "title" : "AzureCreateARMResourceStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AzureCreateARMResource" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AzureCreateARMResource"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateARMResourceStepInfo"
                  }
                }
              }
            } ]
          },
          "AzureCreateARMResourceStepInfo" : {
            "title" : "AzureCreateARMResourceStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "configuration", "provisionerIdentifier" ],
              "properties" : {
                "configuration" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateARMResourceStepConfiguration"
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "metadata" : {
                  "type" : "string"
                },
                "provisionerIdentifier" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "configuration", "provisionerIdentifier" ],
            "properties" : {
              "configuration" : {
                "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateARMResourceStepConfiguration"
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "metadata" : {
                "type" : "string"
              },
              "provisionerIdentifier" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for AzureCreateARMResourceStepInfo"
              }
            }
          },
          "AzureCreateARMResourceStepConfiguration" : {
            "title" : "AzureCreateARMResourceStepConfiguration",
            "type" : "object",
            "required" : [ "connectorRef", "scope", "template" ],
            "properties" : {
              "connectorRef" : {
                "type" : "string"
              },
              "parameters" : {
                "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateARMResourceParameterFile"
              },
              "scope" : {
                "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateARMResourceStepScope"
              },
              "template" : {
                "$ref" : "#/definitions/pipeline/steps/cd/AzureTemplateFile"
              },
              "description" : {
                "desc" : "This is the description for AzureCreateARMResourceStepConfiguration"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "AzureCreateARMResourceParameterFile" : {
            "title" : "AzureCreateARMResourceParameterFile",
            "type" : "object",
            "required" : [ "store" ],
            "properties" : {
              "store" : {
                "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
              },
              "description" : {
                "desc" : "This is the description for AzureCreateARMResourceParameterFile"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "StoreConfigWrapper" : {
            "title" : "StoreConfigWrapper",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "metadata" : {
                "type" : "string"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "CustomRemote", "Git", "Github", "Bitbucket", "GitLab", "Http", "S3", "Gcs", "Inline", "Artifactory", "S3Url", "InheritFromManifest", "Harness", "OciHelmChart", "AzureRepo" ]
              },
              "description" : {
                "desc" : "This is the description for StoreConfigWrapper"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Artifactory"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ArtifactoryStoreConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AzureRepo"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureRepoStore"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Bitbucket"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/BitbucketStore"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "CustomRemote"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/CustomRemoteStoreConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Gcs"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/GcsStoreConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Git"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/GitStore"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "GitLab"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/GitLabStore"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Github"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/GithubStore"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Harness"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/HarnessStore"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Http"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/HttpStoreConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "InheritFromManifest"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/InheritFromManifestStoreConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Inline"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/InlineStoreConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "OciHelmChart"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/OciHelmChartConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "S3"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/S3StoreConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "S3Url"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/S3UrlStoreConfig"
                  }
                }
              }
            } ]
          },
          "ArtifactoryStoreConfig" : {
            "title" : "ArtifactoryStoreConfig",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/StoreConfig"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "repositoryName" ],
              "properties" : {
                "artifactPaths" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "connectorRef" : {
                  "type" : "string"
                },
                "metadata" : {
                  "type" : "string"
                },
                "repositoryName" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for ArtifactoryStoreConfig"
              }
            }
          },
          "StoreConfig" : {
            "title" : "StoreConfig",
            "type" : "object",
            "discriminator" : "type",
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for StoreConfig"
              }
            }
          },
          "AzureRepoStore" : {
            "title" : "AzureRepoStore",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/StoreConfig"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "gitFetchType" ],
              "properties" : {
                "branch" : {
                  "type" : "string"
                },
                "commitId" : {
                  "type" : "string"
                },
                "connectorRef" : {
                  "type" : "string"
                },
                "folderPath" : {
                  "type" : "string"
                },
                "gitFetchType" : {
                  "type" : "string",
                  "enum" : [ "Branch", "Commit" ]
                },
                "paths" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "repoName" : {
                  "type" : "string"
                }
              }
            }, {
              "oneOf" : [ {
                "required" : [ "commitId" ]
              }, {
                "required" : [ "branch" ]
              } ]
            }, {
              "oneOf" : [ {
                "required" : [ "folderPath" ]
              }, {
                "required" : [ "paths" ]
              } ]
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for AzureRepoStore"
              }
            }
          },
          "BitbucketStore" : {
            "title" : "BitbucketStore",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/StoreConfig"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "gitFetchType" ],
              "properties" : {
                "branch" : {
                  "type" : "string"
                },
                "commitId" : {
                  "type" : "string"
                },
                "connectorRef" : {
                  "type" : "string"
                },
                "folderPath" : {
                  "type" : "string"
                },
                "gitFetchType" : {
                  "type" : "string",
                  "enum" : [ "Branch", "Commit" ]
                },
                "paths" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "repoName" : {
                  "type" : "string"
                }
              }
            }, {
              "oneOf" : [ {
                "required" : [ "commitId" ]
              }, {
                "required" : [ "branch" ]
              } ]
            }, {
              "oneOf" : [ {
                "required" : [ "folderPath" ]
              }, {
                "required" : [ "paths" ]
              } ]
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for BitbucketStore"
              }
            }
          },
          "CustomRemoteStoreConfig" : {
            "title" : "CustomRemoteStoreConfig",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/StoreConfig"
            }, {
              "type" : "object",
              "required" : [ "extractionScript", "filePath" ],
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "extractionScript" : {
                  "type" : "string"
                },
                "filePath" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for CustomRemoteStoreConfig"
              }
            }
          },
          "GcsStoreConfig" : {
            "title" : "GcsStoreConfig",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/StoreConfig"
            }, {
              "type" : "object",
              "properties" : {
                "bucketName" : {
                  "type" : "string"
                },
                "connectorRef" : {
                  "type" : "string"
                },
                "folderPath" : {
                  "type" : "string"
                },
                "metadata" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for GcsStoreConfig"
              }
            }
          },
          "GitStore" : {
            "title" : "GitStore",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/StoreConfig"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "gitFetchType" ],
              "properties" : {
                "branch" : {
                  "type" : "string"
                },
                "commitId" : {
                  "type" : "string"
                },
                "connectorRef" : {
                  "type" : "string"
                },
                "folderPath" : {
                  "type" : "string"
                },
                "gitFetchType" : {
                  "type" : "string",
                  "enum" : [ "Branch", "Commit" ]
                },
                "paths" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "repoName" : {
                  "type" : "string"
                }
              }
            }, {
              "oneOf" : [ {
                "required" : [ "commitId" ]
              }, {
                "required" : [ "branch" ]
              } ]
            }, {
              "oneOf" : [ {
                "required" : [ "folderPath" ]
              }, {
                "required" : [ "paths" ]
              } ]
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for GitStore"
              }
            }
          },
          "GitLabStore" : {
            "title" : "GitLabStore",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/StoreConfig"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "gitFetchType" ],
              "properties" : {
                "branch" : {
                  "type" : "string"
                },
                "commitId" : {
                  "type" : "string"
                },
                "connectorRef" : {
                  "type" : "string"
                },
                "folderPath" : {
                  "type" : "string"
                },
                "gitFetchType" : {
                  "type" : "string",
                  "enum" : [ "Branch", "Commit" ]
                },
                "paths" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "repoName" : {
                  "type" : "string"
                }
              }
            }, {
              "oneOf" : [ {
                "required" : [ "commitId" ]
              }, {
                "required" : [ "branch" ]
              } ]
            }, {
              "oneOf" : [ {
                "required" : [ "folderPath" ]
              }, {
                "required" : [ "paths" ]
              } ]
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for GitLabStore"
              }
            }
          },
          "GithubStore" : {
            "title" : "GithubStore",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/StoreConfig"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "gitFetchType" ],
              "properties" : {
                "branch" : {
                  "type" : "string"
                },
                "commitId" : {
                  "type" : "string"
                },
                "connectorRef" : {
                  "type" : "string"
                },
                "folderPath" : {
                  "type" : "string"
                },
                "gitFetchType" : {
                  "type" : "string",
                  "enum" : [ "Branch", "Commit" ]
                },
                "paths" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "repoName" : {
                  "type" : "string"
                }
              }
            }, {
              "oneOf" : [ {
                "required" : [ "commitId" ]
              }, {
                "required" : [ "branch" ]
              } ]
            }, {
              "oneOf" : [ {
                "required" : [ "folderPath" ]
              }, {
                "required" : [ "paths" ]
              } ]
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for GithubStore"
              }
            }
          },
          "HttpStoreConfig" : {
            "title" : "HttpStoreConfig",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/StoreConfig"
            }, {
              "type" : "object",
              "properties" : {
                "connectorRef" : {
                  "type" : "string"
                },
                "metadata" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for HttpStoreConfig"
              }
            }
          },
          "InheritFromManifestStoreConfig" : {
            "title" : "InheritFromManifestStoreConfig",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/StoreConfig"
            }, {
              "type" : "object",
              "properties" : {
                "paths" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for InheritFromManifestStoreConfig"
              }
            }
          },
          "InlineStoreConfig" : {
            "title" : "InlineStoreConfig",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/StoreConfig"
            }, {
              "type" : "object",
              "required" : [ "content" ],
              "properties" : {
                "content" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for InlineStoreConfig"
              }
            }
          },
          "OciHelmChartConfig" : {
            "title" : "OciHelmChartConfig",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/StoreConfig"
            }, {
              "type" : "object",
              "properties" : {
                "basePath" : {
                  "type" : "string"
                },
                "config" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/OciHelmChartStoreConfigWrapper"
                },
                "metadata" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for OciHelmChartConfig"
              }
            }
          },
          "OciHelmChartStoreConfigWrapper" : {
            "title" : "OciHelmChartStoreConfigWrapper",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "metadata" : {
                "type" : "string"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Generic", "ECR" ]
              },
              "description" : {
                "desc" : "This is the description for OciHelmChartStoreConfigWrapper"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ECR"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/OciHelmChartStoreEcrConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Generic"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/OciHelmChartStoreGenericConfig"
                  }
                }
              }
            } ]
          },
          "OciHelmChartStoreEcrConfig" : {
            "title" : "OciHelmChartStoreEcrConfig",
            "allOf" : [ { }, {
              "type" : "object",
              "required" : [ "connectorRef", "region" ],
              "properties" : {
                "connectorRef" : {
                  "type" : "string"
                },
                "metadata" : {
                  "type" : "string"
                },
                "region" : {
                  "type" : "string"
                },
                "registryId" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for OciHelmChartStoreEcrConfig"
              }
            }
          },
          "OciHelmChartStoreGenericConfig" : {
            "title" : "OciHelmChartStoreGenericConfig",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/OciHelmChartStoreConfig"
            }, {
              "type" : "object",
              "properties" : {
                "connectorRef" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/steps/cd/ParameterFieldString"
                  }, {
                    "type" : "string"
                  } ]
                },
                "metadata" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for OciHelmChartStoreGenericConfig"
              }
            }
          },
          "OciHelmChartStoreConfig" : {
            "title" : "OciHelmChartStoreConfig",
            "type" : "object",
            "discriminator" : "type",
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for OciHelmChartStoreConfig"
              }
            }
          },
          "ParameterFieldString" : {
            "title" : "ParameterFieldString",
            "type" : "object",
            "properties" : {
              "defaultValue" : {
                "type" : "string"
              },
              "executionInput" : {
                "type" : "boolean"
              },
              "expression" : {
                "type" : "boolean"
              },
              "expressionValue" : {
                "type" : "string"
              },
              "inputSetValidator" : {
                "$ref" : "#/definitions/pipeline/common/InputSetValidator"
              },
              "jsonResponseField" : {
                "type" : "boolean"
              },
              "responseField" : {
                "type" : "string"
              },
              "typeString" : {
                "type" : "boolean"
              },
              "value" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for ParameterFieldString"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "S3StoreConfig" : {
            "title" : "S3StoreConfig",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/StoreConfig"
            }, {
              "type" : "object",
              "properties" : {
                "bucketName" : {
                  "type" : "string"
                },
                "connectorRef" : {
                  "type" : "string"
                },
                "folderPath" : {
                  "type" : "string"
                },
                "metadata" : {
                  "type" : "string"
                },
                "paths" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "region" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for S3StoreConfig"
              }
            }
          },
          "S3UrlStoreConfig" : {
            "title" : "S3UrlStoreConfig",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/StoreConfig"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "region", "urls" ],
              "properties" : {
                "connectorRef" : {
                  "type" : "string"
                },
                "metadata" : {
                  "type" : "string"
                },
                "region" : {
                  "type" : "string"
                },
                "urls" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for S3UrlStoreConfig"
              }
            }
          },
          "AzureCreateARMResourceStepScope" : {
            "title" : "AzureCreateARMResourceStepScope",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for AzureCreateARMResourceStepScope"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ManagementGroup"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureManagementSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ResourceGroup"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureResourceGroupSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Subscription"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureSubscriptionSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Tenant"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureTenantSpec"
                  }
                }
              }
            } ]
          },
          "AzureManagementSpec" : {
            "title" : "AzureManagementSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/AzureScopeType"
            }, {
              "type" : "object",
              "required" : [ "location", "managementGroupId" ],
              "properties" : {
                "location" : {
                  "type" : "string"
                },
                "managementGroupId" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for AzureManagementSpec"
              }
            }
          },
          "AzureScopeType" : {
            "title" : "AzureScopeType",
            "type" : "object",
            "discriminator" : "type",
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for AzureScopeType"
              }
            }
          },
          "AzureResourceGroupSpec" : {
            "title" : "AzureResourceGroupSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/AzureScopeType"
            }, {
              "type" : "object",
              "required" : [ "resourceGroup", "subscription" ],
              "properties" : {
                "mode" : {
                  "type" : "string",
                  "enum" : [ "Incremental", "Complete" ]
                },
                "resourceGroup" : {
                  "type" : "string"
                },
                "subscription" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for AzureResourceGroupSpec"
              }
            }
          },
          "AzureSubscriptionSpec" : {
            "title" : "AzureSubscriptionSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/AzureScopeType"
            }, {
              "type" : "object",
              "required" : [ "location", "subscription" ],
              "properties" : {
                "location" : {
                  "type" : "string"
                },
                "subscription" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for AzureSubscriptionSpec"
              }
            }
          },
          "AzureTenantSpec" : {
            "title" : "AzureTenantSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/AzureScopeType"
            }, {
              "type" : "object",
              "required" : [ "location" ],
              "properties" : {
                "location" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for AzureTenantSpec"
              }
            }
          },
          "AzureTemplateFile" : {
            "title" : "AzureTemplateFile",
            "type" : "object",
            "required" : [ "store" ],
            "properties" : {
              "store" : {
                "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
              },
              "description" : {
                "desc" : "This is the description for AzureTemplateFile"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "AzureCreateBPStepNode_template" : {
            "title" : "AzureCreateBPStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AzureCreateBPResource" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AzureCreateBPResource"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateBPStepInfo"
                  }
                }
              }
            } ]
          },
          "AzureCreateBPStepInfo" : {
            "title" : "AzureCreateBPStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "configuration" ],
              "properties" : {
                "configuration" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateBPStepConfiguration"
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "metadata" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "configuration" ],
            "properties" : {
              "configuration" : {
                "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateBPStepConfiguration"
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "metadata" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for AzureCreateBPStepInfo"
              }
            }
          },
          "AzureCreateBPStepConfiguration" : {
            "title" : "AzureCreateBPStepConfiguration",
            "type" : "object",
            "required" : [ "connectorRef", "scope", "template" ],
            "properties" : {
              "assignmentName" : {
                "type" : "string"
              },
              "connectorRef" : {
                "type" : "string"
              },
              "scope" : {
                "type" : "string",
                "enum" : [ "Subscription", "ManagementGroup" ]
              },
              "template" : {
                "$ref" : "#/definitions/pipeline/steps/cd/AzureTemplateFile"
              },
              "description" : {
                "desc" : "This is the description for AzureCreateBPStepConfiguration"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "AzureWebAppRollbackStepNode_template" : {
            "title" : "AzureWebAppRollbackStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AzureWebAppRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AzureWebAppRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "AzureWebAppRollbackStepInfo" : {
            "title" : "AzureWebAppRollbackStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for AzureWebAppRollbackStepInfo"
              }
            }
          },
          "AzureWebAppSlotDeploymentStepNode_template" : {
            "title" : "AzureWebAppSlotDeploymentStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AzureSlotDeployment" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AzureSlotDeployment"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppSlotDeploymentStepInfo"
                  }
                }
              }
            } ]
          },
          "AzureWebAppSlotDeploymentStepInfo" : {
            "title" : "AzureWebAppSlotDeploymentStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "deploymentSlot", "webApp" ],
              "properties" : {
                "clean" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "deploymentSlot" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "webApp" : {
                  "type" : "string",
                  "minLength" : 1
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "deploymentSlot", "webApp" ],
            "properties" : {
              "clean" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "deploymentSlot" : {
                "type" : "string",
                "minLength" : 1
              },
              "webApp" : {
                "type" : "string",
                "minLength" : 1
              },
              "description" : {
                "desc" : "This is the description for AzureWebAppSlotDeploymentStepInfo"
              }
            }
          },
          "AzureWebAppSwapSlotStepNode_template" : {
            "title" : "AzureWebAppSwapSlotStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AzureSwapSlot" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AzureSwapSlot"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppSwapSlotStepInfo"
                  }
                }
              }
            } ]
          },
          "AzureWebAppSwapSlotStepInfo" : {
            "title" : "AzureWebAppSwapSlotStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "targetSlot" ],
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "targetSlot" : {
                  "type" : "string",
                  "minLength" : 1
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "targetSlot" ],
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "targetSlot" : {
                "type" : "string",
                "minLength" : 1
              },
              "description" : {
                "desc" : "This is the description for AzureWebAppSwapSlotStepInfo"
              }
            }
          },
          "AzureWebAppTrafficShiftStepNode_template" : {
            "title" : "AzureWebAppTrafficShiftStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AzureTrafficShift" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AzureTrafficShift"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppTrafficShiftStepInfo"
                  }
                }
              }
            } ]
          },
          "AzureWebAppTrafficShiftStepInfo" : {
            "title" : "AzureWebAppTrafficShiftStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "traffic" ],
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "traffic" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/steps/cd/ParameterFieldString"
                  }, {
                    "type" : "string"
                  }, {
                    "type" : "number"
                  } ],
                  "minLength" : 1
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "traffic" ],
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "traffic" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/cd/ParameterFieldString"
                }, {
                  "type" : "string"
                }, {
                  "type" : "number"
                } ],
                "minLength" : 1
              },
              "description" : {
                "desc" : "This is the description for AzureWebAppTrafficShiftStepInfo"
              }
            }
          },
          "BambooBuildStepNode_template" : {
            "title" : "BambooBuildStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "BambooBuild" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "BambooBuild"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/BambooBuildStepInfo"
                  }
                }
              }
            } ]
          },
          "BambooBuildStepInfo" : {
            "title" : "BambooBuildStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "planName" ],
              "properties" : {
                "connectorRef" : {
                  "type" : "string"
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "metadata" : {
                  "type" : "string"
                },
                "planName" : {
                  "type" : "string"
                },
                "planParameter" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/steps/cd/BambooParameterField"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "connectorRef", "planName" ],
            "properties" : {
              "connectorRef" : {
                "type" : "string"
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "metadata" : {
                "type" : "string"
              },
              "planName" : {
                "type" : "string"
              },
              "planParameter" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/BambooParameterField"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for BambooBuildStepInfo"
              }
            }
          },
          "BambooParameterField" : {
            "title" : "BambooParameterField",
            "type" : "object",
            "required" : [ "value" ],
            "properties" : {
              "metadata" : {
                "type" : "string"
              },
              "name" : {
                "type" : "string"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "String", "Number" ]
              },
              "value" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for BambooParameterField"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ChaosStepNode_template" : {
            "title" : "ChaosStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Chaos" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Chaos"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ChaosStepInfo"
                  }
                }
              }
            } ]
          },
          "ChaosStepInfo" : {
            "title" : "ChaosStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "expectedResilienceScore", "experimentRef" ],
              "properties" : {
                "assertion" : {
                  "type" : "string"
                },
                "expectedResilienceScore" : {
                  "type" : "number",
                  "format" : "double"
                },
                "experimentRef" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "expectedResilienceScore", "experimentRef" ],
            "properties" : {
              "assertion" : {
                "type" : "string"
              },
              "expectedResilienceScore" : {
                "type" : "number",
                "format" : "double"
              },
              "experimentRef" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for ChaosStepInfo"
              }
            }
          },
          "CloudformationCreateStackStepNode_template" : {
            "title" : "CloudformationCreateStackStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "CreateStack" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "CreateStack"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/CloudformationCreateStackStepInfo"
                  }
                }
              }
            } ]
          },
          "CloudformationCreateStackStepInfo" : {
            "title" : "CloudformationCreateStackStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "configuration", "provisionerIdentifier" ],
              "properties" : {
                "configuration" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/CloudformationCreateStackStepConfiguration"
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "metadata" : {
                  "type" : "string"
                },
                "provisionerIdentifier" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "configuration", "provisionerIdentifier" ],
            "properties" : {
              "configuration" : {
                "$ref" : "#/definitions/pipeline/steps/cd/CloudformationCreateStackStepConfiguration"
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "metadata" : {
                "type" : "string"
              },
              "provisionerIdentifier" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for CloudformationCreateStackStepInfo"
              }
            }
          },
          "CloudformationCreateStackStepConfiguration" : {
            "title" : "CloudformationCreateStackStepConfiguration",
            "type" : "object",
            "required" : [ "connectorRef", "region", "stackName", "templateFile" ],
            "properties" : {
              "capabilities" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string"
                } ]
              },
              "connectorRef" : {
                "type" : "string"
              },
              "parameterOverrides" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                  } ]
                }
              },
              "parameters" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/CloudformationParametersFileSpec"
                }
              },
              "region" : {
                "type" : "string"
              },
              "roleArn" : {
                "type" : "string"
              },
              "skipOnStackStatuses" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string"
                } ]
              },
              "stackName" : {
                "type" : "string"
              },
              "tags" : {
                "$ref" : "#/definitions/pipeline/steps/cd/CloudformationTags"
              },
              "templateFile" : {
                "$ref" : "#/definitions/pipeline/steps/cd/CloudformationTemplateFile"
              },
              "description" : {
                "desc" : "This is the description for CloudformationCreateStackStepConfiguration"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "CloudformationParametersFileSpec" : {
            "title" : "CloudformationParametersFileSpec",
            "type" : "object",
            "required" : [ "identifier", "store" ],
            "properties" : {
              "identifier" : {
                "type" : "string"
              },
              "store" : {
                "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
              },
              "description" : {
                "desc" : "This is the description for CloudformationParametersFileSpec"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "CloudformationTags" : {
            "title" : "CloudformationTags",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for CloudformationTags"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Inline"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/InlineCloudformationTagsFileSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Remote"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/RemoteCloudformationTagsFileSpec"
                  }
                }
              }
            } ]
          },
          "InlineCloudformationTagsFileSpec" : {
            "title" : "InlineCloudformationTagsFileSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/CloudformationTagsFileSpec"
            }, {
              "type" : "object",
              "required" : [ "content" ],
              "properties" : {
                "content" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for InlineCloudformationTagsFileSpec"
              }
            }
          },
          "CloudformationTagsFileSpec" : {
            "title" : "CloudformationTagsFileSpec",
            "type" : "object",
            "discriminator" : "type",
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for CloudformationTagsFileSpec"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "RemoteCloudformationTagsFileSpec" : {
            "title" : "RemoteCloudformationTagsFileSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/CloudformationTagsFileSpec"
            }, {
              "type" : "object",
              "required" : [ "store" ],
              "properties" : {
                "store" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for RemoteCloudformationTagsFileSpec"
              }
            }
          },
          "CloudformationTemplateFile" : {
            "title" : "CloudformationTemplateFile",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for CloudformationTemplateFile"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Inline"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/InlineCloudformationTemplateFileSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Remote"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/RemoteCloudformationTemplateFileSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "S3URL"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/S3UrlCloudformationTemplateFileSpec"
                  }
                }
              }
            } ]
          },
          "InlineCloudformationTemplateFileSpec" : {
            "title" : "InlineCloudformationTemplateFileSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/CloudformationTemplateFileSpec"
            }, {
              "type" : "object",
              "required" : [ "templateBody" ],
              "properties" : {
                "templateBody" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for InlineCloudformationTemplateFileSpec"
              }
            }
          },
          "CloudformationTemplateFileSpec" : {
            "title" : "CloudformationTemplateFileSpec",
            "type" : "object",
            "discriminator" : "type",
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for CloudformationTemplateFileSpec"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "RemoteCloudformationTemplateFileSpec" : {
            "title" : "RemoteCloudformationTemplateFileSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/CloudformationTemplateFileSpec"
            }, {
              "type" : "object",
              "required" : [ "store" ],
              "properties" : {
                "store" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for RemoteCloudformationTemplateFileSpec"
              }
            }
          },
          "S3UrlCloudformationTemplateFileSpec" : {
            "title" : "S3UrlCloudformationTemplateFileSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/CloudformationTemplateFileSpec"
            }, {
              "type" : "object",
              "required" : [ "templateUrl" ],
              "properties" : {
                "templateUrl" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for S3UrlCloudformationTemplateFileSpec"
              }
            }
          },
          "CloudformationDeleteStackStepNode_template" : {
            "title" : "CloudformationDeleteStackStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "DeleteStack" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "DeleteStack"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/CloudformationDeleteStackStepInfo"
                  }
                }
              }
            } ]
          },
          "CloudformationDeleteStackStepInfo" : {
            "title" : "CloudformationDeleteStackStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "configuration" ],
              "properties" : {
                "configuration" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/CloudformationDeleteStackStepConfiguration"
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "metadata" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "configuration" ],
            "properties" : {
              "configuration" : {
                "$ref" : "#/definitions/pipeline/steps/cd/CloudformationDeleteStackStepConfiguration"
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "metadata" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for CloudformationDeleteStackStepInfo"
              }
            }
          },
          "CloudformationDeleteStackStepConfiguration" : {
            "title" : "CloudformationDeleteStackStepConfiguration",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for CloudformationDeleteStackStepConfiguration"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Inherited"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/InheritedCloudformationDeleteStackStepConfiguration"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Inline"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/InlineCloudformationDeleteStackStepConfiguration"
                  }
                }
              }
            } ]
          },
          "InheritedCloudformationDeleteStackStepConfiguration" : {
            "title" : "InheritedCloudformationDeleteStackStepConfiguration",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/CloudformationDeleteStackStepConfigurationSpec"
            }, {
              "type" : "object",
              "required" : [ "provisionerIdentifier" ],
              "properties" : {
                "provisionerIdentifier" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for InheritedCloudformationDeleteStackStepConfiguration"
              }
            }
          },
          "CloudformationDeleteStackStepConfigurationSpec" : {
            "title" : "CloudformationDeleteStackStepConfigurationSpec",
            "type" : "object",
            "discriminator" : "type",
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for CloudformationDeleteStackStepConfigurationSpec"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "InlineCloudformationDeleteStackStepConfiguration" : {
            "title" : "InlineCloudformationDeleteStackStepConfiguration",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/CloudformationDeleteStackStepConfigurationSpec"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "region", "stackName" ],
              "properties" : {
                "connectorRef" : {
                  "type" : "string"
                },
                "region" : {
                  "type" : "string"
                },
                "roleArn" : {
                  "type" : "string"
                },
                "stackName" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for InlineCloudformationDeleteStackStepConfiguration"
              }
            }
          },
          "CloudformationRollbackStepNode_template" : {
            "title" : "CloudformationRollbackStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "RollbackStack" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "RollbackStack"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/CloudformationRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "CloudformationRollbackStepInfo" : {
            "title" : "CloudformationRollbackStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "configuration" ],
              "properties" : {
                "configuration" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/CloudformationRollbackStepConfiguration"
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "metadata" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "configuration" ],
            "properties" : {
              "configuration" : {
                "$ref" : "#/definitions/pipeline/steps/cd/CloudformationRollbackStepConfiguration"
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "metadata" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for CloudformationRollbackStepInfo"
              }
            }
          },
          "CloudformationRollbackStepConfiguration" : {
            "title" : "CloudformationRollbackStepConfiguration",
            "type" : "object",
            "required" : [ "provisionerIdentifier" ],
            "properties" : {
              "provisionerIdentifier" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for CloudformationRollbackStepConfiguration"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "CommandStepNode_template" : {
            "title" : "CommandStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Command" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Command"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/CommandStepInfo"
                  }
                }
              }
            } ]
          },
          "CommandStepInfo" : {
            "title" : "CommandStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "onDelegate" ],
              "properties" : {
                "commandUnits" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/CommandUnitWrapper"
                  }
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "environmentVariables" : {
                  "type" : "array",
                  "items" : {
                    "oneOf" : [ {
                      "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                    } ]
                  }
                },
                "host" : {
                  "type" : "string"
                },
                "metadata" : {
                  "type" : "string"
                },
                "onDelegate" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                },
                "outputVariables" : {
                  "type" : "array",
                  "items" : {
                    "oneOf" : [ {
                      "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                    } ]
                  }
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "onDelegate" ],
            "properties" : {
              "commandUnits" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/CommandUnitWrapper"
                }
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "environmentVariables" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                  } ]
                }
              },
              "host" : {
                "type" : "string"
              },
              "metadata" : {
                "type" : "string"
              },
              "onDelegate" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "outputVariables" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                  } ]
                }
              },
              "description" : {
                "desc" : "This is the description for CommandStepInfo"
              }
            }
          },
          "CommandUnitWrapper" : {
            "title" : "CommandUnitWrapper",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "identifier" : {
                "type" : "string"
              },
              "name" : {
                "type" : "string"
              },
              "type" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for CommandUnitWrapper"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Copy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/CopyCommandUnitSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "DownloadArtifact"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/DownloadArtifactCommandUnitSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Script"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ScriptCommandUnitSpec"
                  }
                }
              }
            } ]
          },
          "CopyCommandUnitSpec" : {
            "title" : "CopyCommandUnitSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/CommandUnitBaseSpec"
            }, {
              "type" : "object",
              "required" : [ "destinationPath", "sourceType" ],
              "properties" : {
                "destinationPath" : {
                  "type" : "string"
                },
                "sourceType" : {
                  "type" : "string",
                  "enum" : [ "Artifact", "Config" ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for CopyCommandUnitSpec"
              }
            }
          },
          "CommandUnitBaseSpec" : {
            "title" : "CommandUnitBaseSpec",
            "type" : "object",
            "discriminator" : "type",
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for CommandUnitBaseSpec"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "DownloadArtifactCommandUnitSpec" : {
            "title" : "DownloadArtifactCommandUnitSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/CommandUnitBaseSpec"
            }, {
              "type" : "object",
              "required" : [ "destinationPath" ],
              "properties" : {
                "destinationPath" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for DownloadArtifactCommandUnitSpec"
              }
            }
          },
          "ScriptCommandUnitSpec" : {
            "title" : "ScriptCommandUnitSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/CommandUnitBaseSpec"
            }, {
              "type" : "object",
              "required" : [ "shell", "source" ],
              "properties" : {
                "shell" : {
                  "type" : "string",
                  "enum" : [ "Bash", "PowerShell" ]
                },
                "source" : {
                  "$ref" : "#/definitions/pipeline/common/ShellScriptSourceWrapper"
                },
                "tailFiles" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TailFilePattern"
                  }
                },
                "workingDirectory" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for ScriptCommandUnitSpec"
              }
            }
          },
          "TailFilePattern" : {
            "title" : "TailFilePattern",
            "type" : "object",
            "properties" : {
              "tailFile" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/cd/ParameterFieldString"
                }, {
                  "type" : "string"
                } ]
              },
              "tailPattern" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/cd/ParameterFieldString"
                }, {
                  "type" : "string"
                } ]
              },
              "description" : {
                "desc" : "This is the description for TailFilePattern"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "DownloadManifestsStepNode_template" : {
            "title" : "DownloadManifestsStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "DownloadManifests" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "DownloadManifests"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/DownloadManifestsStepInfo"
                  }
                }
              }
            } ]
          },
          "DownloadManifestsStepInfo" : {
            "title" : "DownloadManifestsStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for DownloadManifestsStepInfo"
              }
            }
          },
          "EcsBlueGreenCreateServiceStepNode_template" : {
            "title" : "EcsBlueGreenCreateServiceStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "EcsBlueGreenCreateService" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "EcsBlueGreenCreateService"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsBlueGreenCreateServiceStepInfo"
                  }
                }
              }
            } ]
          },
          "EcsBlueGreenCreateServiceStepInfo" : {
            "title" : "EcsBlueGreenCreateServiceStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "loadBalancer", "prodListener", "prodListenerRuleArn", "stageListener", "stageListenerRuleArn" ],
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "enableAutoScalingInSwapStep" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "loadBalancer" : {
                  "type" : "string"
                },
                "prodListener" : {
                  "type" : "string"
                },
                "prodListenerRuleArn" : {
                  "type" : "string"
                },
                "sameAsAlreadyRunningInstances" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "stageListener" : {
                  "type" : "string"
                },
                "stageListenerRuleArn" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "loadBalancer", "prodListener", "prodListenerRuleArn", "stageListener", "stageListenerRuleArn" ],
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "enableAutoScalingInSwapStep" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "loadBalancer" : {
                "type" : "string"
              },
              "prodListener" : {
                "type" : "string"
              },
              "prodListenerRuleArn" : {
                "type" : "string"
              },
              "sameAsAlreadyRunningInstances" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "stageListener" : {
                "type" : "string"
              },
              "stageListenerRuleArn" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for EcsBlueGreenCreateServiceStepInfo"
              }
            }
          },
          "EcsBlueGreenRollbackStepNode_template" : {
            "title" : "EcsBlueGreenRollbackStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "EcsBlueGreenRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "EcsBlueGreenRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsBlueGreenRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "EcsBlueGreenRollbackStepInfo" : {
            "title" : "EcsBlueGreenRollbackStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for EcsBlueGreenRollbackStepInfo"
              }
            }
          },
          "EcsBlueGreenSwapTargetGroupsStepNode_template" : {
            "title" : "EcsBlueGreenSwapTargetGroupsStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "EcsBlueGreenSwapTargetGroups" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "EcsBlueGreenSwapTargetGroups"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsBlueGreenSwapTargetGroupsStepInfo"
                  }
                }
              }
            } ]
          },
          "EcsBlueGreenSwapTargetGroupsStepInfo" : {
            "title" : "EcsBlueGreenSwapTargetGroupsStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "doNotDownsizeOldService" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                },
                "downsizeOldServiceDelayInSecs" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "doNotDownsizeOldService" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "downsizeOldServiceDelayInSecs" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "description" : {
                "desc" : "This is the description for EcsBlueGreenSwapTargetGroupsStepInfo"
              }
            }
          },
          "EcsCanaryDeleteStepNode_template" : {
            "title" : "EcsCanaryDeleteStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "EcsCanaryDelete" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "EcsCanaryDelete"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsCanaryDeleteStepInfo"
                  }
                }
              }
            } ]
          },
          "EcsCanaryDeleteStepInfo" : {
            "title" : "EcsCanaryDeleteStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for EcsCanaryDeleteStepInfo"
              }
            }
          },
          "EcsCanaryDeployStepNode_template" : {
            "title" : "EcsCanaryDeployStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "EcsCanaryDeploy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "EcsCanaryDeploy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsCanaryDeployStepInfo"
                  }
                }
              }
            } ]
          },
          "EcsCanaryDeployStepInfo" : {
            "title" : "EcsCanaryDeployStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for EcsCanaryDeployStepInfo"
              }
            }
          },
          "EcsRollingDeployStepNode_template" : {
            "title" : "EcsRollingDeployStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "EcsRollingDeploy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "EcsRollingDeploy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsRollingDeployStepInfo"
                  }
                }
              }
            } ]
          },
          "EcsRollingDeployStepInfo" : {
            "title" : "EcsRollingDeployStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "forceNewDeployment" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "sameAsAlreadyRunningInstances" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "forceNewDeployment" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "sameAsAlreadyRunningInstances" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for EcsRollingDeployStepInfo"
              }
            }
          },
          "EcsRollingRollbackStepNode_template" : {
            "title" : "EcsRollingRollbackStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "EcsRollingRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "EcsRollingRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsRollingRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "EcsRollingRollbackStepInfo" : {
            "title" : "EcsRollingRollbackStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for EcsRollingRollbackStepInfo"
              }
            }
          },
          "EcsRunTaskStepNode_template" : {
            "title" : "EcsRunTaskStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "EcsRunTask" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "EcsRunTask"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsRunTaskStepInfo"
                  }
                }
              }
            } ]
          },
          "EcsRunTaskStepInfo" : {
            "title" : "EcsRunTaskStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "runTaskRequestDefinition" ],
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "runTaskRequestDefinition" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                },
                "skipSteadyStateCheck" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "taskDefinition" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                },
                "taskDefinitionArn" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "runTaskRequestDefinition" ],
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "runTaskRequestDefinition" : {
                "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
              },
              "skipSteadyStateCheck" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "taskDefinition" : {
                "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
              },
              "taskDefinitionArn" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for EcsRunTaskStepInfo"
              }
            }
          },
          "EcsUpgradeContainerStepNode_template" : {
            "title" : "EcsUpgradeContainerStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "EcsUpgradeContainer" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "EcsUpgradeContainer"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsUpgradeContainerStepInfo"
                  }
                }
              }
            } ]
          },
          "EcsUpgradeContainerStepInfo" : {
            "title" : "EcsUpgradeContainerStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "newServiceInstanceCount", "newServiceInstanceUnit" ],
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "downsizeOldServiceInstanceCount" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "downsizeOldServiceInstanceUnit" : {
                  "type" : "string"
                },
                "newServiceInstanceCount" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "newServiceInstanceUnit" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "newServiceInstanceCount", "newServiceInstanceUnit" ],
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "downsizeOldServiceInstanceCount" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "downsizeOldServiceInstanceUnit" : {
                "type" : "string"
              },
              "newServiceInstanceCount" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "newServiceInstanceUnit" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for EcsUpgradeContainerStepInfo"
              }
            }
          },
          "EcsServiceSetupStepNode_template" : {
            "title" : "EcsServiceSetupStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "EcsServiceSetup" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "EcsServiceSetup"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsServiceSetupStepInfo"
                  }
                }
              }
            } ]
          },
          "EcsServiceSetupStepInfo" : {
            "title" : "EcsServiceSetupStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "resizeStrategy" : {
                  "type" : "string"
                },
                "sameAsAlreadyRunningInstances" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "resizeStrategy" : {
                "type" : "string"
              },
              "sameAsAlreadyRunningInstances" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for EcsServiceSetupStepInfo"
              }
            }
          },
          "EcsBasicRollbackStepNode_template" : {
            "title" : "EcsBasicRollbackStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "EcsBasicRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "EcsBasicRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsBasicRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "EcsBasicRollbackStepInfo" : {
            "title" : "EcsBasicRollbackStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for EcsBasicRollbackStepInfo"
              }
            }
          },
          "ElastigroupBGStageSetupStepNode_template" : {
            "title" : "ElastigroupBGStageSetupStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "ElastigroupBGStageSetup" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ElastigroupBGStageSetup"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupBGStageSetupStepInfo"
                  }
                }
              }
            } ]
          },
          "ElastigroupBGStageSetupStepInfo" : {
            "title" : "ElastigroupBGStageSetupStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "connectedCloudProvider", "instances", "loadBalancers" ],
              "properties" : {
                "connectedCloudProvider" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/CloudProvider"
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "instances" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupInstances"
                },
                "loadBalancers" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/LoadBalancer"
                  }
                },
                "name" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "connectedCloudProvider", "instances", "loadBalancers" ],
            "properties" : {
              "connectedCloudProvider" : {
                "$ref" : "#/definitions/pipeline/steps/cd/CloudProvider"
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "instances" : {
                "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupInstances"
              },
              "loadBalancers" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/LoadBalancer"
                }
              },
              "name" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for ElastigroupBGStageSetupStepInfo"
              }
            }
          },
          "CloudProvider" : {
            "title" : "CloudProvider",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "AWS" ]
              },
              "description" : {
                "desc" : "This is the description for CloudProvider"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AWS"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsCloudProviderBasicConfig"
                  }
                }
              }
            } ]
          },
          "AwsCloudProviderBasicConfig" : {
            "title" : "AwsCloudProviderBasicConfig",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/CloudProviderSpec"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "region" ],
              "properties" : {
                "connectorRef" : {
                  "type" : "string"
                },
                "region" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for AwsCloudProviderBasicConfig"
              }
            }
          },
          "CloudProviderSpec" : {
            "title" : "CloudProviderSpec",
            "type" : "object",
            "discriminator" : "type",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "AWS" ]
              },
              "description" : {
                "desc" : "This is the description for CloudProviderSpec"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ElastigroupInstances" : {
            "title" : "ElastigroupInstances",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "Fixed", "CurrentRunning" ]
              },
              "description" : {
                "desc" : "This is the description for ElastigroupInstances"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "CurrentRunning"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupCurrentRunningInstances"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Fixed"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupFixedInstances"
                  }
                }
              }
            } ]
          },
          "ElastigroupCurrentRunningInstances" : {
            "title" : "ElastigroupCurrentRunningInstances",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupInstancesSpec"
            }, {
              "type" : "object"
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for ElastigroupCurrentRunningInstances"
              }
            }
          },
          "ElastigroupInstancesSpec" : {
            "title" : "ElastigroupInstancesSpec",
            "type" : "object",
            "discriminator" : "type",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "Fixed", "CurrentRunning" ]
              },
              "description" : {
                "desc" : "This is the description for ElastigroupInstancesSpec"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ElastigroupFixedInstances" : {
            "title" : "ElastigroupFixedInstances",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupInstancesSpec"
            }, {
              "type" : "object",
              "required" : [ "desired", "max", "min" ],
              "properties" : {
                "desired" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "max" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "min" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for ElastigroupFixedInstances"
              }
            }
          },
          "LoadBalancer" : {
            "title" : "LoadBalancer",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "AWSLoadBalancerConfig" ]
              },
              "description" : {
                "desc" : "This is the description for LoadBalancer"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AWSLoadBalancerConfig"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsLoadBalancerConfigYaml"
                  }
                }
              }
            } ]
          },
          "AwsLoadBalancerConfigYaml" : {
            "title" : "AwsLoadBalancerConfigYaml",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/LoadBalancerSpec"
            }, {
              "type" : "object",
              "required" : [ "loadBalancer", "prodListenerPort", "prodListenerRuleArn", "stageListenerPort", "stageListenerRuleArn" ],
              "properties" : {
                "loadBalancer" : {
                  "type" : "string"
                },
                "prodListenerPort" : {
                  "type" : "string"
                },
                "prodListenerRuleArn" : {
                  "type" : "string"
                },
                "stageListenerPort" : {
                  "type" : "string"
                },
                "stageListenerRuleArn" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for AwsLoadBalancerConfigYaml"
              }
            }
          },
          "LoadBalancerSpec" : {
            "title" : "LoadBalancerSpec",
            "type" : "object",
            "discriminator" : "type",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "AWSLoadBalancerConfig" ]
              },
              "description" : {
                "desc" : "This is the description for LoadBalancerSpec"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ElastigroupDeployStepNode_template" : {
            "title" : "ElastigroupDeployStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "ElastigroupDeploy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ElastigroupDeploy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupDeployStepInfo"
                  }
                }
              }
            } ]
          },
          "ElastigroupDeployStepInfo" : {
            "title" : "ElastigroupDeployStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "newService" ],
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "metadata" : {
                  "type" : "string"
                },
                "newService" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/Capacity"
                },
                "oldService" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/Capacity"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "newService" ],
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "metadata" : {
                "type" : "string"
              },
              "newService" : {
                "$ref" : "#/definitions/pipeline/steps/cd/Capacity"
              },
              "oldService" : {
                "$ref" : "#/definitions/pipeline/steps/cd/Capacity"
              },
              "description" : {
                "desc" : "This is the description for ElastigroupDeployStepInfo"
              }
            }
          },
          "ElastigroupRollbackStepNode_template" : {
            "title" : "ElastigroupRollbackStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "ElastigroupRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ElastigroupRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "ElastigroupRollbackStepInfo" : {
            "title" : "ElastigroupRollbackStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "metadata" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "metadata" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for ElastigroupRollbackStepInfo"
              }
            }
          },
          "ElastigroupSetupStepNode_template" : {
            "title" : "ElastigroupSetupStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "ElastigroupSetup" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ElastigroupSetup"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupSetupStepInfo"
                  }
                }
              }
            } ]
          },
          "ElastigroupSetupStepInfo" : {
            "title" : "ElastigroupSetupStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "instances" ],
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "instances" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupInstances"
                },
                "name" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "instances" ],
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "instances" : {
                "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupInstances"
              },
              "name" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for ElastigroupSetupStepInfo"
              }
            }
          },
          "ElastigroupSwapRouteStepNode_template" : {
            "title" : "ElastigroupSwapRouteStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "ElastigroupSwapRoute" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ElastigroupSwapRoute"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupSwapRouteStepInfo"
                  }
                }
              }
            } ]
          },
          "ElastigroupSwapRouteStepInfo" : {
            "title" : "ElastigroupSwapRouteStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "downsizeOldElastigroup" ],
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "downsizeOldElastigroup" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "downsizeOldElastigroup" ],
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "downsizeOldElastigroup" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "description" : {
                "desc" : "This is the description for ElastigroupSwapRouteStepInfo"
              }
            }
          },
          "FetchInstanceScriptStepNode_template" : {
            "title" : "FetchInstanceScriptStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "FetchInstanceScript" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "FetchInstanceScript"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/FetchInstanceScriptStepInfo"
                  }
                }
              }
            } ]
          },
          "FetchInstanceScriptStepInfo" : {
            "title" : "FetchInstanceScriptStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for FetchInstanceScriptStepInfo"
              }
            }
          },
          "FetchLinkedAppsStepNode_template" : {
            "title" : "FetchLinkedAppsStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "GitOpsFetchLinkedApps" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "GitOpsFetchLinkedApps"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/FetchLinkedAppsStepInfo"
                  }
                }
              }
            } ]
          },
          "FetchLinkedAppsStepInfo" : {
            "title" : "FetchLinkedAppsStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for FetchLinkedAppsStepInfo"
              }
            }
          },
          "GoogleFunctionsDeployStepNode_template" : {
            "title" : "GoogleFunctionsDeployStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "DeployCloudFunction" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "DeployCloudFunction"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsDeployStepInfo"
                  }
                }
              }
            } ]
          },
          "GoogleFunctionsDeployStepInfo" : {
            "title" : "GoogleFunctionsDeployStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "updateFieldMask" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "updateFieldMask" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for GoogleFunctionsDeployStepInfo"
              }
            }
          },
          "GoogleFunctionsGenOneDeployStepNode_template" : {
            "title" : "GoogleFunctionsGenOneDeployStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "DeployCloudFunctionGenOne" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "DeployCloudFunctionGenOne"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsGenOneDeployStepInfo"
                  }
                }
              }
            } ]
          },
          "GoogleFunctionsGenOneDeployStepInfo" : {
            "title" : "GoogleFunctionsGenOneDeployStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "updateFieldMask" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "updateFieldMask" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for GoogleFunctionsGenOneDeployStepInfo"
              }
            }
          },
          "GoogleFunctionsDeployWithoutTrafficStepNode_template" : {
            "title" : "GoogleFunctionsDeployWithoutTrafficStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "DeployCloudFunctionWithNoTraffic" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "DeployCloudFunctionWithNoTraffic"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsDeployWithoutTrafficStepInfo"
                  }
                }
              }
            } ]
          },
          "GoogleFunctionsDeployWithoutTrafficStepInfo" : {
            "title" : "GoogleFunctionsDeployWithoutTrafficStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "updateFieldMask" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "updateFieldMask" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for GoogleFunctionsDeployWithoutTrafficStepInfo"
              }
            }
          },
          "GoogleFunctionsRollbackStepNode_template" : {
            "title" : "GoogleFunctionsRollbackStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "CloudFunctionRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "CloudFunctionRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "GoogleFunctionsRollbackStepInfo" : {
            "title" : "GoogleFunctionsRollbackStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for GoogleFunctionsRollbackStepInfo"
              }
            }
          },
          "GoogleFunctionsTrafficShiftStepNode_template" : {
            "title" : "GoogleFunctionsTrafficShiftStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "CloudFunctionTrafficShift" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "CloudFunctionTrafficShift"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsTrafficShiftStepInfo"
                  }
                }
              }
            } ]
          },
          "GoogleFunctionsTrafficShiftStepInfo" : {
            "title" : "GoogleFunctionsTrafficShiftStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "trafficPercent" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "trafficPercent" : {
                "type" : "integer",
                "format" : "int32"
              },
              "description" : {
                "desc" : "This is the description for GoogleFunctionsTrafficShiftStepInfo"
              }
            }
          },
          "HelmDeployStepNode_template" : {
            "title" : "HelmDeployStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "HelmDeploy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "HelmDeploy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/HelmDeployStepInfo"
                  }
                }
              }
            } ]
          },
          "HelmDeployStepInfo" : {
            "title" : "HelmDeployStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ignoreReleaseHistFailStatus" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                },
                "skipSteadyStateCheck" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/steps/cd/ParameterFieldBoolean"
                  }, {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ignoreReleaseHistFailStatus" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "skipSteadyStateCheck" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/cd/ParameterFieldBoolean"
                }, {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for HelmDeployStepInfo"
              }
            }
          },
          "ParameterFieldBoolean" : {
            "title" : "ParameterFieldBoolean",
            "type" : "object",
            "properties" : {
              "defaultValue" : {
                "type" : "boolean"
              },
              "executionInput" : {
                "type" : "boolean"
              },
              "expression" : {
                "type" : "boolean"
              },
              "expressionValue" : {
                "type" : "string"
              },
              "inputSetValidator" : {
                "$ref" : "#/definitions/pipeline/common/InputSetValidator"
              },
              "jsonResponseField" : {
                "type" : "boolean"
              },
              "responseField" : {
                "type" : "string"
              },
              "typeString" : {
                "type" : "boolean"
              },
              "value" : {
                "type" : "boolean"
              },
              "description" : {
                "desc" : "This is the description for ParameterFieldBoolean"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "HelmRollbackStepNode_template" : {
            "title" : "HelmRollbackStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "HelmRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "HelmRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/HelmRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "HelmRollbackStepInfo" : {
            "title" : "HelmRollbackStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "skipSteadyStateCheck" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/steps/cd/ParameterFieldBoolean"
                  }, {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "skipSteadyStateCheck" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/cd/ParameterFieldBoolean"
                }, {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for HelmRollbackStepInfo"
              }
            }
          },
          "JenkinsBuildStepNode_template" : {
            "title" : "JenkinsBuildStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "JenkinsBuild" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "JenkinsBuild"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/JenkinsBuildStepInfo"
                  }
                }
              }
            } ]
          },
          "JenkinsBuildStepInfo" : {
            "title" : "JenkinsBuildStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "jobName" ],
              "properties" : {
                "connectorRef" : {
                  "type" : "string",
                  "metadata" : {
                    "inputProperties" : {
                      "type" : "string",
                      "internalType" : "jenkins_connector"
                    }
                  }
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "jobName" : {
                  "type" : "string",
                  "metadata" : {
                    "inputProperties" : {
                      "type" : "string",
                      "internalType" : "jenkins_job_name",
                      "dependsOn" : [ "connectorRef" ]
                    }
                  }
                },
                "jobParameter" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/steps/cd/JenkinsParameterField"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ],
                  "metadata" : {
                    "inputProperties" : {
                      "type" : "object",
                      "internalType" : "jenkins_job_parameter",
                      "dependsOn" : [ "connectorRef", "jobName" ]
                    }
                  }
                },
                "metadata" : {
                  "type" : "string"
                },
                "unstableStatusAsSuccess" : {
                  "type" : "boolean"
                },
                "useConnectorUrlForJobExecution" : {
                  "type" : "boolean"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "connectorRef", "jobName" ],
            "properties" : {
              "connectorRef" : {
                "type" : "string",
                "metadata" : {
                  "inputProperties" : {
                    "type" : "string",
                    "internalType" : "jenkins_connector"
                  }
                }
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "jobName" : {
                "type" : "string",
                "metadata" : {
                  "inputProperties" : {
                    "type" : "string",
                    "internalType" : "jenkins_job_name",
                    "dependsOn" : [ "connectorRef" ]
                  }
                }
              },
              "jobParameter" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/JenkinsParameterField"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ],
                "metadata" : {
                  "inputProperties" : {
                    "type" : "object",
                    "internalType" : "jenkins_job_parameter",
                    "dependsOn" : [ "connectorRef", "jobName" ]
                  }
                }
              },
              "metadata" : {
                "type" : "string"
              },
              "unstableStatusAsSuccess" : {
                "type" : "boolean"
              },
              "useConnectorUrlForJobExecution" : {
                "type" : "boolean"
              },
              "description" : {
                "desc" : "This is the description for JenkinsBuildStepInfo"
              }
            }
          },
          "JenkinsParameterField" : {
            "title" : "JenkinsParameterField",
            "type" : "object",
            "required" : [ "value" ],
            "properties" : {
              "metadata" : {
                "type" : "string"
              },
              "name" : {
                "type" : "string"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "String", "Number" ]
              },
              "value" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for JenkinsParameterField"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "K8sApplyStepNode_template" : {
            "title" : "K8sApplyStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "K8sApply" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "K8sApply"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sApplyStepInfo"
                  }
                }
              }
            } ]
          },
          "K8sApplyStepInfo" : {
            "title" : "K8sApplyStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "commandFlags" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/steps/cd/K8sStepCommandFlag"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "filePaths" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    },
                    "maxItems" : 256,
                    "minItems" : 1
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "overrides" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ManifestConfigWrapper"
                  }
                },
                "skipDryRun" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                },
                "skipRendering" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                },
                "skipSteadyStateCheck" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "commandFlags" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sStepCommandFlag"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "filePaths" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  },
                  "maxItems" : 256,
                  "minItems" : 1
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "manifestSource" : {
                "$ref" : "#/definitions/pipeline/steps/cd/ManifestSourceWrapper"
              },
              "overrides" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/ManifestConfigWrapper"
                }
              },
              "skipDryRun" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "skipRendering" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "skipSteadyStateCheck" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "description" : {
                "desc" : "This is the description for K8sApplyStepInfo"
              }
            }
          },
          "K8sStepCommandFlag" : {
            "title" : "K8sStepCommandFlag",
            "type" : "object",
            "required" : [ "commandType" ],
            "properties" : {
              "commandType" : {
                "type" : "string",
                "enum" : [ "Apply" ]
              },
              "flag" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for K8sStepCommandFlag"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ManifestConfigWrapper" : {
            "title" : "ManifestConfigWrapper",
            "type" : "object",
            "properties" : {
              "manifest" : {
                "$ref" : "#/definitions/pipeline/steps/cd/ManifestConfig"
              },
              "description" : {
                "desc" : "This is the description for ManifestConfigWrapper"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ManifestConfig" : {
            "title" : "ManifestConfig",
            "type" : "object",
            "required" : [ "identifier", "spec", "type" ],
            "properties" : {
              "identifier" : {
                "type" : "string"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "HelmChart", "HelmRepoOverride", "K8sManifest", "Kustomize", "KustomizePatches", "OpenshiftParam", "OpenshiftTemplate", "Values", "ServerlessAwsLambda", "ReleaseRepo", "DeploymentRepo", "EcsTaskDefinition", "EcsServiceDefinition", "EcsScalableTargetDefinition", "EcsScalingPolicyDefinition", "TasManifest", "TasVars", "TasAutoScaler", "AsgLaunchTemplate", "AsgConfiguration", "AsgScalingPolicy", "AsgScheduledUpdateGroupAction", "GoogleCloudFunctionDefinition", "AwsLambdaFunctionDefinition", "AwsLambdaFunctionAliasDefinition", "AwsSamDirectory", "GoogleCloudFunctionGenOneDefinition" ]
              },
              "description" : {
                "desc" : "This is the description for ManifestConfig"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AsgConfiguration"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgConfigurationManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AsgLaunchTemplate"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgLaunchTemplateManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AsgScalingPolicy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgScalingPolicyManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AsgScheduledUpdateGroupAction"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgScheduledUpdateGroupActionManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AwsLambdaFunctionAliasDefinition"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaFunctionAliasDefinitionManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AwsLambdaFunctionDefinition"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaDefinitionManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AwsSamDirectory"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsSamDirectoryManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "DeploymentRepo"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/GitOpsDeploymentRepoManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "EcsScalableTargetDefinition"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsScalableTargetDefinitionManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "EcsScalingPolicyDefinition"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsScalingPolicyDefinitionManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "EcsServiceDefinition"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsServiceDefinitionManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "EcsTaskDefinition"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsTaskDefinitionManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "GoogleCloudFunctionDefinition"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleCloudFunctionDefinitionManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "GoogleCloudFunctionGenOneDefinition"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleCloudFunctionGenOneDefinitionManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "HelmChart"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/HelmChartManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "HelmRepoOverride"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/HelmRepoOverrideManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "K8sManifest"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Kustomize"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/KustomizeManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "KustomizePatches"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/KustomizePatchesManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "OpenshiftParam"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/OpenshiftParamManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "OpenshiftTemplate"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/OpenshiftManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ReleaseRepo"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ReleaseRepoManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ServerlessAwsLambda"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "TasAutoScaler"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AutoScalerManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "TasManifest"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "TasVars"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/VarsManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Values"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ValuesManifest"
                  }
                }
              }
            } ]
          },
          "AsgConfigurationManifest" : {
            "title" : "AsgConfigurationManifest",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/ManifestAttributes"
            }, {
              "type" : "object",
              "properties" : {
                "metadata" : {
                  "type" : "string"
                },
                "store" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for AsgConfigurationManifest"
              }
            }
          },
          "ManifestAttributes" : {
            "title" : "ManifestAttributes",
            "type" : "object",
            "discriminator" : "type",
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for ManifestAttributes"
              }
            }
          },
          "AsgLaunchTemplateManifest" : {
            "title" : "AsgLaunchTemplateManifest",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/ManifestAttributes"
            }, {
              "type" : "object",
              "properties" : {
                "metadata" : {
                  "type" : "string"
                },
                "store" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for AsgLaunchTemplateManifest"
              }
            }
          },
          "AsgScalingPolicyManifest" : {
            "title" : "AsgScalingPolicyManifest",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/ManifestAttributes"
            }, {
              "type" : "object",
              "properties" : {
                "metadata" : {
                  "type" : "string"
                },
                "store" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for AsgScalingPolicyManifest"
              }
            }
          },
          "AsgScheduledUpdateGroupActionManifest" : {
            "title" : "AsgScheduledUpdateGroupActionManifest",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/ManifestAttributes"
            }, {
              "type" : "object",
              "properties" : {
                "metadata" : {
                  "type" : "string"
                },
                "store" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for AsgScheduledUpdateGroupActionManifest"
              }
            }
          },
          "AwsLambdaFunctionAliasDefinitionManifest" : {
            "title" : "AwsLambdaFunctionAliasDefinitionManifest",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/ManifestAttributes"
            }, {
              "type" : "object",
              "properties" : {
                "metadata" : {
                  "type" : "string"
                },
                "store" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for AwsLambdaFunctionAliasDefinitionManifest"
              }
            }
          },
          "AwsLambdaDefinitionManifest" : {
            "title" : "AwsLambdaDefinitionManifest",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/ManifestAttributes"
            }, {
              "type" : "object",
              "properties" : {
                "metadata" : {
                  "type" : "string"
                },
                "store" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for AwsLambdaDefinitionManifest"
              }
            }
          },
          "AwsSamDirectoryManifest" : {
            "title" : "AwsSamDirectoryManifest",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/ManifestAttributes"
            }, {
              "type" : "object",
              "properties" : {
                "samTemplateFile" : {
                  "type" : "string"
                },
                "metadata" : {
                  "type" : "string"
                },
                "store" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for AwsSamDirectoryManifest"
              }
            }
          },
          "GitOpsDeploymentRepoManifest" : {
            "title" : "GitOpsDeploymentRepoManifest",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/ManifestAttributes"
            }, {
              "type" : "object",
              "properties" : {
                "store" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for GitOpsDeploymentRepoManifest"
              }
            }
          },
          "EcsScalableTargetDefinitionManifest" : {
            "title" : "EcsScalableTargetDefinitionManifest",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/ManifestAttributes"
            }, {
              "type" : "object",
              "properties" : {
                "metadata" : {
                  "type" : "string"
                },
                "store" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for EcsScalableTargetDefinitionManifest"
              }
            }
          },
          "EcsScalingPolicyDefinitionManifest" : {
            "title" : "EcsScalingPolicyDefinitionManifest",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/ManifestAttributes"
            }, {
              "type" : "object",
              "properties" : {
                "metadata" : {
                  "type" : "string"
                },
                "store" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for EcsScalingPolicyDefinitionManifest"
              }
            }
          },
          "EcsServiceDefinitionManifest" : {
            "title" : "EcsServiceDefinitionManifest",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/ManifestAttributes"
            }, {
              "type" : "object",
              "properties" : {
                "metadata" : {
                  "type" : "string"
                },
                "store" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for EcsServiceDefinitionManifest"
              }
            }
          },
          "EcsTaskDefinitionManifest" : {
            "title" : "EcsTaskDefinitionManifest",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/ManifestAttributes"
            }, {
              "type" : "object",
              "properties" : {
                "metadata" : {
                  "type" : "string"
                },
                "store" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for EcsTaskDefinitionManifest"
              }
            }
          },
          "GoogleCloudFunctionDefinitionManifest" : {
            "title" : "GoogleCloudFunctionDefinitionManifest",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/ManifestAttributes"
            }, {
              "type" : "object",
              "properties" : {
                "metadata" : {
                  "type" : "string"
                },
                "store" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for GoogleCloudFunctionDefinitionManifest"
              }
            }
          },
          "GoogleCloudFunctionGenOneDefinitionManifest" : {
            "title" : "GoogleCloudFunctionGenOneDefinitionManifest",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/ManifestAttributes"
            }, {
              "type" : "object",
              "properties" : {
                "metadata" : {
                  "type" : "string"
                },
                "store" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for GoogleCloudFunctionGenOneDefinitionManifest"
              }
            }
          },
          "HelmChartManifest" : {
            "title" : "HelmChartManifest",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/ManifestAttributes"
            }, {
              "type" : "object",
              "properties" : {
                "chartName" : {
                  "type" : "string"
                },
                "chartVersion" : {
                  "type" : "string"
                },
                "commandFlags" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/HelmManifestCommandFlag"
                  }
                },
                "enableDeclarativeRollback" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/steps/cd/ParameterFieldBoolean"
                  }, {
                    "type" : "string"
                  }, {
                    "type" : "boolean"
                  } ]
                },
                "helmVersion" : {
                  "type" : "string",
                  "enum" : [ "V2", "V3", "V380" ]
                },
                "metadata" : {
                  "type" : "string"
                },
                "skipResourceVersioning" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                },
                "store" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                },
                "subChartPath" : {
                  "type" : "string"
                },
                "valuesPaths" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for HelmChartManifest"
              }
            }
          },
          "HelmManifestCommandFlag" : {
            "title" : "HelmManifestCommandFlag",
            "type" : "object",
            "required" : [ "commandType" ],
            "properties" : {
              "commandType" : {
                "type" : "string",
                "enum" : [ "Fetch", "Template", "Pull", "Install", "Upgrade", "Rollback", "History", "Delete", "Uninstall", "List", "Add", "Update", "Version" ]
              },
              "flag" : {
                "type" : "string",
                "minLength" : 1
              },
              "description" : {
                "desc" : "This is the description for HelmManifestCommandFlag"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "HelmRepoOverrideManifest" : {
            "title" : "HelmRepoOverrideManifest",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/ManifestAttributes"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "type" ],
              "properties" : {
                "connectorRef" : {
                  "type" : "string"
                },
                "metadata" : {
                  "type" : "string"
                },
                "type" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for HelmRepoOverrideManifest"
              }
            }
          },
          "K8sManifest" : {
            "title" : "K8sManifest",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/ManifestAttributes"
            }, {
              "type" : "object",
              "properties" : {
                "enableDeclarativeRollback" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/steps/cd/ParameterFieldBoolean"
                  }, {
                    "type" : "string"
                  }, {
                    "type" : "boolean"
                  } ]
                },
                "metadata" : {
                  "type" : "string"
                },
                "skipResourceVersioning" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/steps/cd/ParameterFieldBoolean"
                  }, {
                    "type" : "string"
                  }, {
                    "type" : "boolean"
                  } ]
                },
                "store" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                },
                "valuesPaths" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for K8sManifest"
              }
            }
          },
          "KustomizeManifest" : {
            "title" : "KustomizeManifest",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/ManifestAttributes"
            }, {
              "type" : "object",
              "properties" : {
                "commandFlags" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/KustomizeManifestCommandFlag"
                  }
                },
                "enableDeclarativeRollback" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/steps/cd/ParameterFieldBoolean"
                  }, {
                    "type" : "string"
                  }, {
                    "type" : "boolean"
                  } ]
                },
                "metadata" : {
                  "type" : "string"
                },
                "overlayConfiguration" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/OverlayConfiguration"
                },
                "patchesPaths" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "pluginPath" : {
                  "type" : "string"
                },
                "skipResourceVersioning" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/steps/cd/ParameterFieldBoolean"
                  }, {
                    "type" : "string"
                  }, {
                    "type" : "boolean"
                  } ]
                },
                "store" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for KustomizeManifest"
              }
            }
          },
          "KustomizeManifestCommandFlag" : {
            "title" : "KustomizeManifestCommandFlag",
            "type" : "object",
            "required" : [ "commandType" ],
            "properties" : {
              "commandType" : {
                "type" : "string",
                "enum" : [ "Build" ]
              },
              "flag" : {
                "type" : "string",
                "minLength" : 1
              },
              "description" : {
                "desc" : "This is the description for KustomizeManifestCommandFlag"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "OverlayConfiguration" : {
            "title" : "OverlayConfiguration",
            "type" : "object",
            "required" : [ "kustomizeYamlFolderPath" ],
            "properties" : {
              "kustomizeYamlFolderPath" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for OverlayConfiguration"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "KustomizePatchesManifest" : {
            "title" : "KustomizePatchesManifest",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/ManifestAttributes"
            }, {
              "type" : "object",
              "properties" : {
                "metadata" : {
                  "type" : "string"
                },
                "store" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for KustomizePatchesManifest"
              }
            }
          },
          "OpenshiftParamManifest" : {
            "title" : "OpenshiftParamManifest",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/ManifestAttributes"
            }, {
              "type" : "object",
              "properties" : {
                "metadata" : {
                  "type" : "string"
                },
                "store" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for OpenshiftParamManifest"
              }
            }
          },
          "OpenshiftManifest" : {
            "title" : "OpenshiftManifest",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/ManifestAttributes"
            }, {
              "type" : "object",
              "properties" : {
                "enableDeclarativeRollback" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/steps/cd/ParameterFieldBoolean"
                  }, {
                    "type" : "string"
                  }, {
                    "type" : "boolean"
                  } ]
                },
                "metadata" : {
                  "type" : "string"
                },
                "paramsPaths" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "skipResourceVersioning" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/steps/cd/ParameterFieldBoolean"
                  }, {
                    "type" : "string"
                  }, {
                    "type" : "boolean"
                  } ]
                },
                "store" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for OpenshiftManifest"
              }
            }
          },
          "ReleaseRepoManifest" : {
            "title" : "ReleaseRepoManifest",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/ManifestAttributes"
            }, {
              "type" : "object",
              "properties" : {
                "metadata" : {
                  "type" : "string"
                },
                "store" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for ReleaseRepoManifest"
              }
            }
          },
          "ServerlessAwsLambdaManifest" : {
            "title" : "ServerlessAwsLambdaManifest",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/ManifestAttributes"
            }, {
              "type" : "object",
              "properties" : {
                "configOverridePath" : {
                  "type" : "string"
                },
                "metadata" : {
                  "type" : "string"
                },
                "store" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for ServerlessAwsLambdaManifest"
              }
            }
          },
          "AutoScalerManifest" : {
            "title" : "AutoScalerManifest",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/ManifestAttributes"
            }, {
              "type" : "object",
              "properties" : {
                "metadata" : {
                  "type" : "string"
                },
                "skipResourceVersioning" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/steps/cd/ParameterFieldBoolean"
                  }, {
                    "type" : "string"
                  }, {
                    "type" : "boolean"
                  } ]
                },
                "store" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for AutoScalerManifest"
              }
            }
          },
          "TasManifest" : {
            "title" : "TasManifest",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/ManifestAttributes"
            }, {
              "type" : "object",
              "properties" : {
                "autoScalerPath" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "cfCliVersion" : {
                  "type" : "string",
                  "enum" : [ "V7" ]
                },
                "metadata" : {
                  "type" : "string"
                },
                "store" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                },
                "varsPaths" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for TasManifest"
              }
            }
          },
          "VarsManifest" : {
            "title" : "VarsManifest",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/ManifestAttributes"
            }, {
              "type" : "object",
              "properties" : {
                "metadata" : {
                  "type" : "string"
                },
                "store" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for VarsManifest"
              }
            }
          },
          "ValuesManifest" : {
            "title" : "ValuesManifest",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/ManifestAttributes"
            }, {
              "type" : "object",
              "properties" : {
                "metadata" : {
                  "type" : "string"
                },
                "store" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for ValuesManifest"
              }
            }
          },
          "ManifestSourceWrapper" : {
            "title" : "ManifestSourceWrapper",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "K8sManifest" ]
              },
              "description" : {
                "desc" : "This is the description for ManifestSourceWrapper"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AsgConfiguration"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgConfigurationManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AsgLaunchTemplate"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgLaunchTemplateManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AsgScalingPolicy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgScalingPolicyManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AsgScheduledUpdateGroupAction"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgScheduledUpdateGroupActionManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AwsLambdaFunctionAliasDefinition"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaFunctionAliasDefinitionManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AwsLambdaFunctionDefinition"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaDefinitionManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AwsSamDirectory"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsSamDirectoryManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "DeploymentRepo"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/GitOpsDeploymentRepoManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "EcsScalableTargetDefinition"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsScalableTargetDefinitionManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "EcsScalingPolicyDefinition"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsScalingPolicyDefinitionManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "EcsServiceDefinition"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsServiceDefinitionManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "EcsTaskDefinition"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsTaskDefinitionManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "GoogleCloudFunctionDefinition"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleCloudFunctionDefinitionManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "GoogleCloudFunctionGenOneDefinition"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleCloudFunctionGenOneDefinitionManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "HelmChart"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/HelmChartManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "HelmRepoOverride"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/HelmRepoOverrideManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "K8sManifest"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Kustomize"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/KustomizeManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "KustomizePatches"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/KustomizePatchesManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "OpenshiftParam"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/OpenshiftParamManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "OpenshiftTemplate"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/OpenshiftManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ReleaseRepo"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ReleaseRepoManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ServerlessAwsLambda"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "TasAutoScaler"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AutoScalerManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "TasManifest"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "TasVars"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/VarsManifest"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Values"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ValuesManifest"
                  }
                }
              }
            } ]
          },
          "K8sBGSwapServicesStepNode_template" : {
            "title" : "K8sBGSwapServicesStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "K8sBGSwapServices" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "K8sBGSwapServices"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sBGSwapServicesStepInfo"
                  }
                }
              }
            } ]
          },
          "K8sBGSwapServicesStepInfo" : {
            "title" : "K8sBGSwapServicesStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for K8sBGSwapServicesStepInfo"
              }
            }
          },
          "K8sBlueGreenStepNode_template" : {
            "title" : "K8sBlueGreenStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "K8sBlueGreenDeploy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "K8sBlueGreenDeploy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sBlueGreenStepInfo"
                  }
                }
              }
            } ]
          },
          "K8sBlueGreenStepInfo" : {
            "title" : "K8sBlueGreenStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "commandFlags" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/steps/cd/K8sStepCommandFlag"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "pruningEnabled" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                },
                "skipDeploymentIfSameManifest" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "skipDryRun" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                },
                "trafficRouting" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/K8sTrafficRouting"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "commandFlags" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sStepCommandFlag"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "pruningEnabled" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "skipDeploymentIfSameManifest" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "skipDryRun" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "trafficRouting" : {
                "$ref" : "#/definitions/pipeline/steps/cd/K8sTrafficRouting"
              },
              "description" : {
                "desc" : "This is the description for K8sBlueGreenStepInfo"
              }
            }
          },
          "K8sTrafficRouting" : {
            "title" : "K8sTrafficRouting",
            "type" : "object",
            "required" : [ "spec", "provider" ],
            "properties" : {
              "spec" : {
                "type" : "object"
              },
              "provider" : {
                "type" : "string",
                "enum" : [ "smi", "istio" ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "smi"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/SMIProvider"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "istio"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/IstioProviderSpec"
                  }
                }
              }
            } ]
          },
          "SMIProvider" : {
            "title" : "SMIProvider",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/K8sTrafficRoutingProviderBaseSpec"
            } ],
            "properties" : {
              "rootService" : {
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "K8sTrafficRoutingProviderBaseSpec" : {
            "title" : "K8sTrafficRoutingProviderBaseSpec",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/K8sTrafficRoutingDestinations"
            } ],
            "required" : [ "routes" ],
            "properties" : {
              "routes" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/RouteSpec"
                }
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "K8sTrafficRoutingDestinations" : {
            "title" : "K8sTrafficRoutingDestinations",
            "type" : "object",
            "required" : [ "destinations" ],
            "properties" : {
              "destinations" : [ {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/K8sTrafficRoutingDestination"
                }
              } ]
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "K8sTrafficRoutingDestination" : {
            "title" : "K8sTrafficRoutingDestination",
            "type" : "object",
            "required" : [ "destination" ],
            "properties" : {
              "destination" : {
                "type" : "object",
                "required" : [ "host" ],
                "properties" : {
                  "host" : {
                    "type" : "string"
                  },
                  "weight" : {
                    "type" : "number"
                  }
                },
                "$schema" : "http://json-schema.org/draft-07/schema#"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "RouteSpec" : {
            "title" : "RouteSpec",
            "type" : "object",
            "required" : [ "route" ],
            "properties" : {
              "route" : {
                "type" : "object",
                "required" : [ "type", "rules" ],
                "properties" : {
                  "type" : {
                    "type" : "string",
                    "enum" : [ "http" ]
                  },
                  "rules" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "required" : [ "rule" ],
                      "properties" : {
                        "rule" : {
                          "$ref" : "#/definitions/pipeline/steps/cd/K8sTrafficRoutingRouteRule"
                        }
                      },
                      "$schema" : "http://json-schema.org/draft-07/schema#"
                    }
                  }
                },
                "$schema" : "http://json-schema.org/draft-07/schema#"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "K8sTrafficRoutingRouteRule" : {
            "title" : "K8sTrafficRoutingRouteRule",
            "type" : "object",
            "required" : [ "type", "spec" ],
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "uri", "method", "header", "port", "scheme", "authority" ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "uri"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "title" : "K8sTrafficRoutingRuleURISpec",
                    "type" : "object",
                    "required" : [ "name", "value" ],
                    "properties" : {
                      "name" : {
                        "type" : "string"
                      },
                      "value" : {
                        "type" : "string"
                      },
                      "matchType" : {
                        "type" : "string",
                        "enum" : [ "exact", "prefix", "regex" ]
                      }
                    },
                    "$schema" : "http://json-schema.org/draft-07/schema#"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "method"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "title" : "K8sTrafficRoutingRuleMethodSpec",
                    "type" : "object",
                    "oneOf" : [ {
                      "required" : [ "name", "values" ],
                      "properties" : {
                        "name" : {
                          "type" : "string"
                        },
                        "values" : {
                          "type" : "array",
                          "items" : {
                            "type" : "string",
                            "minLength" : 1,
                            "enum" : [ "GET", "POST", "PUT", "DELETE", "HEAD", "CONNECT", "OPTION", "TRACE", "PATCH" ]
                          }
                        }
                      }
                    }, {
                      "required" : [ "name", "value", "matchType" ],
                      "properties" : {
                        "name" : {
                          "type" : "string"
                        },
                        "value" : {
                          "type" : "string",
                          "enum" : [ "GET", "POST", "PUT", "DELETE", "HEAD", "CONNECT", "OPTION", "TRACE", "PATCH" ]
                        },
                        "matchType" : {
                          "type" : "string",
                          "enum" : [ "exact", "prefix", "regex" ]
                        }
                      }
                    } ],
                    "$schema" : "http://json-schema.org/draft-07/schema#"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "header"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "title" : "K8sTrafficRoutingRuleHeaderSpec",
                    "type" : "object",
                    "required" : [ "name", "values" ],
                    "properties" : {
                      "name" : {
                        "type" : "string"
                      },
                      "values" : {
                        "type" : "array",
                        "items" : {
                          "minLength" : 1,
                          "type" : "object",
                          "required" : [ "key", "value" ],
                          "properties" : {
                            "key" : {
                              "type" : "string"
                            },
                            "value" : {
                              "type" : "string"
                            },
                            "matchType" : {
                              "type" : "string",
                              "enum" : [ "exact", "prefix", "regex" ]
                            },
                            "$schema" : "http://json-schema.org/draft-07/schema#"
                          }
                        }
                      }
                    },
                    "$schema" : "http://json-schema.org/draft-07/schema#"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "port"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "title" : "K8sTrafficRoutingRulePortSpec",
                    "type" : "object",
                    "oneOf" : [ {
                      "required" : [ "name", "values" ],
                      "properties" : {
                        "name" : {
                          "type" : "string"
                        },
                        "values" : {
                          "type" : "array",
                          "items" : {
                            "type" : "number",
                            "minLength" : 1
                          }
                        }
                      }
                    }, {
                      "required" : [ "name", "value" ],
                      "properties" : {
                        "name" : {
                          "type" : "string"
                        },
                        "value" : {
                          "type" : "number"
                        }
                      }
                    } ],
                    "$schema" : "http://json-schema.org/draft-07/schema#"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "scheme"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "title" : "K8sTrafficRoutingRuleSchemeSpec",
                    "type" : "object",
                    "required" : [ "name", "value", "matchType" ],
                    "properties" : {
                      "name" : {
                        "type" : "string"
                      },
                      "value" : {
                        "type" : "string"
                      },
                      "matchType" : {
                        "type" : "string",
                        "enum" : [ "exact", "prefix", "regex" ]
                      }
                    },
                    "$schema" : "http://json-schema.org/draft-07/schema#"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "authority"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "title" : "K8sTrafficRoutingRuleAuthoritySpec",
                    "type" : "object",
                    "required" : [ "name", "value", "matchType" ],
                    "properties" : {
                      "name" : {
                        "type" : "string"
                      },
                      "value" : {
                        "type" : "string"
                      },
                      "matchType" : {
                        "type" : "string",
                        "enum" : [ "exact", "prefix", "regex" ]
                      }
                    },
                    "$schema" : "http://json-schema.org/draft-07/schema#"
                  }
                }
              }
            } ]
          },
          "IstioProviderSpec" : {
            "title" : "IstioProviderSpec",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/K8sTrafficRoutingProviderBaseSpec"
            } ],
            "properties" : {
              "gateways" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "hosts" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "K8sCanaryDeleteStepNode_template" : {
            "title" : "K8sCanaryDeleteStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "K8sCanaryDelete" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "K8sCanaryDelete"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sCanaryDeleteStepInfo"
                  }
                }
              }
            } ]
          },
          "K8sCanaryDeleteStepInfo" : {
            "title" : "K8sCanaryDeleteStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "description" : {
                "desc" : "This is the description for K8sCanaryDeleteStepInfo"
              }
            }
          },
          "K8sCanaryStepNode_template" : {
            "title" : "K8sCanaryStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "K8sCanaryDeploy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "K8sCanaryDeploy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sCanaryStepInfo"
                  }
                }
              }
            } ]
          },
          "K8sCanaryStepInfo" : {
            "title" : "K8sCanaryStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "instanceSelection" ],
              "properties" : {
                "commandFlags" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/steps/cd/K8sStepCommandFlag"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "instanceSelection" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/InstanceSelectionWrapper"
                },
                "skipDryRun" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                },
                "trafficRouting" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/K8sTrafficRouting"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "instanceSelection" ],
            "properties" : {
              "commandFlags" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sStepCommandFlag"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "instanceSelection" : {
                "$ref" : "#/definitions/pipeline/steps/cd/InstanceSelectionWrapper"
              },
              "trafficRouting" : {
                "$ref" : "#/definitions/pipeline/steps/cd/K8sTrafficRouting"
              },
              "skipDryRun" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "description" : {
                "desc" : "This is the description for K8sCanaryStepInfo"
              }
            }
          },
          "InstanceSelectionWrapper" : {
            "title" : "InstanceSelectionWrapper",
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "Count", "Percentage" ]
              },
              "description" : {
                "desc" : "This is the description for InstanceSelectionWrapper"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Count"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/CountInstanceSelection"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Percentage"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/PercentageInstanceSelection"
                  }
                }
              }
            } ]
          },
          "CountInstanceSelection" : {
            "title" : "CountInstanceSelection",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/InstanceSelectionBase"
            }, {
              "type" : "object",
              "properties" : {
                "count" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/steps/cd/ParameterFieldString"
                  }, {
                    "type" : "string"
                  }, {
                    "type" : "integer"
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for CountInstanceSelection"
              }
            }
          },
          "InstanceSelectionBase" : {
            "title" : "InstanceSelectionBase",
            "type" : "object",
            "discriminator" : "type",
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for InstanceSelectionBase"
              }
            }
          },
          "PercentageInstanceSelection" : {
            "title" : "PercentageInstanceSelection",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/InstanceSelectionBase"
            }, {
              "type" : "object",
              "properties" : {
                "percentage" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/steps/cd/ParameterFieldString"
                  }, {
                    "type" : "string"
                  }, {
                    "type" : "number"
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for PercentageInstanceSelection"
              }
            }
          },
          "K8sDeleteStepNode_template" : {
            "title" : "K8sDeleteStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "K8sDelete" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "K8sDelete"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sDeleteStepInfo"
                  }
                }
              }
            } ]
          },
          "K8sDeleteStepInfo" : {
            "title" : "K8sDeleteStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "deleteResources" ],
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "deleteResources" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/DeleteResourcesWrapper"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "deleteResources" ],
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "deleteResources" : {
                "$ref" : "#/definitions/pipeline/steps/cd/DeleteResourcesWrapper"
              },
              "description" : {
                "desc" : "This is the description for K8sDeleteStepInfo"
              }
            }
          },
          "DeleteResourcesWrapper" : {
            "title" : "DeleteResourcesWrapper",
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "ResourceName", "ReleaseName", "ManifestPath" ]
              },
              "description" : {
                "desc" : "This is the description for DeleteResourcesWrapper"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ManifestPath"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/DeleteManifestPathSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ReleaseName"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/DeleteReleaseNameSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ResourceName"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/DeleteResourceNameSpec"
                  }
                }
              }
            } ]
          },
          "DeleteManifestPathSpec" : {
            "title" : "DeleteManifestPathSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/DeleteResourcesBaseSpec"
            }, {
              "type" : "object",
              "properties" : {
                "allManifestPaths" : {
                  "type" : "boolean"
                },
                "manifestPaths" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for DeleteManifestPathSpec"
              }
            }
          },
          "DeleteResourcesBaseSpec" : {
            "title" : "DeleteResourcesBaseSpec",
            "type" : "object",
            "discriminator" : "type",
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for DeleteResourcesBaseSpec"
              }
            }
          },
          "DeleteReleaseNameSpec" : {
            "title" : "DeleteReleaseNameSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/DeleteResourcesBaseSpec"
            }, {
              "type" : "object",
              "properties" : {
                "deleteNamespace" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for DeleteReleaseNameSpec"
              }
            }
          },
          "DeleteResourceNameSpec" : {
            "title" : "DeleteResourceNameSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/DeleteResourcesBaseSpec"
            }, {
              "type" : "object",
              "required" : [ "resourceNames" ],
              "properties" : {
                "resourceNames" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ],
                  "minLength" : 1
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for DeleteResourceNameSpec"
              }
            }
          },
          "K8sDryRunManifestStepNode_template" : {
            "title" : "K8sDryRunManifestStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "K8sDryRun" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "K8sDryRun"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sDryRunManifestStepInfo"
                  }
                }
              }
            } ]
          },
          "K8sDryRunManifestStepInfo" : {
            "title" : "K8sDryRunManifestStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for K8sDryRunManifestStepInfo"
              }
            }
          },
          "K8sRollingRollbackStepNode_template" : {
            "title" : "K8sRollingRollbackStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "K8sRollingRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "K8sRollingRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sRollingRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "K8sRollingRollbackStepInfo" : {
            "title" : "K8sRollingRollbackStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "commandFlags" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/steps/cd/K8sStepCommandFlag"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "pruningEnabled" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "commandFlags" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sStepCommandFlag"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "pruningEnabled" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "description" : {
                "desc" : "This is the description for K8sRollingRollbackStepInfo"
              }
            }
          },
          "K8sRollingStepNode_template" : {
            "title" : "K8sRollingStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "K8sRollingDeploy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "K8sRollingDeploy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sRollingStepInfo"
                  }
                }
              }
            } ]
          },
          "K8sRollingStepInfo" : {
            "title" : "K8sRollingStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "commandFlags" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/steps/cd/K8sStepCommandFlag"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "pruningEnabled" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                },
                "skipDryRun" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "commandFlags" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sStepCommandFlag"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "pruningEnabled" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "skipDryRun" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "description" : {
                "desc" : "This is the description for K8sRollingStepInfo"
              }
            }
          },
          "K8sScaleStepNode_template" : {
            "title" : "K8sScaleStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "K8sScale" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "K8sScale"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sScaleStepInfo"
                  }
                }
              }
            } ]
          },
          "K8sScaleStepInfo" : {
            "title" : "K8sScaleStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "instanceSelection", "workload" ],
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "instanceSelection" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/InstanceSelectionWrapper"
                },
                "skipSteadyStateCheck" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                },
                "workload" : {
                  "type" : "string",
                  "minLength" : 1
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "instanceSelection", "workload" ],
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "instanceSelection" : {
                "$ref" : "#/definitions/pipeline/steps/cd/InstanceSelectionWrapper"
              },
              "skipSteadyStateCheck" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "workload" : {
                "type" : "string",
                "minLength" : 1
              },
              "description" : {
                "desc" : "This is the description for K8sScaleStepInfo"
              }
            }
          },
          "MergePRStepNode_template" : {
            "title" : "MergePRStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "MergePR" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "MergePR"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/MergePRStepInfo"
                  }
                }
              }
            } ]
          },
          "MergePRStepInfo" : {
            "title" : "MergePRStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "deleteSourceBranch" ],
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "deleteSourceBranch" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                },
                "variables" : {
                  "type" : "array",
                  "items" : {
                    "oneOf" : [ {
                      "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                    } ]
                  }
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "deleteSourceBranch" ],
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "deleteSourceBranch" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "variables" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                  } ]
                }
              },
              "description" : {
                "desc" : "This is the description for MergePRStepInfo"
              }
            }
          },
          "RevertPRStepNode_template" : {
            "title" : "RevertPRStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "RevertPR" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "RevertPR"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/RevertPRStepInfo"
                  }
                }
              }
            } ]
          },
          "RevertPRStepInfo" : {
            "title" : "RevertPRStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "commitId" ],
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "commitId" : {
                  "type" : "string"
                },
                "prTitle" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "commitId" ],
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "commitId" : {
                "type" : "string"
              },
              "prTitle" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for RevertPRStepInfo"
              }
            }
          },
          "ServerlessAwsLambdaDeployStepNode_template" : {
            "title" : "ServerlessAwsLambdaDeployStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "ServerlessAwsLambdaDeploy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ServerlessAwsLambdaDeploy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaDeployStepInfo"
                  }
                }
              }
            } ]
          },
          "ServerlessAwsLambdaDeployStepInfo" : {
            "title" : "ServerlessAwsLambdaDeployStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "commandOptions" : {
                  "type" : "string"
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "commandOptions" : {
                "type" : "string"
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for ServerlessAwsLambdaDeployStepInfo"
              }
            }
          },
          "ServerlessAwsLambdaDeployV2StepNode_template" : {
            "title" : "ServerlessAwsLambdaDeployV2StepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "ServerlessAwsLambdaDeployV2" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ServerlessAwsLambdaDeployV2"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaDeployV2StepInfo"
                  }
                }
              }
            } ]
          },
          "ServerlessAwsLambdaDeployV2StepInfo" : {
            "title" : "ServerlessAwsLambdaDeployV2StepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "connectorRef" : {
                  "type" : "string"
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "deployCommandOptions" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "image" : {
                  "type" : "string"
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "serverlessVersion" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "connectorRef" : {
                "type" : "string"
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "deployCommandOptions" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "image" : {
                "type" : "string"
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "serverlessVersion" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for ServerlessAwsLambdaDeployV2StepInfo"
              }
            }
          },
          "ServerlessAwsLambdaPackageV2StepNode_template" : {
            "title" : "ServerlessAwsLambdaPackageV2StepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "ServerlessAwsLambdaPackageV2" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ServerlessAwsLambdaPackageV2"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaPackageV2StepInfo"
                  }
                }
              }
            } ]
          },
          "ServerlessAwsLambdaPackageV2StepInfo" : {
            "title" : "ServerlessAwsLambdaPackageV2StepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "connectorRef" : {
                  "type" : "string"
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "image" : {
                  "type" : "string"
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "packageCommandOptions" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "serverlessVersion" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "connectorRef" : {
                "type" : "string"
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "image" : {
                "type" : "string"
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "packageCommandOptions" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "serverlessVersion" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for ServerlessAwsLambdaPackageV2StepInfo"
              }
            }
          },
          "ServerlessAwsLambdaPrepareRollbackV2StepNode_template" : {
            "title" : "ServerlessAwsLambdaPrepareRollbackV2StepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "ServerlessAwsLambdaPrepareRollbackV2" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ServerlessAwsLambdaPrepareRollbackV2"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaPrepareRollbackV2StepInfo"
                  }
                }
              }
            } ]
          },
          "ServerlessAwsLambdaPrepareRollbackV2StepInfo" : {
            "title" : "ServerlessAwsLambdaPrepareRollbackV2StepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "connectorRef" : {
                  "type" : "string"
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "image" : {
                  "type" : "string"
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "serverlessVersion" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "connectorRef" : {
                "type" : "string"
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "image" : {
                "type" : "string"
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "serverlessVersion" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for ServerlessAwsLambdaPrepareRollbackV2StepInfo"
              }
            }
          },
          "ServerlessAwsLambdaRollbackStepNode_template" : {
            "title" : "ServerlessAwsLambdaRollbackStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "ServerlessAwsLambdaRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ServerlessAwsLambdaRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "ServerlessAwsLambdaRollbackStepInfo" : {
            "title" : "ServerlessAwsLambdaRollbackStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for ServerlessAwsLambdaRollbackStepInfo"
              }
            }
          },
          "ServerlessAwsLambdaRollbackV2StepNode_template" : {
            "title" : "ServerlessAwsLambdaRollbackV2StepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "ServerlessAwsLambdaRollbackV2" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ServerlessAwsLambdaRollbackV2"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaRollbackV2StepInfo"
                  }
                }
              }
            } ]
          },
          "ServerlessAwsLambdaRollbackV2StepInfo" : {
            "title" : "ServerlessAwsLambdaRollbackV2StepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "connectorRef" : {
                  "type" : "string"
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "image" : {
                  "type" : "string"
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "serverlessVersion" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "connectorRef" : {
                "type" : "string"
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "image" : {
                "type" : "string"
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "serverlessVersion" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for ServerlessAwsLambdaRollbackV2StepInfo"
              }
            }
          },
          "ShellScriptProvisionStepNode_template" : {
            "title" : "ShellScriptProvisionStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "ShellScriptProvision" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ShellScriptProvision"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ShellScriptProvisionStepInfo"
                  }
                }
              }
            } ]
          },
          "ShellScriptProvisionStepInfo" : {
            "title" : "ShellScriptProvisionStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "source" ],
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "environmentVariables" : {
                  "type" : "array",
                  "items" : {
                    "oneOf" : [ {
                      "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                    } ]
                  }
                },
                "source" : {
                  "$ref" : "#/definitions/pipeline/common/ShellScriptSourceWrapper"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "source" ],
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "environmentVariables" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                  } ]
                }
              },
              "source" : {
                "$ref" : "#/definitions/pipeline/common/ShellScriptSourceWrapper"
              },
              "description" : {
                "desc" : "This is the description for ShellScriptProvisionStepInfo"
              }
            }
          },
          "SyncStepNode_template" : {
            "title" : "SyncStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "GitOpsSync" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "GitOpsSync"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/SyncStepInfo"
                  }
                }
              }
            } ]
          },
          "SyncStepInfo" : {
            "title" : "SyncStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "applyOnly", "dryRun", "forceApply", "prune", "syncOptions" ],
              "properties" : {
                "applicationsList" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/steps/cd/AgentApplicationTargets"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "applyOnly" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "dryRun" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                },
                "forceApply" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                },
                "prune" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                },
                "retryStrategy" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/SyncRetryStrategy"
                },
                "syncOptions" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/SyncOptions"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "applyOnly", "dryRun", "forceApply", "prune", "syncOptions" ],
            "properties" : {
              "applicationsList" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AgentApplicationTargets"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "applyOnly" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "dryRun" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "forceApply" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "prune" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "retryStrategy" : {
                "$ref" : "#/definitions/pipeline/steps/cd/SyncRetryStrategy"
              },
              "syncOptions" : {
                "$ref" : "#/definitions/pipeline/steps/cd/SyncOptions"
              },
              "description" : {
                "desc" : "This is the description for SyncStepInfo"
              }
            }
          },
          "AgentApplicationTargets" : {
            "title" : "AgentApplicationTargets",
            "type" : "object",
            "required" : [ "agentId", "applicationName" ],
            "properties" : {
              "agentId" : {
                "type" : "string"
              },
              "applicationName" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for AgentApplicationTargets"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "SyncRetryStrategy" : {
            "title" : "SyncRetryStrategy",
            "type" : "object",
            "properties" : {
              "baseBackoffDuration" : {
                "type" : "string"
              },
              "increaseBackoffByFactor" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32",
                  "minimum" : 0
                }, {
                  "type" : "string"
                } ]
              },
              "limit" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32",
                  "minimum" : 0
                }, {
                  "type" : "string"
                } ]
              },
              "maxBackoffDuration" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for SyncRetryStrategy"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "SyncOptions" : {
            "title" : "SyncOptions",
            "type" : "object",
            "required" : [ "applyOutOfSyncOnly", "autoCreateNamespace", "prunePropagationPolicy", "pruneResourcesAtLast", "replaceResources", "skipSchemaValidation" ],
            "properties" : {
              "applyOutOfSyncOnly" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "autoCreateNamespace" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "prunePropagationPolicy" : {
                "type" : "string",
                "enum" : [ "foreground", "background", "orphan" ]
              },
              "pruneResourcesAtLast" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "replaceResources" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "skipSchemaValidation" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "description" : {
                "desc" : "This is the description for SyncOptions"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "TasAppResizeStepNode_template" : {
            "title" : "TasAppResizeStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AppResize" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AppResize"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasAppResizeStepInfo"
                  }
                }
              }
            } ]
          },
          "TasAppResizeStepInfo" : {
            "title" : "TasAppResizeStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "newAppInstances" ],
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ignoreInstanceCountManifest" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                },
                "newAppInstances" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/TasInstanceSelectionWrapper"
                },
                "oldAppInstances" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/TasInstanceSelectionWrapper"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "newAppInstances" ],
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ignoreInstanceCountManifest" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "newAppInstances" : {
                "$ref" : "#/definitions/pipeline/steps/cd/TasInstanceSelectionWrapper"
              },
              "oldAppInstances" : {
                "$ref" : "#/definitions/pipeline/steps/cd/TasInstanceSelectionWrapper"
              },
              "description" : {
                "desc" : "This is the description for TasAppResizeStepInfo"
              }
            }
          },
          "TasInstanceSelectionWrapper" : {
            "title" : "TasInstanceSelectionWrapper",
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "Percentage", "Count" ]
              },
              "description" : {
                "desc" : "This is the description for TasInstanceSelectionWrapper"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Count"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasCountInstanceSelection"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Percentage"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasPercentageInstanceSelection"
                  }
                }
              }
            } ]
          },
          "TasCountInstanceSelection" : {
            "title" : "TasCountInstanceSelection",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/TasInstanceSelectionBase"
            }, {
              "type" : "object",
              "required" : [ "value" ],
              "properties" : {
                "value" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/steps/cd/ParameterFieldString"
                  }, {
                    "type" : "string"
                  }, {
                    "type" : "number"
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for TasCountInstanceSelection"
              }
            }
          },
          "TasInstanceSelectionBase" : {
            "title" : "TasInstanceSelectionBase",
            "type" : "object",
            "discriminator" : "type",
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for TasInstanceSelectionBase"
              }
            }
          },
          "TasPercentageInstanceSelection" : {
            "title" : "TasPercentageInstanceSelection",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/TasInstanceSelectionBase"
            }, {
              "type" : "object",
              "required" : [ "value" ],
              "properties" : {
                "value" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/steps/cd/ParameterFieldString"
                  }, {
                    "type" : "string"
                  }, {
                    "type" : "number"
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for TasPercentageInstanceSelection"
              }
            }
          },
          "TasBGAppSetupStepNode_template" : {
            "title" : "TasBGAppSetupStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "BGAppSetup" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "BGAppSetup"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasBGAppSetupStepInfo"
                  }
                }
              }
            } ]
          },
          "TasBGAppSetupStepInfo" : {
            "title" : "TasBGAppSetupStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "existingVersionToKeep", "tasInstanceCountType" ],
              "properties" : {
                "additionalRoutes" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "existingVersionToKeep" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32",
                    "minimum" : 1
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "tasInstanceCountType" : {
                  "type" : "string",
                  "enum" : [ "FromManifest", "MatchRunningInstances" ]
                },
                "tempRoutes" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "existingVersionToKeep", "tasInstanceCountType" ],
            "properties" : {
              "additionalRoutes" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "existingVersionToKeep" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32",
                  "minimum" : 1
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "tasInstanceCountType" : {
                "type" : "string",
                "enum" : [ "FromManifest", "MatchRunningInstances" ]
              },
              "tempRoutes" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for TasBGAppSetupStepInfo"
              }
            }
          },
          "TasBasicAppSetupStepNode_template" : {
            "title" : "TasBasicAppSetupStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "BasicAppSetup" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "BasicAppSetup"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasBasicAppSetupStepInfo"
                  }
                }
              }
            } ]
          },
          "TasBasicAppSetupStepInfo" : {
            "title" : "TasBasicAppSetupStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "existingVersionToKeep", "tasInstanceCountType" ],
              "properties" : {
                "additionalRoutes" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "existingVersionToKeep" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32",
                    "minimum" : 1
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "tasInstanceCountType" : {
                  "type" : "string",
                  "enum" : [ "FromManifest", "MatchRunningInstances" ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "existingVersionToKeep", "tasInstanceCountType" ],
            "properties" : {
              "additionalRoutes" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "existingVersionToKeep" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32",
                  "minimum" : 1
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "tasInstanceCountType" : {
                "type" : "string",
                "enum" : [ "FromManifest", "MatchRunningInstances" ]
              },
              "description" : {
                "desc" : "This is the description for TasBasicAppSetupStepInfo"
              }
            }
          },
          "TasCanaryAppSetupStepNode_template" : {
            "title" : "TasCanaryAppSetupStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "CanaryAppSetup" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "CanaryAppSetup"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasCanaryAppSetupStepInfo"
                  }
                }
              }
            } ]
          },
          "TasCanaryAppSetupStepInfo" : {
            "title" : "TasCanaryAppSetupStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "existingVersionToKeep", "resizeStrategy", "tasInstanceCountType" ],
              "properties" : {
                "additionalRoutes" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "existingVersionToKeep" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32",
                    "minimum" : 1
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "resizeStrategy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "UpScaleNewFirst", "DownScaleOldFirst" ]
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "tasInstanceCountType" : {
                  "type" : "string",
                  "enum" : [ "FromManifest", "MatchRunningInstances" ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "existingVersionToKeep", "resizeStrategy", "tasInstanceCountType" ],
            "properties" : {
              "additionalRoutes" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "existingVersionToKeep" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32",
                  "minimum" : 1
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "resizeStrategy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "UpScaleNewFirst", "DownScaleOldFirst" ]
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "tasInstanceCountType" : {
                "type" : "string",
                "enum" : [ "FromManifest", "MatchRunningInstances" ]
              },
              "description" : {
                "desc" : "This is the description for TasCanaryAppSetupStepInfo"
              }
            }
          },
          "TasCommandStepNode_template" : {
            "title" : "TasCommandStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "TanzuCommand" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "TanzuCommand"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasCommandStepInfo"
                  }
                }
              }
            } ]
          },
          "TasCommandStepInfo" : {
            "title" : "TasCommandStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "script" ],
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "script" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasCommandScript"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "inputVariables" : {
                  "type" : "array",
                  "items" : {
                    "oneOf" : [ {
                      "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                    } ]
                  }
                },
                "outputVariables" : {
                  "type" : "array",
                  "items" : {
                    "oneOf" : [ {
                      "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                    } ]
                  }
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "script" ],
            "properties" : {
              "inputVariables" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                  } ]
                }
              },
              "outputVariables" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                  } ]
                }
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "script" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/cd/TasCommandScript"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for TasCommandStepInfo"
              }
            }
          },
          "TasCommandScript" : {
            "title" : "TasCommandScript",
            "type" : "object",
            "required" : [ "store" ],
            "properties" : {
              "store" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for TasCommandScript"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "TasRouteMappingStepNode_template" : {
            "title" : "TasRouteMappingStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "RouteMapping" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "RouteMapping"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasRouteMappingStepInfo"
                  }
                }
              }
            } ]
          },
          "TasRouteMappingStepInfo" : {
            "title" : "TasRouteMappingStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "appName", "routeType", "routes" ],
              "properties" : {
                "appName" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "routeType" : {
                  "type" : "string",
                  "enum" : [ "Map", "UnMap" ]
                },
                "routes" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "appName", "routeType", "routes" ],
            "properties" : {
              "appName" : {
                "type" : "string",
                "minLength" : 1
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "routeType" : {
                "type" : "string",
                "enum" : [ "Map", "UnMap" ]
              },
              "routes" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for TasRouteMappingStepInfo"
              }
            }
          },
          "TasRollbackStepNode_template" : {
            "title" : "TasRollbackStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AppRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AppRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "TasRollbackStepInfo" : {
            "title" : "TasRollbackStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for TasRollbackStepInfo"
              }
            }
          },
          "TasRollingDeployStepNode_template" : {
            "title" : "TasRollingDeployStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "TasRollingDeploy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "TasRollingDeploy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasRollingDeployStepInfo"
                  }
                }
              }
            } ]
          },
          "TasRollingDeployStepInfo" : {
            "title" : "TasRollingDeployStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "additionalRoutes" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "additionalRoutes" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for TasRollingDeployStepInfo"
              }
            }
          },
          "TasRollingRollbackStepNode_template" : {
            "title" : "TasRollingRollbackStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "TasRollingRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "TasRollingRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasRollingRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "TasRollingRollbackStepInfo" : {
            "title" : "TasRollingRollbackStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for TasRollingRollbackStepInfo"
              }
            }
          },
          "TasSwapRollbackStepNode_template" : {
            "title" : "TasSwapRollbackStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "SwapRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "SwapRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasSwapRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "TasSwapRollbackStepInfo" : {
            "title" : "TasSwapRollbackStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "upsizeInActiveApp" ],
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "upsizeInActiveApp" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "upsizeInActiveApp" ],
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "upsizeInActiveApp" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "description" : {
                "desc" : "This is the description for TasSwapRollbackStepInfo"
              }
            }
          },
          "TasSwapRoutesStepNode_template" : {
            "title" : "TasSwapRoutesStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "SwapRoutes" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "SwapRoutes"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasSwapRoutesStepInfo"
                  }
                }
              }
            } ]
          },
          "TasSwapRoutesStepInfo" : {
            "title" : "TasSwapRoutesStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "downSizeOldApplication" ],
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "downSizeOldApplication" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "downSizeOldApplication" ],
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "downSizeOldApplication" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for TasSwapRoutesStepInfo"
              }
            }
          },
          "TerraformApplyStepNode_template" : {
            "title" : "TerraformApplyStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "TerraformApply" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "TerraformApply"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformApplyStepInfo"
                  }
                }
              }
            } ]
          },
          "TerraformApplyStepInfo" : {
            "title" : "TerraformApplyStepInfo",
            "allOf" : [ {
              "oneOf" : [ {
                "required" : [ "configuration" ]
              }, {
                "required" : [ "cloudCliConfiguration" ]
              } ],
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "provisionerIdentifier" ],
              "properties" : {
                "cloudCliConfiguration" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudCliStepConfiguration"
                },
                "configuration" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerraformStepConfiguration"
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "metadata" : {
                  "type" : "string"
                },
                "provisionerIdentifier" : {
                  "type" : "string"
                }
              }
            }, {
              "oneOf" : [ {
                "required" : [ "configuration" ]
              }, {
                "required" : [ "cloudCliConfiguration" ]
              } ]
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "provisionerIdentifier" ],
            "properties" : {
              "cloudCliConfiguration" : {
                "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudCliStepConfiguration"
              },
              "configuration" : {
                "$ref" : "#/definitions/pipeline/steps/cd/TerraformStepConfiguration"
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "metadata" : {
                "type" : "string"
              },
              "provisionerIdentifier" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for TerraformApplyStepInfo"
              }
            }
          },
          "TerraformCloudCliStepConfiguration" : {
            "title" : "TerraformCloudCliStepConfiguration",
            "type" : "object",
            "properties" : {
              "commandFlags" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerraformCliOptionFlag"
                }
              },
              "spec" : {
                "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudCliExecutionData"
              },
              "skipStateStorage" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "description" : {
                "desc" : "This is the description for TerraformCloudCliStepConfiguration"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "TerraformCliOptionFlag" : {
            "title" : "TerraformCliOptionFlag",
            "type" : "object",
            "required" : [ "commandType", "flag" ],
            "properties" : {
              "commandType" : {
                "type" : "string",
                "enum" : [ "INIT", "WORKSPACE", "REFRESH", "PLAN", "APPLY", "DESTROY" ]
              },
              "flag" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for TerraformCliOptionFlag"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "TerraformCloudCliExecutionData" : {
            "title" : "TerraformCloudCliExecutionData",
            "type" : "object",
            "required" : [ "configFiles" ],
            "properties" : {
              "backendConfig" : {
                "$ref" : "#/definitions/pipeline/steps/cd/TerraformBackendConfig"
              },
              "configFiles" : {
                "$ref" : "#/definitions/pipeline/steps/cd/TerraformConfigFilesWrapper"
              },
              "environmentVariables" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                  } ]
                }
              },
              "targets" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string"
                } ]
              },
              "varFiles" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerraformVarFileWrapper"
                }
              },
              "description" : {
                "desc" : "This is the description for TerraformCloudCliExecutionData"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "TerraformBackendConfig" : {
            "title" : "TerraformBackendConfig",
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for TerraformBackendConfig"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Inline"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/InlineTerraformBackendConfigSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Remote"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/RemoteTerraformBackendConfigSpec"
                  }
                }
              }
            } ]
          },
          "InlineTerraformBackendConfigSpec" : {
            "title" : "InlineTerraformBackendConfigSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/TerraformBackendConfigSpec"
            }, {
              "type" : "object",
              "properties" : {
                "content" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for InlineTerraformBackendConfigSpec"
              }
            }
          },
          "TerraformBackendConfigSpec" : {
            "title" : "TerraformBackendConfigSpec",
            "type" : "object",
            "discriminator" : "type",
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for TerraformBackendConfigSpec"
              }
            }
          },
          "RemoteTerraformBackendConfigSpec" : {
            "title" : "RemoteTerraformBackendConfigSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/TerraformBackendConfigSpec"
            }, {
              "type" : "object",
              "required" : [ "store" ],
              "properties" : {
                "store" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for RemoteTerraformBackendConfigSpec"
              }
            }
          },
          "TerraformConfigFilesWrapper" : {
            "title" : "TerraformConfigFilesWrapper",
            "type" : "object",
            "required" : [ "store" ],
            "properties" : {
              "moduleSource" : {
                "$ref" : "#/definitions/pipeline/steps/cd/ModuleSource"
              },
              "store" : {
                "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
              },
              "description" : {
                "desc" : "This is the description for TerraformConfigFilesWrapper"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ModuleSource" : {
            "title" : "ModuleSource",
            "type" : "object",
            "required" : [ "useConnectorCredentials" ],
            "properties" : {
              "useConnectorCredentials" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/cd/ParameterFieldBoolean"
                }, {
                  "type" : "string"
                }, {
                  "type" : "boolean"
                } ]
              },
              "description" : {
                "desc" : "This is the description for ModuleSource"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "TerraformVarFileWrapper" : {
            "title" : "TerraformVarFileWrapper",
            "type" : "object",
            "required" : [ "varFile" ],
            "properties" : {
              "varFile" : {
                "$ref" : "#/definitions/pipeline/steps/cd/TerraformVarFile"
              },
              "description" : {
                "desc" : "This is the description for TerraformVarFileWrapper"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "TerraformVarFile" : {
            "title" : "TerraformVarFile",
            "type" : "object",
            "required" : [ "identifier", "spec", "type" ],
            "properties" : {
              "identifier" : {
                "type" : "string"
              },
              "type" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for TerraformVarFile"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Inline"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/InlineTerraformVarFileSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Remote"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/RemoteTerraformVarFileSpec"
                  }
                }
              }
            } ]
          },
          "InlineTerraformVarFileSpec" : {
            "title" : "InlineTerraformVarFileSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/TerraformVarFileSpec"
            }, {
              "type" : "object",
              "properties" : {
                "content" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for InlineTerraformVarFileSpec"
              }
            }
          },
          "TerraformVarFileSpec" : {
            "title" : "TerraformVarFileSpec",
            "type" : "object",
            "discriminator" : "type",
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for TerraformVarFileSpec"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "RemoteTerraformVarFileSpec" : {
            "title" : "RemoteTerraformVarFileSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/TerraformVarFileSpec"
            }, {
              "type" : "object",
              "required" : [ "store" ],
              "properties" : {
                "store" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for RemoteTerraformVarFileSpec"
              }
            }
          },
          "TerraformStepConfiguration" : {
            "title" : "TerraformStepConfiguration",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "commandFlags" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerraformCliOptionFlag"
                }
              },
              "skipRefreshCommand" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "spec" : {
                "$ref" : "#/definitions/pipeline/steps/cd/TerraformExecutionData"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Inline", "InheritFromPlan", "InheritFromApply" ]
              },
              "skipStateStorage" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "description" : {
                "desc" : "This is the description for TerraformStepConfiguration"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "TerraformExecutionData" : {
            "title" : "TerraformExecutionData",
            "type" : "object",
            "required" : [ "configFiles" ],
            "properties" : {
              "backendConfig" : {
                "$ref" : "#/definitions/pipeline/steps/cd/TerraformBackendConfig"
              },
              "configFiles" : {
                "$ref" : "#/definitions/pipeline/steps/cd/TerraformConfigFilesWrapper"
              },
              "environmentVariables" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                  } ]
                }
              },
              "providerCredential" : {
                "$ref" : "#/definitions/pipeline/steps/cd/TerraformProviderCredential"
              },
              "targets" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string"
                } ]
              },
              "varFiles" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerraformVarFileWrapper"
                }
              },
              "workspace" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for TerraformExecutionData"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "TerraformProviderCredential" : {
            "title" : "TerraformProviderCredential",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "Aws" ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Aws"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AWSIAMRoleCredentialSpec"
                  }
                }
              }
            } ]
          },
          "AWSIAMRoleCredentialSpec" : {
            "title" : "AWSIAMRoleCredentialSpec",
            "type" : "object",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/TerraformProviderCredentialSpec"
            }, {
              "type" : "object",
              "required" : [ "connectorRef" ],
              "properties" : {
                "connectorRef" : {
                  "type" : "string"
                },
                "region" : {
                  "type" : "string"
                },
                "roleArn" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "TerraformProviderCredentialSpec" : {
            "title" : "TerraformProviderCredentialSpec",
            "type" : "object",
            "discriminator" : "type",
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "TerraformCloudRollbackStepNode_template" : {
            "title" : "TerraformCloudRollbackStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "TerraformCloudRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "TerraformCloudRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "TerraformCloudRollbackStepInfo" : {
            "title" : "TerraformCloudRollbackStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "provisionerIdentifier" ],
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "discardPendingRuns" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                },
                "overridePolicies" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                },
                "provisionerIdentifier" : {
                  "type" : "string"
                },
                "runMessage" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "provisionerIdentifier" ],
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "discardPendingRuns" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "overridePolicies" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "provisionerIdentifier" : {
                "type" : "string"
              },
              "runMessage" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for TerraformCloudRollbackStepInfo"
              }
            }
          },
          "TerraformCloudRunStepNode_template" : {
            "title" : "TerraformCloudRunStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "TerraformCloudRun" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "TerraformCloudRun"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRunStepInfo"
                  }
                }
              }
            } ]
          },
          "TerraformCloudRunStepInfo" : {
            "title" : "TerraformCloudRunStepInfo",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "runType" : {
                    "const" : "Apply"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudApplySpec"
                  }
                }
              },
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "runType", "spec" ],
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "runMessage" : {
                  "type" : "string"
                },
                "runType" : {
                  "type" : "string",
                  "enum" : [ "RefreshState", "PlanOnly", "PlanAndApply", "PlanAndDestroy", "Plan", "Apply" ]
                }
              },
              "if" : {
                "properties" : {
                  "runType" : {
                    "const" : "Plan"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudPlanSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "runType" : {
                    "const" : "PlanAndApply"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudPlanAndApplySpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "runType" : {
                    "const" : "PlanAndDestroy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudPlanAndDestroySpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "runType" : {
                    "const" : "PlanOnly"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudPlanOnlySpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "runType" : {
                    "const" : "RefreshState"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRefreshSpec"
                  }
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "runType", "spec" ],
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "runMessage" : {
                "type" : "string"
              },
              "runType" : {
                "type" : "string",
                "enum" : [ "RefreshState", "PlanOnly", "PlanAndApply", "PlanAndDestroy", "Plan", "Apply" ]
              },
              "description" : {
                "desc" : "This is the description for TerraformCloudRunStepInfo"
              }
            }
          },
          "TerraformCloudApplySpec" : {
            "title" : "TerraformCloudApplySpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRunExecutionSpec"
            }, {
              "type" : "object",
              "required" : [ "provisionerIdentifier" ],
              "properties" : {
                "provisionerIdentifier" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for TerraformCloudApplySpec"
              }
            }
          },
          "TerraformCloudRunExecutionSpec" : {
            "title" : "TerraformCloudRunExecutionSpec",
            "type" : "object",
            "discriminator" : "runType",
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for TerraformCloudRunExecutionSpec"
              }
            }
          },
          "TerraformCloudPlanSpec" : {
            "title" : "TerraformCloudPlanSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRunExecutionSpec"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "discardPendingRuns", "organization", "provisionerIdentifier", "workspace" ],
              "properties" : {
                "connectorRef" : {
                  "type" : "string"
                },
                "discardPendingRuns" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                },
                "exportTerraformPlanJson" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                },
                "organization" : {
                  "type" : "string"
                },
                "planType" : {
                  "type" : "string",
                  "enum" : [ "Apply", "Destroy" ]
                },
                "provisionerIdentifier" : {
                  "type" : "string"
                },
                "targets" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string"
                  } ]
                },
                "variables" : {
                  "type" : "array",
                  "items" : {
                    "oneOf" : [ {
                      "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                    } ]
                  }
                },
                "workspace" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for TerraformCloudPlanSpec"
              }
            }
          },
          "TerraformCloudPlanAndApplySpec" : {
            "title" : "TerraformCloudPlanAndApplySpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRunExecutionSpec"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "organization", "provisionerIdentifier", "workspace" ],
              "properties" : {
                "connectorRef" : {
                  "type" : "string"
                },
                "discardPendingRuns" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                },
                "organization" : {
                  "type" : "string"
                },
                "overridePolicies" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                },
                "provisionerIdentifier" : {
                  "type" : "string"
                },
                "targets" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string"
                  } ]
                },
                "variables" : {
                  "type" : "array",
                  "items" : {
                    "oneOf" : [ {
                      "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                    } ]
                  }
                },
                "workspace" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for TerraformCloudPlanAndApplySpec"
              }
            }
          },
          "TerraformCloudPlanAndDestroySpec" : {
            "title" : "TerraformCloudPlanAndDestroySpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRunExecutionSpec"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "organization", "provisionerIdentifier", "workspace" ],
              "properties" : {
                "connectorRef" : {
                  "type" : "string"
                },
                "discardPendingRuns" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                },
                "organization" : {
                  "type" : "string"
                },
                "overridePolicies" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                },
                "provisionerIdentifier" : {
                  "type" : "string"
                },
                "targets" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string"
                  } ]
                },
                "variables" : {
                  "type" : "array",
                  "items" : {
                    "oneOf" : [ {
                      "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                    } ]
                  }
                },
                "workspace" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for TerraformCloudPlanAndDestroySpec"
              }
            }
          },
          "TerraformCloudPlanOnlySpec" : {
            "title" : "TerraformCloudPlanOnlySpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRunExecutionSpec"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "discardPendingRuns", "organization", "provisionerIdentifier", "workspace" ],
              "properties" : {
                "connectorRef" : {
                  "type" : "string"
                },
                "discardPendingRuns" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                },
                "exportTerraformPlanJson" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                },
                "organization" : {
                  "type" : "string"
                },
                "planType" : {
                  "type" : "string",
                  "enum" : [ "Apply", "Destroy" ]
                },
                "provisionerIdentifier" : {
                  "type" : "string"
                },
                "targets" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string"
                  } ]
                },
                "terraformVersion" : {
                  "type" : "string"
                },
                "variables" : {
                  "type" : "array",
                  "items" : {
                    "oneOf" : [ {
                      "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                    } ]
                  }
                },
                "workspace" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for TerraformCloudPlanOnlySpec"
              }
            }
          },
          "TerraformCloudRefreshSpec" : {
            "title" : "TerraformCloudRefreshSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRunExecutionSpec"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "organization", "workspace" ],
              "properties" : {
                "connectorRef" : {
                  "type" : "string"
                },
                "discardPendingRuns" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                },
                "organization" : {
                  "type" : "string"
                },
                "variables" : {
                  "type" : "array",
                  "items" : {
                    "oneOf" : [ {
                      "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                    } ]
                  }
                },
                "workspace" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for TerraformCloudRefreshSpec"
              }
            }
          },
          "TerraformDestroyStepNode_template" : {
            "title" : "TerraformDestroyStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "TerraformDestroy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "TerraformDestroy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformDestroyStepInfo"
                  }
                }
              }
            } ]
          },
          "TerraformDestroyStepInfo" : {
            "title" : "TerraformDestroyStepInfo",
            "allOf" : [ {
              "oneOf" : [ {
                "required" : [ "configuration" ]
              }, {
                "required" : [ "cloudCliConfiguration" ]
              } ],
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "provisionerIdentifier" ],
              "properties" : {
                "cloudCliConfiguration" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudCliStepConfiguration"
                },
                "configuration" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerraformStepConfiguration"
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "metadata" : {
                  "type" : "string"
                },
                "provisionerIdentifier" : {
                  "type" : "string"
                }
              }
            }, {
              "oneOf" : [ {
                "required" : [ "configuration" ]
              }, {
                "required" : [ "cloudCliConfiguration" ]
              } ]
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "provisionerIdentifier" ],
            "properties" : {
              "cloudCliConfiguration" : {
                "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudCliStepConfiguration"
              },
              "configuration" : {
                "$ref" : "#/definitions/pipeline/steps/cd/TerraformStepConfiguration"
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "metadata" : {
                "type" : "string"
              },
              "provisionerIdentifier" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for TerraformDestroyStepInfo"
              }
            }
          },
          "TerraformPlanStepNode_template" : {
            "title" : "TerraformPlanStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "TerraformPlan" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "TerraformPlan"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformPlanStepInfo"
                  }
                }
              }
            } ]
          },
          "TerraformPlanStepInfo" : {
            "title" : "TerraformPlanStepInfo",
            "allOf" : [ {
              "oneOf" : [ {
                "required" : [ "configuration" ]
              }, {
                "required" : [ "cloudCliConfiguration" ]
              } ],
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "provisionerIdentifier" ],
              "properties" : {
                "cloudCliConfiguration" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudCliPlanExecutionData"
                },
                "configuration" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerraformPlanExecutionData"
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "provisionerIdentifier" : {
                  "type" : "string"
                }
              }
            }, {
              "oneOf" : [ {
                "required" : [ "configuration" ]
              }, {
                "required" : [ "cloudCliConfiguration" ]
              } ]
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "provisionerIdentifier" ],
            "properties" : {
              "cloudCliConfiguration" : {
                "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudCliPlanExecutionData"
              },
              "configuration" : {
                "$ref" : "#/definitions/pipeline/steps/cd/TerraformPlanExecutionData"
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "provisionerIdentifier" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for TerraformPlanStepInfo"
              }
            }
          },
          "TerraformCloudCliPlanExecutionData" : {
            "title" : "TerraformCloudCliPlanExecutionData",
            "type" : "object",
            "required" : [ "command", "configFiles" ],
            "properties" : {
              "backendConfig" : {
                "$ref" : "#/definitions/pipeline/steps/cd/TerraformBackendConfig"
              },
              "command" : {
                "type" : "string",
                "enum" : [ "Apply", "Destroy" ]
              },
              "commandFlags" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerraformCliOptionFlag"
                }
              },
              "configFiles" : {
                "$ref" : "#/definitions/pipeline/steps/cd/TerraformConfigFilesWrapper"
              },
              "environmentVariables" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                  } ]
                }
              },
              "targets" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string"
                } ]
              },
              "varFiles" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerraformVarFileWrapper"
                }
              },
              "skipStateStorage" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "description" : {
                "desc" : "This is the description for TerraformCloudCliPlanExecutionData"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "TerraformPlanExecutionData" : {
            "title" : "TerraformPlanExecutionData",
            "type" : "object",
            "required" : [ "command", "configFiles", "secretManagerRef" ],
            "properties" : {
              "backendConfig" : {
                "$ref" : "#/definitions/pipeline/steps/cd/TerraformBackendConfig"
              },
              "command" : {
                "type" : "string",
                "enum" : [ "Apply", "Destroy" ]
              },
              "commandFlags" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerraformCliOptionFlag"
                }
              },
              "configFiles" : {
                "$ref" : "#/definitions/pipeline/steps/cd/TerraformConfigFilesWrapper"
              },
              "environmentVariables" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                  } ]
                }
              },
              "providerCredential" : {
                "$ref" : "#/definitions/pipeline/steps/cd/TerraformProviderCredential"
              },
              "exportTerraformHumanReadablePlan" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "exportTerraformPlanJson" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "secretManagerRef" : {
                "type" : "string"
              },
              "skipRefreshCommand" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "targets" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string"
                } ]
              },
              "varFiles" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerraformVarFileWrapper"
                }
              },
              "skipStateStorage" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "workspace" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for TerraformPlanExecutionData"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "TerraformRollbackStepNode_template" : {
            "title" : "TerraformRollbackStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "TerraformRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "TerraformRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "TerraformRollbackStepInfo" : {
            "title" : "TerraformRollbackStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "provisionerIdentifier" ],
              "properties" : {
                "commandFlags" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformCliOptionFlag"
                  }
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "provisionerIdentifier" : {
                  "type" : "string"
                },
                "skipRefreshCommand" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "provisionerIdentifier" ],
            "properties" : {
              "commandFlags" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerraformCliOptionFlag"
                }
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "provisionerIdentifier" : {
                "type" : "string"
              },
              "skipRefreshCommand" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "description" : {
                "desc" : "This is the description for TerraformRollbackStepInfo"
              }
            }
          },
          "TerragruntApplyStepNode_template" : {
            "title" : "TerragruntApplyStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "TerragruntApply" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "TerragruntApply"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerragruntApplyStepInfo"
                  }
                }
              }
            } ]
          },
          "TerragruntApplyStepInfo" : {
            "title" : "TerragruntApplyStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "configuration", "provisionerIdentifier" ],
              "properties" : {
                "configuration" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerragruntStepConfiguration"
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "metadata" : {
                  "type" : "string"
                },
                "provisionerIdentifier" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "configuration", "provisionerIdentifier" ],
            "properties" : {
              "configuration" : {
                "$ref" : "#/definitions/pipeline/steps/cd/TerragruntStepConfiguration"
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "metadata" : {
                "type" : "string"
              },
              "provisionerIdentifier" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for TerragruntApplyStepInfo"
              }
            }
          },
          "TerragruntStepConfiguration" : {
            "title" : "TerragruntStepConfiguration",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "commandFlags" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerragruntCliOptionFlag"
                }
              },
              "spec" : {
                "$ref" : "#/definitions/pipeline/steps/cd/TerragruntExecutionData"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Inline", "InheritFromPlan", "InheritFromApply" ]
              },
              "description" : {
                "desc" : "This is the description for TerragruntStepConfiguration"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "TerragruntCliOptionFlag" : {
            "title" : "TerragruntCliOptionFlag",
            "type" : "object",
            "required" : [ "commandType", "flag" ],
            "properties" : {
              "commandType" : {
                "type" : "string",
                "enum" : [ "INIT", "WORKSPACE", "PLAN", "APPLY", "DESTROY", "OUTPUT" ]
              },
              "flag" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for TerragruntCliOptionFlag"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "TerragruntExecutionData" : {
            "title" : "TerragruntExecutionData",
            "type" : "object",
            "required" : [ "configFiles", "moduleConfig" ],
            "properties" : {
              "backendConfig" : {
                "$ref" : "#/definitions/pipeline/steps/cd/TerragruntBackendConfig"
              },
              "configFiles" : {
                "$ref" : "#/definitions/pipeline/steps/cd/TerragruntConfigFilesWrapper"
              },
              "environmentVariables" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                  } ]
                }
              },
              "moduleConfig" : {
                "$ref" : "#/definitions/pipeline/steps/cd/TerragruntModuleConfig"
              },
              "targets" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string"
                } ]
              },
              "varFiles" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerragruntVarFileWrapper"
                }
              },
              "workspace" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for TerragruntExecutionData"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "TerragruntBackendConfig" : {
            "title" : "TerragruntBackendConfig",
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for TerragruntBackendConfig"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Inline"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/InlineTerragruntBackendConfigSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Remote"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/RemoteTerragruntBackendConfigSpec"
                  }
                }
              }
            } ]
          },
          "InlineTerragruntBackendConfigSpec" : {
            "title" : "InlineTerragruntBackendConfigSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/TerragruntBackendConfigSpec"
            }, {
              "type" : "object",
              "properties" : {
                "content" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for InlineTerragruntBackendConfigSpec"
              }
            }
          },
          "TerragruntBackendConfigSpec" : {
            "title" : "TerragruntBackendConfigSpec",
            "type" : "object",
            "discriminator" : "type",
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for TerragruntBackendConfigSpec"
              }
            }
          },
          "RemoteTerragruntBackendConfigSpec" : {
            "title" : "RemoteTerragruntBackendConfigSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/TerragruntBackendConfigSpec"
            }, {
              "type" : "object",
              "required" : [ "store" ],
              "properties" : {
                "store" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for RemoteTerragruntBackendConfigSpec"
              }
            }
          },
          "TerragruntConfigFilesWrapper" : {
            "title" : "TerragruntConfigFilesWrapper",
            "type" : "object",
            "required" : [ "store" ],
            "properties" : {
              "moduleSource" : {
                "$ref" : "#/definitions/pipeline/steps/cd/ModuleSource"
              },
              "store" : {
                "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
              },
              "description" : {
                "desc" : "This is the description for TerragruntConfigFilesWrapper"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "TerragruntModuleConfig" : {
            "title" : "TerragruntModuleConfig",
            "type" : "object",
            "required" : [ "path", "terragruntRunType" ],
            "properties" : {
              "path" : {
                "type" : "string"
              },
              "terragruntRunType" : {
                "type" : "string",
                "enum" : [ "RunAll", "RunModule" ]
              },
              "description" : {
                "desc" : "This is the description for TerragruntModuleConfig"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "TerragruntVarFileWrapper" : {
            "title" : "TerragruntVarFileWrapper",
            "type" : "object",
            "required" : [ "varFile" ],
            "properties" : {
              "varFile" : {
                "$ref" : "#/definitions/pipeline/steps/cd/TerragruntVarFile"
              },
              "description" : {
                "desc" : "This is the description for TerragruntVarFileWrapper"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "TerragruntVarFile" : {
            "title" : "TerragruntVarFile",
            "type" : "object",
            "required" : [ "identifier", "spec", "type" ],
            "properties" : {
              "identifier" : {
                "type" : "string"
              },
              "type" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for TerragruntVarFile"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Inline"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/InlineTerragruntVarFileSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Remote"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/RemoteTerragruntVarFileSpec"
                  }
                }
              }
            } ]
          },
          "InlineTerragruntVarFileSpec" : {
            "title" : "InlineTerragruntVarFileSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/TerragruntVarFileSpec"
            }, {
              "type" : "object",
              "properties" : {
                "content" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for InlineTerragruntVarFileSpec"
              }
            }
          },
          "TerragruntVarFileSpec" : {
            "title" : "TerragruntVarFileSpec",
            "type" : "object",
            "discriminator" : "type",
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for TerragruntVarFileSpec"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "RemoteTerragruntVarFileSpec" : {
            "title" : "RemoteTerragruntVarFileSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cd/TerragruntVarFileSpec"
            }, {
              "type" : "object",
              "required" : [ "store" ],
              "properties" : {
                "store" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for RemoteTerragruntVarFileSpec"
              }
            }
          },
          "TerragruntDestroyStepNode_template" : {
            "title" : "TerragruntDestroyStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "TerragruntDestroy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "TerragruntDestroy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerragruntDestroyStepInfo"
                  }
                }
              }
            } ]
          },
          "TerragruntDestroyStepInfo" : {
            "title" : "TerragruntDestroyStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "configuration", "provisionerIdentifier" ],
              "properties" : {
                "configuration" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerragruntStepConfiguration"
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "metadata" : {
                  "type" : "string"
                },
                "provisionerIdentifier" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "configuration", "provisionerIdentifier" ],
            "properties" : {
              "configuration" : {
                "$ref" : "#/definitions/pipeline/steps/cd/TerragruntStepConfiguration"
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "metadata" : {
                "type" : "string"
              },
              "provisionerIdentifier" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for TerragruntDestroyStepInfo"
              }
            }
          },
          "TerragruntPlanStepNode_template" : {
            "title" : "TerragruntPlanStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "TerragruntPlan" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "TerragruntPlan"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerragruntPlanStepInfo"
                  }
                }
              }
            } ]
          },
          "TerragruntPlanStepInfo" : {
            "title" : "TerragruntPlanStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "configuration", "provisionerIdentifier" ],
              "properties" : {
                "configuration" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerragruntPlanExecutionData"
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "provisionerIdentifier" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "configuration", "provisionerIdentifier" ],
            "properties" : {
              "configuration" : {
                "$ref" : "#/definitions/pipeline/steps/cd/TerragruntPlanExecutionData"
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "provisionerIdentifier" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for TerragruntPlanStepInfo"
              }
            }
          },
          "TerragruntPlanExecutionData" : {
            "title" : "TerragruntPlanExecutionData",
            "type" : "object",
            "required" : [ "command", "configFiles", "moduleConfig", "secretManagerRef" ],
            "properties" : {
              "backendConfig" : {
                "$ref" : "#/definitions/pipeline/steps/cd/TerragruntBackendConfig"
              },
              "command" : {
                "type" : "string",
                "enum" : [ "Apply", "Destroy" ]
              },
              "commandFlags" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerragruntCliOptionFlag"
                }
              },
              "configFiles" : {
                "$ref" : "#/definitions/pipeline/steps/cd/TerragruntConfigFilesWrapper"
              },
              "environmentVariables" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                  } ]
                }
              },
              "exportTerragruntPlanJson" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "moduleConfig" : {
                "$ref" : "#/definitions/pipeline/steps/cd/TerragruntModuleConfig"
              },
              "secretManagerRef" : {
                "type" : "string"
              },
              "targets" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string"
                } ]
              },
              "varFiles" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerragruntVarFileWrapper"
                }
              },
              "workspace" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for TerragruntPlanExecutionData"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "TerragruntRollbackStepNode_template" : {
            "title" : "TerragruntRollbackStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "TerragruntRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "TerragruntRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerragruntRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "TerragruntRollbackStepInfo" : {
            "title" : "TerragruntRollbackStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "provisionerIdentifier" ],
              "properties" : {
                "commandFlags" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerragruntCliOptionFlag"
                  }
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "provisionerIdentifier" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "provisionerIdentifier" ],
            "properties" : {
              "commandFlags" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerragruntCliOptionFlag"
                }
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "provisionerIdentifier" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for TerragruntRollbackStepInfo"
              }
            }
          },
          "UpdateReleaseRepoStepNode_template" : {
            "title" : "UpdateReleaseRepoStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "GitOpsUpdateReleaseRepo" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "GitOpsUpdateReleaseRepo"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/UpdateReleaseRepoStepInfo"
                  }
                }
              }
            } ]
          },
          "UpdateReleaseRepoStepInfo" : {
            "title" : "UpdateReleaseRepoStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "prTitle" : {
                  "type" : "string"
                },
                "stringMap" : {
                  "$ref" : "#/definitions/pipeline/steps/common/ParameterFieldMapStringString"
                },
                "variables" : {
                  "type" : "array",
                  "items" : {
                    "oneOf" : [ {
                      "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                    } ]
                  }
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "prTitle" : {
                "type" : "string"
              },
              "stringMap" : {
                "$ref" : "#/definitions/pipeline/steps/common/ParameterFieldMapStringString"
              },
              "variables" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                  } ]
                }
              },
              "description" : {
                "desc" : "This is the description for UpdateReleaseRepoStepInfo"
              }
            }
          },
          "K8sBGStageScaleDownStepNode_template" : {
            "title" : "K8sBGStageScaleDownStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "K8sBlueGreenStageScaleDown" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "K8sBlueGreenStageScaleDown"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sBGStageScaleDownStepInfo"
                  }
                }
              }
            } ]
          },
          "K8sBGStageScaleDownStepInfo" : {
            "title" : "K8sBGStageScaleDownStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for K8sBGStageScaleDownStepInfo"
              }
            }
          },
          "GoogleFunctionsGenOneRollbackStepNode_template" : {
            "title" : "GoogleFunctionsGenOneRollbackStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "RollbackCloudFunctionGenOne" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "RollbackCloudFunctionGenOne"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsGenOneRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "GoogleFunctionsGenOneRollbackStepInfo" : {
            "title" : "GoogleFunctionsGenOneRollbackStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for GoogleFunctionsGenOneRollbackStepInfo"
              }
            }
          },
          "UpdateGitOpsAppStepNode_template" : {
            "title" : "UpdateGitOpsAppStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "UpdateGitOpsApp" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "UpdateGitOpsApp"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/UpdateGitOpsAppStepInfo"
                  }
                }
              }
            } ]
          },
          "UpdateGitOpsAppStepInfo" : {
            "title" : "UpdateGitOpsAppStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "agentId", "applicationName" ],
              "properties" : {
                "agentId" : [ {
                  "type" : "string"
                } ],
                "applicationName" : [ {
                  "type" : "string"
                } ],
                "helm" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/steps/cd/HelmValues"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "kustomize" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/steps/cd/KustomizeValues"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "targetRevision" : [ {
                  "type" : "string"
                } ]
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "agentId", "applicationName" ],
            "properties" : {
              "agentId" : [ {
                "type" : "string"
              } ],
              "applicationName" : [ {
                "type" : "string"
              } ],
              "helm" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/cd/HelmValues"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "kustomize" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/cd/KustomizeValues"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "targetRevision" : [ {
                "type" : "string"
              } ],
              "description" : {
                "desc" : "This is the description for UpdateGitOpsAppStepInfo"
              }
            }
          },
          "HelmValues" : {
            "title" : "HelmValues",
            "type" : "object",
            "properties" : {
              "fileParameters" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/HelmFileParameters"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "parameters" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/HelmParameters"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "valueFiles" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for HelmValues"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "HelmFileParameters" : {
            "title" : "HelmFileParameters",
            "type" : "object",
            "required" : [ "name", "path" ],
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "path" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for HelmFileParameters"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "HelmParameters" : {
            "title" : "HelmParameters",
            "type" : "object",
            "required" : [ "name", "value" ],
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "value" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for HelmParameters"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "KustomizeValues" : {
            "title" : "KustomizeValues",
            "type" : "object",
            "properties" : {
              "images" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "namespace" : {
                "oneOf" : [ {
                  "type" : "string"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "replicas" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/KustomizeReplicas"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for KustomizeValues"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "KustomizeReplicas" : {
            "title" : "KustomizeReplicas",
            "type" : "object",
            "required" : [ "count", "name" ],
            "properties" : {
              "count" : {
                "type" : "string"
              },
              "name" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for KustomizeReplicas"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "K8sTrafficRoutingStepNode_template" : {
            "title" : "K8sTrafficRoutingStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "K8sTrafficRouting" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "K8sTrafficRouting"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sTrafficRoutingStepInfo"
                  }
                }
              }
            } ]
          },
          "K8sTrafficRoutingStepInfo" : {
            "title" : "K8sTrafficRoutingStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "type" ],
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "type" : {
                  "type" : "string",
                  "enum" : [ "inherit", "config" ]
                },
                "trafficRouting" : {
                  "type" : "object"
                },
                "allOf" : [ {
                  "if" : {
                    "properties" : {
                      "type" : {
                        "const" : "inherit"
                      }
                    }
                  },
                  "then" : {
                    "properties" : {
                      "trafficRouting" : {
                        "$ref" : "#/definitions/pipeline/steps/cd/K8sTrafficRoutingDestinations"
                      }
                    }
                  }
                }, {
                  "if" : {
                    "properties" : {
                      "type" : {
                        "const" : "config"
                      }
                    }
                  },
                  "then" : {
                    "properties" : {
                      "trafficRouting" : {
                        "$ref" : "#/definitions/pipeline/steps/cd/K8sTrafficRouting"
                      }
                    }
                  }
                } ]
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "trafficRouting" : {
                "type" : "object",
                "allOf" : [ {
                  "if" : {
                    "properties" : {
                      "type" : {
                        "const" : "inherit"
                      }
                    }
                  },
                  "then" : {
                    "properties" : {
                      "trafficRouting" : {
                        "$ref" : "#/definitions/pipeline/steps/cd/K8sTrafficRoutingDestinations"
                      }
                    }
                  }
                }, {
                  "if" : {
                    "properties" : {
                      "type" : {
                        "const" : "config"
                      }
                    }
                  },
                  "then" : {
                    "properties" : {
                      "trafficRouting" : {
                        "$ref" : "#/definitions/pipeline/steps/cd/K8sTrafficRouting"
                      }
                    }
                  }
                } ]
              },
              "description" : {
                "desc" : "This is the description for K8sTrafficRoutingStepInfo"
              }
            }
          },
          "MergePRStepNode" : {
            "title" : "MergePRStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for MergePRStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "MergePR" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "MergePR"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/MergePRStepInfo"
                  }
                }
              }
            } ]
          },
          "HelmDeployStepNode" : {
            "title" : "HelmDeployStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for HelmDeployStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "HelmDeploy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "HelmDeploy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/HelmDeployStepInfo"
                  }
                }
              }
            } ]
          },
          "TasBGAppSetupStepNode" : {
            "title" : "TasBGAppSetupStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for TasBGAppSetupStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "BGAppSetup" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "BGAppSetup"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasBGAppSetupStepInfo"
                  }
                }
              }
            } ]
          },
          "ElastigroupSetupStepNode" : {
            "title" : "ElastigroupSetupStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for ElastigroupSetupStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "ElastigroupSetup" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ElastigroupSetup"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupSetupStepInfo"
                  }
                }
              }
            } ]
          },
          "EcsRollingRollbackStepNode" : {
            "title" : "EcsRollingRollbackStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for EcsRollingRollbackStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "EcsRollingRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "EcsRollingRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsRollingRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "TasCanaryAppSetupStepNode" : {
            "title" : "TasCanaryAppSetupStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for TasCanaryAppSetupStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "CanaryAppSetup" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "CanaryAppSetup"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasCanaryAppSetupStepInfo"
                  }
                }
              }
            } ]
          },
          "GoogleFunctionsRollbackStepNode" : {
            "title" : "GoogleFunctionsRollbackStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for GoogleFunctionsRollbackStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "CloudFunctionRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "CloudFunctionRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "GoogleFunctionsGenOneRollbackStepNode" : {
            "title" : "GoogleFunctionsGenOneRollbackStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for GoogleFunctionsGenOneRollbackStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "RollbackCloudFunctionGenOne" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "RollbackCloudFunctionGenOne"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsGenOneRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "CloudformationDeleteStackStepNode" : {
            "title" : "CloudformationDeleteStackStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for CloudformationDeleteStackStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "DeleteStack" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "DeleteStack"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/CloudformationDeleteStackStepInfo"
                  }
                }
              }
            } ]
          },
          "ElastigroupSwapRouteStepNode" : {
            "title" : "ElastigroupSwapRouteStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for ElastigroupSwapRouteStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "ElastigroupSwapRoute" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ElastigroupSwapRoute"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupSwapRouteStepInfo"
                  }
                }
              }
            } ]
          },
          "BambooBuildStepNode" : {
            "title" : "BambooBuildStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for BambooBuildStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "BambooBuild" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "BambooBuild"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/BambooBuildStepInfo"
                  }
                }
              }
            } ]
          },
          "EcsCanaryDeployStepNode" : {
            "title" : "EcsCanaryDeployStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for EcsCanaryDeployStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "EcsCanaryDeploy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "EcsCanaryDeploy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsCanaryDeployStepInfo"
                  }
                }
              }
            } ]
          },
          "TasSwapRollbackStepNode" : {
            "title" : "TasSwapRollbackStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for TasSwapRollbackStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "SwapRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "SwapRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasSwapRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "K8sDryRunManifestStepNode" : {
            "title" : "K8sDryRunManifestStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for K8sDryRunManifestStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "K8sDryRun" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "K8sDryRun"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sDryRunManifestStepInfo"
                  }
                }
              }
            } ]
          },
          "ElastigroupDeployStepNode" : {
            "title" : "ElastigroupDeployStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for ElastigroupDeployStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "ElastigroupDeploy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ElastigroupDeploy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupDeployStepInfo"
                  }
                }
              }
            } ]
          },
          "FetchLinkedAppsStepNode" : {
            "title" : "FetchLinkedAppsStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for FetchLinkedAppsStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "GitOpsFetchLinkedApps" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "GitOpsFetchLinkedApps"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/FetchLinkedAppsStepInfo"
                  }
                }
              }
            } ]
          },
          "TerraformDestroyStepNode" : {
            "title" : "TerraformDestroyStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for TerraformDestroyStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "TerraformDestroy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "TerraformDestroy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformDestroyStepInfo"
                  }
                }
              }
            } ]
          },
          "JenkinsBuildStepNode" : {
            "title" : "JenkinsBuildStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for JenkinsBuildStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "JenkinsBuild" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "JenkinsBuild"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/JenkinsBuildStepInfo"
                  }
                }
              }
            } ]
          },
          "TerragruntApplyStepNode" : {
            "title" : "TerragruntApplyStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for TerragruntApplyStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "TerragruntApply" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "TerragruntApply"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerragruntApplyStepInfo"
                  }
                }
              }
            } ]
          },
          "TasRollingRollbackStepNode" : {
            "title" : "TasRollingRollbackStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for TasRollingRollbackStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "TasRollingRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "TasRollingRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasRollingRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "TerraformPlanStepNode" : {
            "title" : "TerraformPlanStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for TerraformPlanStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "TerraformPlan" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "TerraformPlan"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformPlanStepInfo"
                  }
                }
              }
            } ]
          },
          "AzureWebAppRollbackStepNode" : {
            "title" : "AzureWebAppRollbackStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for AzureWebAppRollbackStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AzureWebAppRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AzureWebAppRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "GoogleFunctionsDeployStepNode" : {
            "title" : "GoogleFunctionsDeployStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for GoogleFunctionsDeployStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "DeployCloudFunction" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "DeployCloudFunction"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsDeployStepInfo"
                  }
                }
              }
            } ]
          },
          "K8sBGStageScaleDownStepNode" : {
            "title" : "K8sBGStageScaleDownStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for K8sBGStageScaleDownStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "K8sBlueGreenStageScaleDown" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "K8sBlueGreenStageScaleDown"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sBGStageScaleDownStepInfo"
                  }
                }
              }
            } ]
          },
          "AsgCanaryDeployStepNode" : {
            "title" : "AsgCanaryDeployStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for AsgCanaryDeployStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AsgCanaryDeploy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AsgCanaryDeploy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgCanaryDeployStepInfo"
                  }
                }
              }
            } ]
          },
          "SyncStepNode" : {
            "title" : "SyncStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for SyncStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "GitOpsSync" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "GitOpsSync"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/SyncStepInfo"
                  }
                }
              }
            } ]
          },
          "RevertPRStepNode" : {
            "title" : "RevertPRStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for RevertPRStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "RevertPR" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "RevertPR"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/RevertPRStepInfo"
                  }
                }
              }
            } ]
          },
          "K8sBlueGreenStepNode" : {
            "title" : "K8sBlueGreenStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for K8sBlueGreenStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "K8sBlueGreenDeploy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "K8sBlueGreenDeploy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sBlueGreenStepInfo"
                  }
                }
              }
            } ]
          },
          "TerraformRollbackStepNode" : {
            "title" : "TerraformRollbackStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for TerraformRollbackStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "TerraformRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "TerraformRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "EcsBlueGreenCreateServiceStepNode" : {
            "title" : "EcsBlueGreenCreateServiceStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for EcsBlueGreenCreateServiceStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "EcsBlueGreenCreateService" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "EcsBlueGreenCreateService"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsBlueGreenCreateServiceStepInfo"
                  }
                }
              }
            } ]
          },
          "EcsUpgradeContainerStepNode" : {
            "title" : "EcsUpgradeContainerStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for EcsUpgradeContainerStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "EcsUpgradeContainer" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "EcsUpgradeContainer"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsUpgradeContainerStepInfo"
                  }
                }
              }
            } ]
          },
          "EcsServiceSetupStepNode" : {
            "title" : "EcsServiceSetupStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for EcsServiceSetupStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "EcsServiceSetup" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "EcsServiceSetup"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsServiceSetupStepInfo"
                  }
                }
              }
            } ]
          },
          "EcsBasicRollbackStepNode" : {
            "title" : "EcsBasicRollbackStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for EcsBasicRollbackStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "EcsBasicRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "EcsBasicRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsBasicRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "AsgRollingDeployStepNode" : {
            "title" : "AsgRollingDeployStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for AsgRollingDeployStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AsgRollingDeploy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AsgRollingDeploy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgRollingDeployStepInfo"
                  }
                }
              }
            } ]
          },
          "ShellScriptProvisionStepNode" : {
            "title" : "ShellScriptProvisionStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for ShellScriptProvisionStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "ShellScriptProvision" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ShellScriptProvision"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ShellScriptProvisionStepInfo"
                  }
                }
              }
            } ]
          },
          "AzureCreateARMResourceStepNode" : {
            "title" : "AzureCreateARMResourceStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for AzureCreateARMResourceStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AzureCreateARMResource" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AzureCreateARMResource"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateARMResourceStepInfo"
                  }
                }
              }
            } ]
          },
          "EcsBlueGreenSwapTargetGroupsStepNode" : {
            "title" : "EcsBlueGreenSwapTargetGroupsStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for EcsBlueGreenSwapTargetGroupsStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "EcsBlueGreenSwapTargetGroups" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "EcsBlueGreenSwapTargetGroups"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsBlueGreenSwapTargetGroupsStepInfo"
                  }
                }
              }
            } ]
          },
          "FetchInstanceScriptStepNode" : {
            "title" : "FetchInstanceScriptStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for FetchInstanceScriptStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "FetchInstanceScript" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "FetchInstanceScript"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/FetchInstanceScriptStepInfo"
                  }
                }
              }
            } ]
          },
          "K8sScaleStepNode" : {
            "title" : "K8sScaleStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for K8sScaleStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "K8sScale" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "K8sScale"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sScaleStepInfo"
                  }
                }
              }
            } ]
          },
          "AsgCanaryDeleteStepNode" : {
            "title" : "AsgCanaryDeleteStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for AsgCanaryDeleteStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AsgCanaryDelete" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AsgCanaryDelete"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgCanaryDeleteStepInfo"
                  }
                }
              }
            } ]
          },
          "TerraformCloudRollbackStepNode" : {
            "title" : "TerraformCloudRollbackStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for TerraformCloudRollbackStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "TerraformCloudRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "TerraformCloudRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "ServerlessAwsLambdaRollbackStepNode" : {
            "title" : "ServerlessAwsLambdaRollbackStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for ServerlessAwsLambdaRollbackStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "ServerlessAwsLambdaRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ServerlessAwsLambdaRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "AzureWebAppTrafficShiftStepNode" : {
            "title" : "AzureWebAppTrafficShiftStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for AzureWebAppTrafficShiftStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AzureTrafficShift" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AzureTrafficShift"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppTrafficShiftStepInfo"
                  }
                }
              }
            } ]
          },
          "AzureWebAppSwapSlotStepNode" : {
            "title" : "AzureWebAppSwapSlotStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for AzureWebAppSwapSlotStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AzureSwapSlot" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AzureSwapSlot"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppSwapSlotStepInfo"
                  }
                }
              }
            } ]
          },
          "TasRollbackStepNode" : {
            "title" : "TasRollbackStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for TasRollbackStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AppRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AppRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "K8sCanaryDeleteStepNode" : {
            "title" : "K8sCanaryDeleteStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for K8sCanaryDeleteStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "K8sCanaryDelete" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "K8sCanaryDelete"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sCanaryDeleteStepInfo"
                  }
                }
              }
            } ]
          },
          "TasAppResizeStepNode" : {
            "title" : "TasAppResizeStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for TasAppResizeStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AppResize" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AppResize"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasAppResizeStepInfo"
                  }
                }
              }
            } ]
          },
          "TasBasicAppSetupStepNode" : {
            "title" : "TasBasicAppSetupStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for TasBasicAppSetupStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "BasicAppSetup" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "BasicAppSetup"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasBasicAppSetupStepInfo"
                  }
                }
              }
            } ]
          },
          "GoogleFunctionsTrafficShiftStepNode" : {
            "title" : "GoogleFunctionsTrafficShiftStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for GoogleFunctionsTrafficShiftStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "CloudFunctionTrafficShift" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "CloudFunctionTrafficShift"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsTrafficShiftStepInfo"
                  }
                }
              }
            } ]
          },
          "ElastigroupBGStageSetupStepNode" : {
            "title" : "ElastigroupBGStageSetupStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for ElastigroupBGStageSetupStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "ElastigroupBGStageSetup" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ElastigroupBGStageSetup"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupBGStageSetupStepInfo"
                  }
                }
              }
            } ]
          },
          "HelmRollbackStepNode" : {
            "title" : "HelmRollbackStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for HelmRollbackStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "HelmRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "HelmRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/HelmRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "K8sDeleteStepNode" : {
            "title" : "K8sDeleteStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for K8sDeleteStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "K8sDelete" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "K8sDelete"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sDeleteStepInfo"
                  }
                }
              }
            } ]
          },
          "K8sCanaryStepNode" : {
            "title" : "K8sCanaryStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for K8sCanaryStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "K8sCanaryDeploy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "K8sCanaryDeploy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sCanaryStepInfo"
                  }
                }
              }
            } ]
          },
          "EcsCanaryDeleteStepNode" : {
            "title" : "EcsCanaryDeleteStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for EcsCanaryDeleteStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "EcsCanaryDelete" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "EcsCanaryDelete"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsCanaryDeleteStepInfo"
                  }
                }
              }
            } ]
          },
          "AsgRollingRollbackStepNode" : {
            "title" : "AsgRollingRollbackStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for AsgRollingRollbackStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AsgRollingRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AsgRollingRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgRollingRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "EcsRunTaskStepNode" : {
            "title" : "EcsRunTaskStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for EcsRunTaskStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "EcsRunTask" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "EcsRunTask"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsRunTaskStepInfo"
                  }
                }
              }
            } ]
          },
          "AsgBlueGreenRollbackStepNode" : {
            "title" : "AsgBlueGreenRollbackStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for AsgBlueGreenRollbackStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AsgBlueGreenRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AsgBlueGreenRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "AwsSamRollbackStepNode" : {
            "title" : "AwsSamRollbackStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for AwsSamRollbackStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AwsSamRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AwsSamRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsSamRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "AwsSamBuildStepNode" : {
            "title" : "AwsSamBuildStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for AwsSamBuildStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AwsSamBuild" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AwsSamBuild"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsSamBuildStepInfo"
                  }
                }
              }
            } ]
          },
          "K8sBGSwapServicesStepNode" : {
            "title" : "K8sBGSwapServicesStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for K8sBGSwapServicesStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "K8sBGSwapServices" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "K8sBGSwapServices"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sBGSwapServicesStepInfo"
                  }
                }
              }
            } ]
          },
          "AzureARMRollbackStepNode" : {
            "title" : "AzureARMRollbackStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for AzureARMRollbackStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AzureARMRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AzureARMRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureARMRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "TerragruntRollbackStepNode" : {
            "title" : "TerragruntRollbackStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for TerragruntRollbackStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "TerragruntRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "TerragruntRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerragruntRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "AzureCreateBPStepNode" : {
            "title" : "AzureCreateBPStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for AzureCreateBPStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AzureCreateBPResource" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AzureCreateBPResource"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateBPStepInfo"
                  }
                }
              }
            } ]
          },
          "GoogleFunctionsDeployWithoutTrafficStepNode" : {
            "title" : "GoogleFunctionsDeployWithoutTrafficStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for GoogleFunctionsDeployWithoutTrafficStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "DeployCloudFunctionWithNoTraffic" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "DeployCloudFunctionWithNoTraffic"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsDeployWithoutTrafficStepInfo"
                  }
                }
              }
            } ]
          },
          "AwsSamDeployStepNode" : {
            "title" : "AwsSamDeployStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for AwsSamDeployStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AwsSamDeploy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AwsSamDeploy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsSamDeployStepInfo"
                  }
                }
              }
            } ]
          },
          "TasCommandStepNode" : {
            "title" : "TasCommandStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for TasCommandStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "TanzuCommand" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "TanzuCommand"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasCommandStepInfo"
                  }
                }
              }
            } ]
          },
          "K8sApplyStepNode" : {
            "title" : "K8sApplyStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for K8sApplyStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "K8sApply" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "K8sApply"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sApplyStepInfo"
                  }
                }
              }
            } ]
          },
          "TasRollingDeployStepNode" : {
            "title" : "TasRollingDeployStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for TasRollingDeployStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "TasRollingDeploy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "TasRollingDeploy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasRollingDeployStepInfo"
                  }
                }
              }
            } ]
          },
          "AwsLambdaDeployStepNode" : {
            "title" : "AwsLambdaDeployStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for AwsLambdaDeployStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AwsLambdaDeploy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AwsLambdaDeploy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaDeployStepInfo"
                  }
                }
              }
            } ]
          },
          "CloudformationRollbackStepNode" : {
            "title" : "CloudformationRollbackStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for CloudformationRollbackStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "RollbackStack" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "RollbackStack"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/CloudformationRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "ServerlessAwsLambdaDeployStepNode" : {
            "title" : "ServerlessAwsLambdaDeployStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for ServerlessAwsLambdaDeployStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "ServerlessAwsLambdaDeploy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ServerlessAwsLambdaDeploy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaDeployStepInfo"
                  }
                }
              }
            } ]
          },
          "K8sRollingRollbackStepNode" : {
            "title" : "K8sRollingRollbackStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for K8sRollingRollbackStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "K8sRollingRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "K8sRollingRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sRollingRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "K8sRollingStepNode" : {
            "title" : "K8sRollingStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for K8sRollingStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "K8sRollingDeploy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "K8sRollingDeploy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sRollingStepInfo"
                  }
                }
              }
            } ]
          },
          "AsgBlueGreenSwapServiceStepNode" : {
            "title" : "AsgBlueGreenSwapServiceStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for AsgBlueGreenSwapServiceStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AsgBlueGreenSwapService" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AsgBlueGreenSwapService"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenSwapServiceStepInfo"
                  }
                }
              }
            } ]
          },
          "GoogleFunctionsGenOneDeployStepNode" : {
            "title" : "GoogleFunctionsGenOneDeployStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for GoogleFunctionsGenOneDeployStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "DeployCloudFunctionGenOne" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "DeployCloudFunctionGenOne"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsGenOneDeployStepInfo"
                  }
                }
              }
            } ]
          },
          "CommandStepNode" : {
            "title" : "CommandStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for CommandStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Command" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Command"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/CommandStepInfo"
                  }
                }
              }
            } ]
          },
          "CloudformationCreateStackStepNode" : {
            "title" : "CloudformationCreateStackStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for CloudformationCreateStackStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "CreateStack" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "CreateStack"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/CloudformationCreateStackStepInfo"
                  }
                }
              }
            } ]
          },
          "TerragruntPlanStepNode" : {
            "title" : "TerragruntPlanStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for TerragruntPlanStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "TerragruntPlan" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "TerragruntPlan"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerragruntPlanStepInfo"
                  }
                }
              }
            } ]
          },
          "TerraformCloudRunStepNode" : {
            "title" : "TerraformCloudRunStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for TerraformCloudRunStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "TerraformCloudRun" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "TerraformCloudRun"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRunStepInfo"
                  }
                }
              }
            } ]
          },
          "AzureWebAppSlotDeploymentStepNode" : {
            "title" : "AzureWebAppSlotDeploymentStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for AzureWebAppSlotDeploymentStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AzureSlotDeployment" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AzureSlotDeployment"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppSlotDeploymentStepInfo"
                  }
                }
              }
            } ]
          },
          "EcsBlueGreenRollbackStepNode" : {
            "title" : "EcsBlueGreenRollbackStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for EcsBlueGreenRollbackStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "EcsBlueGreenRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "EcsBlueGreenRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsBlueGreenRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "ElastigroupRollbackStepNode" : {
            "title" : "ElastigroupRollbackStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for ElastigroupRollbackStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "ElastigroupRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ElastigroupRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "TerraformApplyStepNode" : {
            "title" : "TerraformApplyStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for TerraformApplyStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "TerraformApply" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "TerraformApply"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformApplyStepInfo"
                  }
                }
              }
            } ]
          },
          "TasSwapRoutesStepNode" : {
            "title" : "TasSwapRoutesStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for TasSwapRoutesStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "SwapRoutes" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "SwapRoutes"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasSwapRoutesStepInfo"
                  }
                }
              }
            } ]
          },
          "AwsLambdaRollbackStepNode" : {
            "title" : "AwsLambdaRollbackStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for AwsLambdaRollbackStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AwsLambdaRollback" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AwsLambdaRollback"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaRollbackStepInfo"
                  }
                }
              }
            } ]
          },
          "EcsRollingDeployStepNode" : {
            "title" : "EcsRollingDeployStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for EcsRollingDeployStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "EcsRollingDeploy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "EcsRollingDeploy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsRollingDeployStepInfo"
                  }
                }
              }
            } ]
          },
          "AsgBlueGreenDeployStepNode" : {
            "title" : "AsgBlueGreenDeployStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for AsgBlueGreenDeployStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AsgBlueGreenDeploy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AsgBlueGreenDeploy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenDeployStepInfo"
                  }
                }
              }
            } ]
          },
          "DownloadManifestsStepNode" : {
            "title" : "DownloadManifestsStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for DownloadManifestsStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "DownloadManifests" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "DownloadManifests"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/DownloadManifestsStepInfo"
                  }
                }
              }
            } ]
          },
          "TasRouteMappingStepNode" : {
            "title" : "TasRouteMappingStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for TasRouteMappingStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "RouteMapping" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "RouteMapping"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasRouteMappingStepInfo"
                  }
                }
              }
            } ]
          },
          "UpdateReleaseRepoStepNode" : {
            "title" : "UpdateReleaseRepoStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for UpdateReleaseRepoStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "GitOpsUpdateReleaseRepo" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "GitOpsUpdateReleaseRepo"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/UpdateReleaseRepoStepInfo"
                  }
                }
              }
            } ]
          },
          "ChaosStepNode" : {
            "title" : "ChaosStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for ChaosStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Chaos" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Chaos"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ChaosStepInfo"
                  }
                }
              }
            } ]
          },
          "TerragruntDestroyStepNode" : {
            "title" : "TerragruntDestroyStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for TerragruntDestroyStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "TerragruntDestroy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "TerragruntDestroy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerragruntDestroyStepInfo"
                  }
                }
              }
            } ]
          },
          "ServerlessAwsLambdaDeployV2StepNode" : {
            "title" : "ServerlessAwsLambdaDeployV2StepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for ServerlessAwsLambdaDeployV2StepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "ServerlessAwsLambdaDeployV2" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ServerlessAwsLambdaDeployV2"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaDeployV2StepInfo"
                  }
                }
              }
            } ]
          },
          "ServerlessAwsLambdaPackageV2StepNode" : {
            "title" : "ServerlessAwsLambdaPackageV2StepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for ServerlessAwsLambdaPackageV2StepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "ServerlessAwsLambdaPackageV2" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ServerlessAwsLambdaPackageV2"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaPackageV2StepInfo"
                  }
                }
              }
            } ]
          },
          "ServerlessAwsLambdaPrepareRollbackV2StepNode" : {
            "title" : "ServerlessAwsLambdaPrepareRollbackV2StepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for ServerlessAwsLambdaPrepareRollbackV2StepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "ServerlessAwsLambdaPrepareRollbackV2" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ServerlessAwsLambdaPrepareRollbackV2"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaPrepareRollbackV2StepInfo"
                  }
                }
              }
            } ]
          },
          "ServerlessAwsLambdaRollbackV2StepNode" : {
            "title" : "ServerlessAwsLambdaRollbackV2StepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for ServerlessAwsLambdaRollbackV2StepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "ServerlessAwsLambdaRollbackV2" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ServerlessAwsLambdaRollbackV2"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaRollbackV2StepInfo"
                  }
                }
              }
            } ]
          },
          "UpdateGitOpsAppStepNode" : {
            "title" : "UpdateGitOpsAppStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for UpdateGitOpsAppStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "UpdateGitOpsApp" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "UpdateGitOpsApp"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/UpdateGitOpsAppStepInfo"
                  }
                }
              }
            } ]
          },
          "K8sTrafficRoutingStepNode" : {
            "title" : "K8sTrafficRoutingStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for K8sTrafficRoutingStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "K8sTrafficRouting" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "K8sTrafficRouting"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sTrafficRoutingStepInfo"
                  }
                }
              }
            } ]
          },
          "StepGroupNode" : {
            "title" : "StepGroupNode",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "description" : "This is the description for step group"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "group" ]
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "group"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "type" : "object",
                    "required" : [ "steps" ],
                    "properties" : {
                      "steps" : {
                        "type" : "array",
                        "items" : {
                          "oneOf" : [ {
                            "$ref" : "#/definitions/pipeline/common/StepElementConfig"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/MergePRStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/HelmDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TasBGAppSetupStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupSetupStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/EcsRollingRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TasCanaryAppSetupStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsGenOneRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/CloudformationDeleteStackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupSwapRouteStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/BambooBuildStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/EcsCanaryDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TasSwapRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/K8sDryRunManifestStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/FetchLinkedAppsStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerraformDestroyStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/JenkinsBuildStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerragruntApplyStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TasRollingRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerraformPlanStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/K8sBGStageScaleDownStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AsgCanaryDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/SyncStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/RevertPRStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/K8sBlueGreenStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerraformRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/EcsBlueGreenCreateServiceStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/EcsUpgradeContainerStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/EcsServiceSetupStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/EcsBasicRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AsgRollingDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ShellScriptProvisionStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateARMResourceStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/EcsBlueGreenSwapTargetGroupsStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/FetchInstanceScriptStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/K8sScaleStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AsgCanaryDeleteStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppTrafficShiftStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppSwapSlotStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TasRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/K8sCanaryDeleteStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TasAppResizeStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TasBasicAppSetupStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsTrafficShiftStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupBGStageSetupStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/HelmRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/K8sDeleteStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/K8sCanaryStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/EcsCanaryDeleteStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AsgRollingRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/EcsRunTaskStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AwsSamRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AwsSamBuildStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/K8sBGSwapServicesStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AzureARMRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerragruntRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateBPStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsDeployWithoutTrafficStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AwsSamDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TasCommandStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/K8sApplyStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TasRollingDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/CloudformationRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/K8sRollingRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/K8sRollingStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenSwapServiceStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsGenOneDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/CommandStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/CloudformationCreateStackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerragruntPlanStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRunStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppSlotDeploymentStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/EcsBlueGreenRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerraformApplyStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TasSwapRoutesStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/EcsRollingDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/DownloadManifestsStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TasRouteMappingStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/UpdateReleaseRepoStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ChaosStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerragruntDestroyStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/stages/cd/CustomDeploymentConfig"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/BackgroundStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/ci/GitCloneStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cvng/CVVerifyStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cvng/CVAnalyzeDeploymentStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/CdSscaOrchestrationStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/CdSscaEnforcementStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/HttpStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/EmailStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/QueueStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/ShellScriptStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/CustomApprovalStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/JiraCreateStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/JiraUpdateStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/TemplateStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowApprovalStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/JiraApprovalStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/HarnessApprovalStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/BarrierStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowCreateStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowUpdateStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowImportSetStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/PolicyStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/WaitStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/ContainerStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/RunStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/PluginStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/ActionStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaDeployV2StepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaPackageV2StepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaPrepareRollbackV2StepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaRollbackV2StepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/AwsCdkBootstrapStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/AwsCdkSynthStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDiffStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDestroyStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/UpdateGitOpsAppStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/K8sTrafficRoutingStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/StepGroupNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ParallelNode"
                          } ]
                        },
                        "maxItems" : 256,
                        "minItems" : 1
                      }
                    }
                  }
                }
              }
            } ]
          },
          "ParallelNode" : {
            "title" : "ParallelNode",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "description" : "This is the description for parallel steps"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "parallel" ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "parallel"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "type" : "object",
                    "required" : [ "steps" ],
                    "properties" : {
                      "steps" : {
                        "type" : "array",
                        "items" : {
                          "oneOf" : [ {
                            "$ref" : "#/definitions/pipeline/common/StepElementConfig"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/MergePRStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/HelmDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TasBGAppSetupStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupSetupStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/EcsRollingRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TasCanaryAppSetupStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsGenOneRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/CloudformationDeleteStackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupSwapRouteStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/BambooBuildStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/EcsCanaryDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TasSwapRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/K8sDryRunManifestStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/FetchLinkedAppsStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerraformDestroyStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/JenkinsBuildStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerragruntApplyStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TasRollingRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerraformPlanStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/K8sBGStageScaleDownStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AsgCanaryDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/SyncStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/RevertPRStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/K8sBlueGreenStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerraformRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/EcsBlueGreenCreateServiceStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/EcsUpgradeContainerStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/EcsServiceSetupStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/EcsBasicRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AsgRollingDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ShellScriptProvisionStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateARMResourceStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/EcsBlueGreenSwapTargetGroupsStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/FetchInstanceScriptStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/K8sScaleStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AsgCanaryDeleteStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppTrafficShiftStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppSwapSlotStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TasRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/K8sCanaryDeleteStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TasAppResizeStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TasBasicAppSetupStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsTrafficShiftStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupBGStageSetupStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/HelmRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/K8sDeleteStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/K8sCanaryStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/EcsCanaryDeleteStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AsgRollingRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/EcsRunTaskStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AwsSamRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AwsSamBuildStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/K8sBGSwapServicesStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AzureARMRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerragruntRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateBPStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsDeployWithoutTrafficStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AwsSamDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TasCommandStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/K8sApplyStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TasRollingDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/CloudformationRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/K8sRollingRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/K8sRollingStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenSwapServiceStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsGenOneDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/CommandStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/CloudformationCreateStackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerragruntPlanStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRunStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppSlotDeploymentStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/EcsBlueGreenRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerraformApplyStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TasSwapRoutesStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/EcsRollingDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/DownloadManifestsStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TasRouteMappingStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/UpdateReleaseRepoStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ChaosStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerragruntDestroyStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/stages/cd/CustomDeploymentConfig"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/BackgroundStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/ci/GitCloneStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cvng/CVVerifyStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cvng/CVAnalyzeDeploymentStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/CdSscaOrchestrationStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/CdSscaEnforcementStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/HttpStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/EmailStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/QueueStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/ShellScriptStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/CustomApprovalStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/JiraCreateStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/JiraUpdateStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/TemplateStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowApprovalStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/JiraApprovalStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/HarnessApprovalStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/BarrierStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowCreateStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowUpdateStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowImportSetStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/PolicyStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/WaitStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/ContainerStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/RunStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/PluginStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/ActionStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaDeployV2StepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaPackageV2StepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaPrepareRollbackV2StepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaRollbackV2StepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/AwsCdkBootstrapStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/AwsCdkSynthStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDiffStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDestroyStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/UpdateGitOpsAppStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/K8sTrafficRoutingStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/StepGroupNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ParallelNode"
                          } ]
                        },
                        "maxItems" : 256,
                        "minItems" : 1
                      }
                    }
                  }
                }
              }
            } ]
          },
          "AsgShiftTrafficStepNode" : {
            "title" : "AsgShiftTrafficStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for AsgShiftTrafficStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AsgShiftTraffic" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AsgShiftTraffic"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgShiftTrafficStepInfo"
                  }
                }
              }
            } ]
          }
        },
        "custom" : {
          "HarnessStore" : {
            "title" : "HarnessStore",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/custom/StoreSpec"
            }, {
              "type" : "object",
              "properties" : {
                "file" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for HarnessStore"
              }
            }
          },
          "StoreSpec" : {
            "title" : "StoreSpec",
            "type" : "object",
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for StoreSpec"
              }
            }
          },
          "BarrierStepNode_template" : {
            "title" : "BarrierStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for BarrierStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+.+>.*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "barrier" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "barrier"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/BarrierStepInfo"
                  }
                }
              }
            } ]
          },
          "BarrierStepInfo" : {
            "title" : "BarrierStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "ref" ],
              "properties" : {
                "ref" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object"
          },
          "ContainerStepNode_template" : {
            "title" : "ContainerStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Container" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Container"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/ContainerStepInfo"
                  }
                }
              }
            } ]
          },
          "ContainerStepInfo" : {
            "title" : "ContainerStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "command", "infrastructure" ],
              "properties" : {
                "command" : {
                  "type" : "string"
                },
                "connectorRef" : {
                  "type" : "string"
                },
                "entrypoint" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string"
                  } ]
                },
                "envVariables" : {
                  "oneOf" : [ {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string"
                  } ]
                },
                "image" : {
                  "type" : "string"
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "infrastructure" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/steps/custom/ContainerK8sInfra"
                  } ]
                },
                "metadata" : {
                  "type" : "string"
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "shell" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Sh", "Bash", "Powershell", "Pwsh", "Python" ]
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "command", "infrastructure" ],
            "properties" : {
              "command" : {
                "type" : "string"
              },
              "connectorRef" : {
                "type" : "string"
              },
              "entrypoint" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string"
                } ]
              },
              "envVariables" : {
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string"
                } ]
              },
              "image" : {
                "type" : "string"
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "infrastructure" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/custom/ContainerK8sInfra"
                } ]
              },
              "metadata" : {
                "type" : "string"
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "shell" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Sh", "Bash", "Powershell", "Pwsh", "Python" ]
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for ContainerStepInfo"
              }
            }
          },
          "ContainerK8sInfra" : {
            "title" : "ContainerK8sInfra",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/custom/ContainerStepInfra"
            }, {
              "type" : "object",
              "required" : [ "spec", "type" ],
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/steps/custom/ContainerInfraYamlSpec"
                },
                "type" : {
                  "type" : "string",
                  "enum" : [ "KubernetesDirect" ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for ContainerK8sInfra"
              }
            }
          },
          "ContainerStepInfra" : {
            "title" : "ContainerStepInfra",
            "type" : "object",
            "discriminator" : "type",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "KubernetesDirect" ]
              },
              "description" : {
                "desc" : "This is the description for ContainerStepInfra"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ContainerInfraYamlSpec" : {
            "title" : "ContainerInfraYamlSpec",
            "type" : "object",
            "required" : [ "connectorRef", "namespace" ],
            "properties" : {
              "annotations" : {
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string"
                } ]
              },
              "automountServiceAccountToken" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "connectorRef" : {
                "type" : "string"
              },
              "containerSecurityContext" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/custom/SecurityContext"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "initTimeout" : {
                "type" : "string"
              },
              "labels" : {
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string"
                } ]
              },
              "namespace" : {
                "type" : "string",
                "minLength" : 1,
                "maxLength" : 256
              },
              "nodeSelector" : {
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "os" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Linux", "MacOS", "Windows" ]
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "priorityClassName" : {
                "type" : "string"
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "serviceAccountName" : {
                "type" : "string"
              },
              "tolerations" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/Toleration"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "volumes" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/ContainerVolume"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for ContainerInfraYamlSpec"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "SecurityContext" : {
            "title" : "SecurityContext",
            "type" : "object",
            "properties" : {
              "allowPrivilegeEscalation" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "capabilities" : {
                "$ref" : "#/definitions/pipeline/steps/custom/Capabilities"
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "procMount" : {
                "type" : "string"
              },
              "readOnlyRootFilesystem" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "runAsGroup" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "runAsNonRoot" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "description" : {
                "desc" : "This is the description for SecurityContext"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "Capabilities" : {
            "title" : "Capabilities",
            "type" : "object",
            "properties" : {
              "add" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "drop" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for Capabilities"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "Toleration" : {
            "title" : "Toleration",
            "type" : "object",
            "properties" : {
              "effect" : {
                "type" : "string"
              },
              "key" : {
                "type" : "string"
              },
              "operator" : {
                "type" : "string"
              },
              "tolerationSeconds" : {
                "type" : "integer",
                "format" : "int32"
              },
              "value" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for Toleration"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ContainerVolume" : {
            "title" : "ContainerVolume",
            "type" : "object",
            "discriminator" : "type",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "EmptyDir", "PersistentVolumeClaim", "HostPath" ]
              },
              "description" : {
                "desc" : "This is the description for ContainerVolume"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "CustomApprovalStepNode_template" : {
            "title" : "CustomApprovalStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for CustomApprovalStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+.+>.*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "custom-approval" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "custom-approval"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/CustomApprovalStepInfo"
                  }
                }
              }
            } ]
          },
          "CustomApprovalStepInfo" : {
            "title" : "CustomApprovalStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "approval_criteria", "interval", "timeout", "shell", "source" ],
              "properties" : {
                "approval_criteria" : {
                  "$ref" : "#/definitions/pipeline/steps/custom/CriteriaSpecWrapper"
                },
                "delegate" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "env_vars" : {
                  "type" : "array",
                  "items" : {
                    "oneOf" : [ {
                      "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                    } ]
                  }
                },
                "output_vars" : {
                  "type" : "array",
                  "items" : {
                    "oneOf" : [ {
                      "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                    } ]
                  }
                },
                "rejection_criteria" : {
                  "$ref" : "#/definitions/pipeline/steps/custom/CriteriaSpecWrapper"
                },
                "interval" : {
                  "type" : "string",
                  "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+input>.*)|(.*<\\+.*>.*)|(^$))$"
                },
                "timeout" : {
                  "type" : "string",
                  "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+input>.*)|(.*<\\+.*>.*)|(^$))$"
                },
                "shell" : {
                  "type" : "string",
                  "enum" : [ "Bash", "PowerShell" ]
                },
                "source" : {
                  "$ref" : "#/definitions/pipeline/common/ShellScriptSourceWrapper"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object"
          },
          "CriteriaSpecWrapper" : {
            "title" : "CriteriaSpecWrapper",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "jexl", "key-values" ]
              },
              "description" : {
                "desc" : "This is the description for CriteriaSpecWrapper"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "jexl"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/JexlCriteriaSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "key-values"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/KeyValuesCriteriaSpec"
                  }
                }
              }
            } ]
          },
          "JexlCriteriaSpec" : {
            "title" : "JexlCriteriaSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/custom/CriteriaSpec"
            }, {
              "type" : "object",
              "required" : [ "expression" ],
              "properties" : {
                "expression" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for JexlCriteriaSpec"
              }
            }
          },
          "CriteriaSpec" : {
            "title" : "CriteriaSpec",
            "type" : "object",
            "discriminator" : "type",
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for CriteriaSpec"
              }
            }
          },
          "KeyValuesCriteriaSpec" : {
            "title" : "KeyValuesCriteriaSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/custom/CriteriaSpec"
            }, {
              "type" : "object",
              "required" : [ "conditions" ],
              "properties" : {
                "conditions" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/Condition"
                  }
                },
                "matchAnyCondition" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for KeyValuesCriteriaSpec"
              }
            }
          },
          "Condition" : {
            "title" : "Condition",
            "type" : "object",
            "required" : [ "key", "operator", "value" ],
            "properties" : {
              "key" : {
                "type" : "string"
              },
              "operator" : {
                "type" : "string",
                "enum" : [ "equals", "not-equals", "in", "not-in" ]
              },
              "value" : {
                "type" : "string",
                "minLength" : 1
              },
              "description" : {
                "desc" : "This is the description for Condition"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "EmailStepNode_template" : {
            "title" : "EmailStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for EmailStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+.+>.*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "email" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "email"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/EmailStepInfo"
                  }
                }
              }
            } ]
          },
          "EmailStepInfo" : {
            "title" : "EmailStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "subject", "to" ],
              "properties" : {
                "body" : {
                  "type" : "string"
                },
                "cc" : {
                  "type" : "string"
                },
                "delegate" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "subject" : {
                  "type" : "string"
                },
                "to" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object"
          },
          "FlagConfigurationStepNode_template" : {
            "title" : "FlagConfigurationStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for FlagConfigurationStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+.+>.*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "flag-configuration" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "flag-configuration"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/FlagConfigurationStepInfo"
                  }
                }
              }
            } ]
          },
          "FlagConfigurationStepInfo" : {
            "title" : "FlagConfigurationStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "env", "feature", "instructions" ],
              "properties" : {
                "env" : {
                  "type" : "string"
                },
                "feature" : {
                  "type" : "string"
                },
                "instructions" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/steps/custom/PatchInstruction"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object"
          },
          "PatchInstruction" : {
            "title" : "PatchInstruction",
            "type" : "object",
            "discriminator" : "type",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "SetFeatureFlagState", "SetOnVariation", "SetOffVariation", "SetDefaultVariations", "AddRule", "UpdateRule", "AddTargetsToVariationTargetMap", "RemoveTargetsToVariationTargetMap", "AddSegmentToVariationTargetMap", "RemoveSegmentsToVariationTargetMap" ]
              },
              "description" : {
                "desc" : "This is the description for PatchInstruction"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "HarnessApprovalStepNode_template" : {
            "title" : "HarnessApprovalStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for HarnessApprovalStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+.+>.*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "harness-approval" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "harness-approval"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/HarnessApprovalStepInfo"
                  }
                }
              }
            } ]
          },
          "HarnessApprovalStepInfo" : {
            "title" : "HarnessApprovalStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "approvers", "include_execution_history" ],
              "properties" : {
                "message" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "inputs" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/ApproverInputInfo"
                  }
                },
                "approvers" : {
                  "$ref" : "#/definitions/pipeline/steps/custom/Approvers"
                },
                "include_execution_history" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object"
          },
          "ApproverInputInfo" : {
            "title" : "ApproverInputInfo",
            "type" : "object",
            "properties" : {
              "defaultValue" : {
                "type" : "string"
              },
              "name" : {
                "type" : "string",
                "minLength" : 1
              },
              "description" : {
                "desc" : "This is the description for ApproverInputInfo"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "Approvers" : {
            "title" : "Approvers",
            "type" : "object",
            "required" : [ "disallowPipelineExecutor", "minimumCount", "userGroups" ],
            "properties" : {
              "disallowPipelineExecutor" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "minimumCount" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "userGroups" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  },
                  "maxItems" : 256,
                  "minItems" : 1
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for Approvers"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "HttpStepNode_template" : {
            "title" : "HttpStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for HttpStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+.+>.*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "http" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "http"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/HttpStepInfo"
                  }
                }
              }
            } ]
          },
          "HttpStepInfo" : {
            "title" : "HttpStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "method", "url" ],
              "properties" : {
                "assertion" : {
                  "type" : "string"
                },
                "delegate" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "headers" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/HttpHeaderConfig"
                  }
                },
                "method" : {
                  "type" : "string"
                },
                "output_vars" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "oneOf" : [ {
                      "$ref" : "#/definitions/pipeline/common/StringVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/NumberVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/ArrayVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/BooleanVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/ObjectVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/SecretVariable"
                    } ]
                  },
                  "propertyNames" : {
                    "pattern" : "^[a-zA-Z_][0-9a-zA-Z_\\.$-]{0,127}$"
                  }
                },
                "body" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "HttpHeaderConfig" : {
            "title" : "HttpHeaderConfig",
            "type" : "object",
            "properties" : {
              "key" : {
                "type" : "string"
              },
              "value" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for HttpHeaderConfig"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "JiraApprovalStepNode_template" : {
            "title" : "JiraApprovalStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for JiraApprovalStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+.+>.*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "jira-approval" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "jira-approval"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/JiraApprovalStepInfo"
                  }
                }
              }
            } ]
          },
          "JiraApprovalStepInfo" : {
            "title" : "JiraApprovalStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "approval_criteria", "connector", "issue_key" ],
              "properties" : {
                "approval_criteria" : {
                  "$ref" : "#/definitions/pipeline/steps/custom/CriteriaSpecWrapper"
                },
                "connector" : {
                  "type" : "string"
                },
                "delegate" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "issue_key" : {
                  "type" : "string"
                },
                "issue_type" : {
                  "type" : "string"
                },
                "project" : {
                  "type" : "string"
                },
                "rejection_criteria" : {
                  "$ref" : "#/definitions/pipeline/steps/custom/CriteriaSpecWrapper"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object"
          },
          "JiraCreateStepNode_template" : {
            "title" : "JiraCreateStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for JiraCreateStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+.+>.*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "jira-create" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "jira-create"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/JiraCreateStepInfo"
                  }
                }
              }
            } ]
          },
          "JiraCreateStepInfo" : {
            "title" : "JiraCreateStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "connector", "issue", "project" ],
              "properties" : {
                "connector" : {
                  "type" : "string"
                },
                "delegate" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "fields" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/JiraField"
                  }
                },
                "issue" : {
                  "type" : "string"
                },
                "project" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object"
          },
          "JiraField" : {
            "title" : "JiraField",
            "type" : "object",
            "required" : [ "value" ],
            "properties" : {
              "name" : {
                "type" : "string",
                "minLength" : 1
              },
              "value" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for JiraField"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "JiraUpdateStepNode_template" : {
            "title" : "JiraUpdateStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for JiraUpdateStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+.+>.*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "jira-update" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "jira-update"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/JiraUpdateStepInfo"
                  }
                }
              }
            } ]
          },
          "JiraUpdateStepInfo" : {
            "title" : "JiraUpdateStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "connector", "issue" ],
              "properties" : {
                "connector" : {
                  "type" : "string"
                },
                "delegate" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "fields" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/JiraField"
                  }
                },
                "issue" : {
                  "type" : "string"
                },
                "transition" : {
                  "$ref" : "#/definitions/pipeline/steps/custom/TransitionTo"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object"
          },
          "TransitionTo" : {
            "title" : "TransitionTo",
            "type" : "object",
            "required" : [ "status" ],
            "properties" : {
              "status" : {
                "type" : "string"
              },
              "name" : {
                "type" : "string"
              },
              "desc" : {
                "description" : "This is the description for TransitionTo"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "PolicyStepNode_template" : {
            "title" : "PolicyStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for PolicyStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+.+>.*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "policy" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "policy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/PolicyStepInfo"
                  }
                }
              }
            } ]
          },
          "PolicyStepInfo" : {
            "title" : "PolicyStepInfo",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "custom"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "policySpec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/CustomPolicyStepSpec"
                  }
                }
              },
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "policy_sets" ],
              "properties" : {
                "metadata" : {
                  "type" : "string"
                },
                "policy_sets" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "type" : {
                  "type" : "string"
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "custom"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "policySpec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/CustomPolicyStepSpec"
                  }
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "CustomPolicyStepSpec" : {
            "title" : "CustomPolicyStepSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/custom/PolicySpec"
            }, {
              "type" : "object",
              "required" : [ "payload" ],
              "properties" : {
                "payload" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for CustomPolicyStepSpec"
              }
            }
          },
          "PolicySpec" : {
            "title" : "PolicySpec",
            "type" : "object",
            "discriminator" : "type",
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for PolicySpec"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "QueueStepNode_template" : {
            "title" : "QueueStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for QueueStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+.+>.*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "queue" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "queue"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/QueueStepInfo"
                  }
                }
              }
            } ]
          },
          "QueueStepInfo" : {
            "title" : "QueueStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "key", "scope" ],
              "properties" : {
                "key" : {
                  "type" : "string"
                },
                "scope" : {
                  "type" : "string",
                  "enum" : [ "pipeline", "stage" ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object"
          },
          "ServiceNowApprovalStepNode_template" : {
            "title" : "ServiceNowApprovalStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for ServiceNowApprovalStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+.+>.*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "service-now-approval" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "service-now-approval"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowApprovalStepInfo"
                  }
                }
              }
            } ]
          },
          "ServiceNowApprovalStepInfo" : {
            "title" : "ServiceNowApprovalStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "approval_criteria", "connector", "ticket_number", "ticket_type" ],
              "properties" : {
                "approval_criteria" : {
                  "$ref" : "#/definitions/pipeline/steps/custom/CriteriaSpecWrapper"
                },
                "change_window" : {
                  "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowChangeWindowSpec"
                },
                "connector" : {
                  "type" : "string"
                },
                "delegate" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "rejection_criteria" : {
                  "$ref" : "#/definitions/pipeline/steps/custom/CriteriaSpecWrapper"
                },
                "ticket_number" : {
                  "type" : "string"
                },
                "ticket_type" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ServiceNowChangeWindowSpec" : {
            "title" : "ServiceNowChangeWindowSpec",
            "type" : "object",
            "required" : [ "end_field", "start_field" ],
            "properties" : {
              "end_field" : {
                "type" : "string"
              },
              "start_field" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for ServiceNowChangeWindowSpec"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ServiceNowCreateStepNode_template" : {
            "title" : "ServiceNowCreateStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for ServiceNowCreateStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+.+>.*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "service-now-create" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "service-now-create"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowCreateStepInfo"
                  }
                }
              }
            } ]
          },
          "ServiceNowCreateStepInfo" : {
            "title" : "ServiceNowCreateStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "connector", "ticket", "use_template" ],
              "properties" : {
                "connector" : {
                  "type" : "string"
                },
                "delegate" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "fields" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowField"
                  }
                },
                "template" : {
                  "type" : "string"
                },
                "ticket" : {
                  "type" : "string"
                },
                "use_template" : {
                  "type" : "boolean"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object"
          },
          "ServiceNowField" : {
            "title" : "ServiceNowField",
            "type" : "object",
            "required" : [ "name", "value" ],
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "value" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for ServiceNowField"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ServiceNowImportSetStepNode_template" : {
            "title" : "ServiceNowImportSetStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for ServiceNowImportSetStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+.+>.*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "service-now-import-set" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "service-now-import-set"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowImportSetStepInfo"
                  }
                }
              }
            } ]
          },
          "ServiceNowImportSetStepInfo" : {
            "title" : "ServiceNowImportSetStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "connector", "data", "staging_table" ],
              "properties" : {
                "connector" : {
                  "type" : "string"
                },
                "delegate" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "data" : {
                  "$ref" : "#/definitions/pipeline/steps/custom/ImportDataSpecWrapper"
                },
                "staging_table" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object"
          },
          "ImportDataSpecWrapper" : {
            "title" : "ImportDataSpecWrapper",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "Json", "KeyValues" ]
              },
              "description" : {
                "desc" : "This is the description for ImportDataSpecWrapper"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Json"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/JsonImportDataSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "KeyValues"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/KeyValuesImportDataSpec"
                  }
                }
              }
            } ]
          },
          "JsonImportDataSpec" : {
            "title" : "JsonImportDataSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/custom/ImportDataSpec"
            }, {
              "type" : "object",
              "required" : [ "jsonBody" ],
              "properties" : {
                "jsonBody" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for JsonImportDataSpec"
              }
            }
          },
          "ImportDataSpec" : {
            "title" : "ImportDataSpec",
            "type" : "object",
            "discriminator" : "type",
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for ImportDataSpec"
              }
            }
          },
          "KeyValuesImportDataSpec" : {
            "title" : "KeyValuesImportDataSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/custom/ImportDataSpec"
            }, {
              "type" : "object",
              "required" : [ "fields" ],
              "properties" : {
                "fields" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowField"
                  }
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for KeyValuesImportDataSpec"
              }
            }
          },
          "ServiceNowUpdateStepNode_template" : {
            "title" : "ServiceNowUpdateStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for ServiceNowUpdateStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+.+>.*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "service-now-update" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "service-now-update"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowUpdateStepInfo"
                  }
                }
              }
            } ]
          },
          "ServiceNowUpdateStepInfo" : {
            "title" : "ServiceNowUpdateStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "connector", "ticket_number", "use_template" ],
              "oneOf" : [ {
                "required" : [ "update_multiple" ]
              }, {
                "required" : [ "ticket_number" ]
              } ],
              "properties" : {
                "connector" : {
                  "type" : "string"
                },
                "delegate" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "fields" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowField"
                  }
                },
                "template" : {
                  "type" : "string"
                },
                "ticket_number" : {
                  "type" : "string"
                },
                "ticket_type" : {
                  "type" : "string"
                },
                "use_template" : {
                  "type" : "boolean"
                },
                "update_multiple" : {
                  "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowUpdateMultipleNode"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object"
          },
          "ServiceNowUpdateMultipleNode" : {
            "title" : "ServiceNowUpdateMultipleNode",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for ServiceNowUpdateMultipleNode"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "CHANGE_TASK" ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "CHANGE_TASK"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowUpdateMultipleChangeTaskSpec"
                  }
                }
              }
            } ]
          },
          "ServiceNowUpdateMultipleChangeTaskSpec" : {
            "title" : "ServiceNowUpdateMultipleChangeTaskSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "changeRequestNumber" ],
              "properties" : {
                "changeRequestNumber" : {
                  "type" : "string"
                },
                "changeTaskType" : {
                  "type" : "string"
                }
              }
            } ]
          },
          "ShellScriptStepNode_template" : {
            "title" : "ShellScriptStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for ShellScriptStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+.+>.*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "shell-script" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "shell-script"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/ShellScriptStepInfo"
                  }
                }
              }
            } ]
          },
          "ShellScriptStepInfo" : {
            "title" : "ShellScriptStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "on_delegate", "shell", "source" ],
              "properties" : {
                "delegate" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "env_vars" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "oneOf" : [ {
                      "$ref" : "#/definitions/pipeline/common/StringVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/NumberVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/ArrayVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/BooleanVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/ObjectVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/SecretVariable"
                    } ]
                  },
                  "propertyNames" : {
                    "pattern" : "^[a-zA-Z_][0-9a-zA-Z_\\.$-]{0,127}$"
                  }
                },
                "execution_target" : {
                  "$ref" : "#/definitions/pipeline/steps/custom/ExecutionTarget"
                },
                "include_infra_selectors" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                },
                "metadata" : {
                  "type" : "string"
                },
                "on_delegate" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string"
                  } ]
                },
                "output_vars" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "oneOf" : [ {
                      "$ref" : "#/definitions/pipeline/common/StringVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/NumberVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/ArrayVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/BooleanVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/ObjectVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/SecretVariable"
                    } ]
                  },
                  "propertyNames" : {
                    "pattern" : "^[a-zA-Z_][0-9a-zA-Z_\\.$-]{0,127}$"
                  }
                },
                "shell" : {
                  "type" : "string",
                  "enum" : [ "bash", "power-shell" ]
                },
                "source" : {
                  "$ref" : "#/definitions/pipeline/common/ShellScriptSourceWrapper"
                },
                "output_alias" : {
                  "$ref" : "#/definitions/pipeline/steps/custom/OutputAlias"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ExecutionTarget" : {
            "title" : "ExecutionTarget",
            "type" : "object",
            "properties" : {
              "connector" : {
                "type" : "string"
              },
              "host" : {
                "type" : "string"
              },
              "dir" : {
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "OutputAlias" : {
            "title" : "OutputAlias",
            "type" : "object",
            "required" : [ "key", "scope" ],
            "properties" : {
              "key" : {
                "type" : "string",
                "minLength" : 1
              },
              "scope" : {
                "type" : "string",
                "enum" : [ "pipeline", "stage", "group" ]
              },
              "description" : {
                "desc" : "This is the description for OutputAlias used for exporting variables with alias key and scope specified."
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "TemplateStepNode_template" : {
            "title" : "TemplateStepNode_template",
            "type" : "object",
            "required" : [ "type", "spec" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for TemplateStepNode"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "template" ]
              },
              "spec" : {
                "$ref" : "#/definitions/pipeline/TemplateLinkConfigSpec"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "template"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/TemplateLinkConfigSpec"
                  }
                }
              }
            } ]
          },
          "WaitStepNode_template" : {
            "title" : "WaitStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for WaitStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "wait" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "wait"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/WaitStepInfo"
                  }
                }
              }
            } ]
          },
          "WaitStepInfo" : {
            "title" : "WaitStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "duration" ],
              "properties" : {
                "duration" : {
                  "type" : "string",
                  "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+.+>.*)|(^$))$"
                },
                "metadata" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object"
          },
          "StageWhenCondition" : {
            "title" : "StageWhenCondition",
            "type" : "object",
            "required" : [ "pipelineStatus" ],
            "properties" : {
              "condition" : {
                "type" : "string",
                "pattern" : "^(?!<\\+input>.*\\.executionInput\\(\\)(.*)$)"
              },
              "pipelineStatus" : {
                "type" : "string",
                "enum" : [ "Success", "Failure", "All" ]
              },
              "description" : {
                "desc" : "This is the description for StageWhenCondition"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "CdSscaOrchestrationStepNode" : {
            "title" : "CdSscaOrchestrationStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for CdSscaOrchestrationStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "CdSscaOrchestration" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "CdSscaOrchestration"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/CdSscaOrchestrationStepInfo"
                  }
                }
              }
            } ]
          },
          "CdSscaOrchestrationStepInfo" : {
            "title" : "CdSscaOrchestrationStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "infrastructure", "source", "tool" ],
              "properties" : {
                "attestation" : {
                  "$ref" : "#/definitions/pipeline/steps/custom/Attestation"
                },
                "infrastructure" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/steps/custom/ContainerK8sInfra"
                  } ]
                },
                "source" : {
                  "$ref" : "#/definitions/pipeline/steps/custom/SbomSource"
                },
                "tool" : {
                  "$ref" : "#/definitions/pipeline/steps/custom/SbomOrchestrationTool"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "infrastructure", "source", "tool" ],
            "properties" : {
              "attestation" : {
                "$ref" : "#/definitions/pipeline/steps/custom/Attestation"
              },
              "infrastructure" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/custom/ContainerK8sInfra"
                } ]
              },
              "source" : {
                "$ref" : "#/definitions/pipeline/steps/custom/SbomSource"
              },
              "tool" : {
                "$ref" : "#/definitions/pipeline/steps/custom/SbomOrchestrationTool"
              },
              "description" : {
                "desc" : "This is the description for CdSscaOrchestrationStepInfo"
              }
            }
          },
          "Attestation" : {
            "title" : "Attestation",
            "type" : "object",
            "properties" : {
              "privateKey" : {
                "type" : "string"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "cosign" ]
              },
              "description" : {
                "desc" : "This is the description for Attestation"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "cosign"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/CosignAttestation"
                  }
                }
              }
            } ]
          },
          "CosignAttestation" : {
            "title" : "CosignAttestation",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/custom/AttestationSpec"
            }, {
              "type" : "object",
              "properties" : {
                "password" : {
                  "type" : "string"
                },
                "privateKey" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for CosignAttestation"
              }
            }
          },
          "AttestationSpec" : {
            "title" : "AttestationSpec",
            "type" : "object",
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for AttestationSpec"
              }
            }
          },
          "SbomSource" : {
            "title" : "SbomSource",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "image" ]
              },
              "description" : {
                "desc" : "This is the description for SbomSource"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "image"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/ImageSbomSource"
                  }
                }
              }
            } ]
          },
          "ImageSbomSource" : {
            "title" : "ImageSbomSource",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/custom/SbomSourceSpec"
            }, {
              "type" : "object",
              "properties" : {
                "connector" : {
                  "type" : "string"
                },
                "image" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for ImageSbomSource"
              }
            }
          },
          "SbomSourceSpec" : {
            "title" : "SbomSourceSpec",
            "type" : "object",
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for SbomSourceSpec"
              }
            }
          },
          "SbomOrchestrationTool" : {
            "title" : "SbomOrchestrationTool",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "Syft" ]
              },
              "description" : {
                "desc" : "This is the description for SbomOrchestrationTool"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Syft"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/SyftSbomOrchestration"
                  }
                }
              }
            } ]
          },
          "SyftSbomOrchestration" : {
            "title" : "SyftSbomOrchestration",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/custom/SbomOrchestrationSpec"
            }, {
              "type" : "object",
              "properties" : {
                "format" : {
                  "type" : "string",
                  "enum" : [ "spdx-json", "cyclonedx-json" ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for SyftSbomOrchestration"
              }
            }
          },
          "SbomOrchestrationSpec" : {
            "title" : "SbomOrchestrationSpec",
            "type" : "object",
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for SbomOrchestrationSpec"
              }
            }
          },
          "CdSscaEnforcementStepNode" : {
            "title" : "CdSscaEnforcementStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for CdSscaEnforcementStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "CdSscaEnforcement" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "CdSscaEnforcement"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/CdSscaEnforcementStepInfo"
                  }
                }
              }
            } ]
          },
          "CdSscaEnforcementStepInfo" : {
            "title" : "CdSscaEnforcementStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "infrastructure", "policy", "source", "verifyAttestation" ],
              "properties" : {
                "infrastructure" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/steps/custom/ContainerK8sInfra"
                  } ]
                },
                "policy" : {
                  "$ref" : "#/definitions/pipeline/steps/custom/EnforcementPolicy"
                },
                "source" : {
                  "$ref" : "#/definitions/pipeline/steps/custom/SbomSource"
                },
                "verifyAttestation" : {
                  "$ref" : "#/definitions/pipeline/steps/custom/VerifyAttestation"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "infrastructure", "policy", "source" ],
            "properties" : {
              "infrastructure" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/custom/ContainerK8sInfra"
                } ]
              },
              "policy" : {
                "$ref" : "#/definitions/pipeline/steps/custom/EnforcementPolicy"
              },
              "source" : {
                "$ref" : "#/definitions/pipeline/steps/custom/SbomSource"
              },
              "verifyAttestation" : {
                "$ref" : "#/definitions/pipeline/steps/custom/VerifyAttestation"
              },
              "description" : {
                "desc" : "This is the description for CdSscaEnforcementStepInfo"
              }
            }
          },
          "EnforcementPolicy" : {
            "title" : "EnforcementPolicy",
            "type" : "object",
            "properties" : {
              "store" : {
                "$ref" : "#/definitions/pipeline/steps/custom/PolicyStore"
              },
              "description" : {
                "desc" : "This is the description for EnforcementPolicy"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "PolicyStore" : {
            "title" : "PolicyStore",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "Harness" ]
              },
              "description" : {
                "desc" : "This is the description for PolicyStore"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Harness"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/HarnessStore"
                  }
                }
              }
            } ]
          },
          "VerifyAttestation" : {
            "title" : "VerifyAttestation",
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "cosign" ]
              },
              "description" : {
                "desc" : "This is the description for VerifyAttestation"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "cosign"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/CosignVerifyAttestation"
                  }
                }
              }
            } ]
          },
          "CosignVerifyAttestation" : {
            "title" : "CosignVerifyAttestation",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/custom/VerifyAttestationSpec"
            }, {
              "type" : "object",
              "properties" : {
                "publicKey" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for CosignVerifyAttestation"
              }
            }
          },
          "VerifyAttestationSpec" : {
            "title" : "VerifyAttestationSpec",
            "type" : "object",
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for VerifyAttestationSpec"
              }
            }
          },
          "HttpStepNode" : {
            "title" : "HttpStepNode",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for HttpStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+.+>.*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "http" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "http"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/HttpStepInfo"
                  }
                }
              }
            } ]
          },
          "EmailStepNode" : {
            "title" : "EmailStepNode",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for EmailStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+.+>.*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "email" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "email"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/EmailStepInfo"
                  }
                }
              }
            } ]
          },
          "QueueStepNode" : {
            "title" : "QueueStepNode",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for QueueStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+.+>.*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "queue" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "queue"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/QueueStepInfo"
                  }
                }
              }
            } ]
          },
          "ShellScriptStepNode" : {
            "title" : "ShellScriptStepNode",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for ShellScriptStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+.+>.*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "shell-script" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "shell-script"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/ShellScriptStepInfo"
                  }
                }
              }
            } ]
          },
          "CustomApprovalStepNode" : {
            "title" : "CustomApprovalStepNode",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for CustomApprovalStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+.+>.*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "custom-approval" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "custom-approval"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/CustomApprovalStepInfo"
                  }
                }
              }
            } ]
          },
          "JiraCreateStepNode" : {
            "title" : "JiraCreateStepNode",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for JiraCreateStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+.+>.*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "jira-create" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "jira-create"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/JiraCreateStepInfo"
                  }
                }
              }
            } ]
          },
          "JiraUpdateStepNode" : {
            "title" : "JiraUpdateStepNode",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for JiraUpdateStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+.+>.*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "jira-update" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "jira-update"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/JiraUpdateStepInfo"
                  }
                }
              }
            } ]
          },
          "TemplateStepNode" : {
            "title" : "TemplateStepNode",
            "type" : "object",
            "required" : [ "type", "spec" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for TemplateStepNode"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "template" ]
              },
              "spec" : {
                "$ref" : "#/definitions/pipeline/TemplateLinkConfigSpec"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "template"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/TemplateLinkConfigSpec"
                  }
                }
              }
            } ]
          },
          "ServiceNowApprovalStepNode" : {
            "title" : "ServiceNowApprovalStepNode",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for ServiceNowApprovalStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+.+>.*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "service-now-approval" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "service-now-approval"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowApprovalStepInfo"
                  }
                }
              }
            } ]
          },
          "JiraApprovalStepNode" : {
            "title" : "JiraApprovalStepNode",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for JiraApprovalStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+.+>.*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "jira-approval" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "jira-approval"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/JiraApprovalStepInfo"
                  }
                }
              }
            } ]
          },
          "HarnessApprovalStepNode" : {
            "title" : "HarnessApprovalStepNode",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for HarnessApprovalStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+.+>.*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "harness-approval" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "harness-approval"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/HarnessApprovalStepInfo"
                  }
                }
              }
            } ]
          },
          "BarrierStepNode" : {
            "title" : "BarrierStepNode",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for BarrierStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+.+>.*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "barrier" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "barrier"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/BarrierStepInfo"
                  }
                }
              }
            } ]
          },
          "ServiceNowCreateStepNode" : {
            "title" : "ServiceNowCreateStepNode",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for ServiceNowCreateStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+.+>.*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "service-now-create" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "service-now-create"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowCreateStepInfo"
                  }
                }
              }
            } ]
          },
          "ServiceNowUpdateStepNode" : {
            "title" : "ServiceNowUpdateStepNode",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for ServiceNowUpdateStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+.+>.*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "service-now-update" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "service-now-update"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowUpdateStepInfo"
                  }
                }
              }
            } ]
          },
          "ServiceNowImportSetStepNode" : {
            "title" : "ServiceNowImportSetStepNode",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for ServiceNowImportSetStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+.+>.*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "service-now-import-set" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "service-now-import-set"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowImportSetStepInfo"
                  }
                }
              }
            } ]
          },
          "PolicyStepNode" : {
            "title" : "PolicyStepNode",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for PolicyStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+.+>.*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "policy" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "policy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/PolicyStepInfo"
                  }
                }
              }
            } ]
          },
          "WaitStepNode" : {
            "title" : "WaitStepNode",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for WaitStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "wait" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "wait"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/WaitStepInfo"
                  }
                }
              }
            } ]
          },
          "ContainerStepNode" : {
            "title" : "ContainerStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for ContainerStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Container" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Container"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/ContainerStepInfo"
                  }
                }
              }
            } ]
          },
          "TemplateLinkConfig" : {
            "title" : "TemplateLinkConfig",
            "type" : "object",
            "required" : [ "ref" ],
            "properties" : {
              "inputs" : {
                "type" : "object",
                "description" : "inputs to be used in the linked template",
                "additionalProperties" : {
                  "anyOf" : [ "string", "array", "list", "object", "boolean" ]
                },
                "propertyNames" : {
                  "pattern" : "^[a-zA-Z_][0-9a-zA-Z_\\.$-]{0,127}$"
                }
              },
              "ref" : {
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "FlagConfigurationStepNode" : {
            "title" : "FlagConfigurationStepNode",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for FlagConfigurationStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+.+>.*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "flag-configuration" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "flag-configuration"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/FlagConfigurationStepInfo"
                  }
                }
              }
            } ]
          },
          "StepGroupNode" : {
            "title" : "StepGroupNode",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "description" : "This is the description for step group"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "group" ]
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "group"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "type" : "object",
                    "required" : [ "steps" ],
                    "properties" : {
                      "steps" : {
                        "type" : "array",
                        "items" : {
                          "oneOf" : [ {
                            "$ref" : "#/definitions/pipeline/common/StepElementConfig"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/BackgroundStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerraformApplyStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerraformPlanStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerraformDestroyStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerraformRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/CloudformationCreateStackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/CloudformationDeleteStackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/CloudformationRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateARMResourceStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateBPStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AzureARMRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/JenkinsBuildStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ShellScriptProvisionStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ChaosStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerragruntPlanStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerragruntApplyStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerragruntDestroyStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerragruntRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AsgCanaryDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AsgCanaryDeleteStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AsgRollingDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AsgRollingRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenSwapServiceStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRunStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AwsSamDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/DownloadManifestsStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AwsSamBuildStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AwsSamRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/BambooBuildStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/HttpStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/EmailStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/QueueStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/ShellScriptStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/CustomApprovalStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/JiraCreateStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/JiraUpdateStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/TemplateStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowApprovalStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/JiraApprovalStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/HarnessApprovalStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/BarrierStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowCreateStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowUpdateStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowImportSetStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/FlagConfigurationStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/PolicyStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/WaitStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/ContainerStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/RunStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/PluginStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/ActionStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaDeployV2StepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaPackageV2StepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaPrepareRollbackV2StepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaRollbackV2StepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/AwsCdkBootstrapStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/AwsCdkSynthStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDiffStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDestroyStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/StepGroupNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/ParallelNode"
                          } ]
                        },
                        "maxItems" : 256,
                        "minItems" : 1
                      }
                    }
                  }
                }
              }
            } ]
          },
          "ParallelNode" : {
            "title" : "ParallelNode",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "description" : "This is the description for parallel steps"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "parallel" ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "parallel"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "type" : "object",
                    "required" : [ "steps" ],
                    "properties" : {
                      "steps" : {
                        "type" : "array",
                        "items" : {
                          "oneOf" : [ {
                            "$ref" : "#/definitions/pipeline/common/StepElementConfig"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/BackgroundStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerraformApplyStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerraformPlanStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerraformDestroyStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerraformRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/CloudformationCreateStackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/CloudformationDeleteStackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/CloudformationRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateARMResourceStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateBPStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AzureARMRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/JenkinsBuildStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ShellScriptProvisionStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ChaosStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerragruntPlanStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerragruntApplyStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerragruntDestroyStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerragruntRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AsgCanaryDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AsgCanaryDeleteStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AsgRollingDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AsgRollingRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenSwapServiceStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRunStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AwsSamDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/DownloadManifestsStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AwsSamBuildStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AwsSamRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaRollbackStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/BambooBuildStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/HttpStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/EmailStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/QueueStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/ShellScriptStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/CustomApprovalStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/JiraCreateStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/JiraUpdateStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/TemplateStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowApprovalStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/JiraApprovalStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/HarnessApprovalStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/BarrierStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowCreateStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowUpdateStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowImportSetStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/FlagConfigurationStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/PolicyStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/WaitStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/ContainerStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/RunStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/PluginStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/ActionStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaDeployV2StepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaPackageV2StepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaPrepareRollbackV2StepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaRollbackV2StepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/AwsCdkBootstrapStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/AwsCdkSynthStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDiffStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDeployStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDestroyStepNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/StepGroupNode"
                          }, {
                            "$ref" : "#/definitions/pipeline/steps/custom/ParallelNode"
                          } ]
                        },
                        "maxItems" : 256,
                        "minItems" : 1
                      }
                    }
                  }
                }
              }
            } ]
          }
        },
        "common" : {
          "ParameterFieldMapStringString" : {
            "title" : "ParameterFieldMapStringString",
            "type" : "object",
            "properties" : {
              "defaultValue" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              },
              "executionInput" : {
                "type" : "boolean"
              },
              "expression" : {
                "type" : "boolean"
              },
              "expressionValue" : {
                "type" : "string"
              },
              "inputSetValidator" : {
                "$ref" : "#/definitions/pipeline/common/InputSetValidator"
              },
              "jsonResponseField" : {
                "type" : "boolean"
              },
              "responseField" : {
                "type" : "string"
              },
              "typeString" : {
                "type" : "boolean"
              },
              "value" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              },
              "description" : {
                "desc" : "This is the description for ParameterFieldMapStringString"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ActionStepNode_template" : {
            "title" : "ActionStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Action" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Action"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/ActionStepInfo"
                  }
                }
              }
            } ]
          },
          "ActionStepInfo" : {
            "title" : "ActionStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/ci/CIStepInfo"
            }, {
              "type" : "object",
              "required" : [ "uses" ],
              "properties" : {
                "env" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/steps/common/ParameterFieldMapStringString"
                  }, {
                    "type" : "string"
                  } ]
                },
                "uses" : {
                  "type" : "string"
                },
                "with" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/steps/common/ParameterFieldMapStringString"
                  }, {
                    "type" : "string"
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "uses" ],
            "properties" : {
              "env" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/common/ParameterFieldMapStringString"
                }, {
                  "type" : "string"
                } ]
              },
              "uses" : {
                "type" : "string"
              },
              "with" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/common/ParameterFieldMapStringString"
                }, {
                  "type" : "string"
                } ]
              },
              "description" : {
                "desc" : "This is the description for ActionStepInfo"
              }
            }
          },
          "AquaTrivyScanNode_template" : {
            "title" : "AquaTrivyScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AquaTrivy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AquaTrivy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/AquaTrivyStepInfo"
                  }
                }
              }
            } ]
          },
          "AquaTrivyStepInfo" : {
            "title" : "AquaTrivyStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/common/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default" ]
                },
                "image" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlImage"
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/common/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default" ]
              },
              "image" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlImage"
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "description" : {
                "desc" : "This is the description for AquaTrivyStepInfo"
              }
            }
          },
          "STOYamlAdvancedSettings" : {
            "title" : "STOYamlAdvancedSettings",
            "type" : "object",
            "properties" : {
              "args" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlArgs"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "fail_on_severity" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "critical", "high", "medium", "low", "none" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "include_raw" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "log" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlLog"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for STOYamlAdvancedSettings"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "STOYamlArgs" : {
            "title" : "STOYamlArgs",
            "type" : "object",
            "properties" : {
              "cli" : {
                "type" : "string"
              },
              "passthrough" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for STOYamlArgs"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "STOYamlLog" : {
            "title" : "STOYamlLog",
            "type" : "object",
            "properties" : {
              "level" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "info", "debug", "warning", "error" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "serializer" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "simple", "basic", "bunyan", "simple_onprem", "onprem" ]
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for STOYamlLog"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ParameterFieldListString" : {
            "title" : "ParameterFieldListString",
            "type" : "object",
            "properties" : {
              "defaultValue" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "executionInput" : {
                "type" : "boolean"
              },
              "expression" : {
                "type" : "boolean"
              },
              "expressionValue" : {
                "type" : "string"
              },
              "inputSetValidator" : {
                "$ref" : "#/definitions/pipeline/common/InputSetValidator"
              },
              "jsonResponseField" : {
                "type" : "boolean"
              },
              "responseField" : {
                "type" : "string"
              },
              "typeString" : {
                "type" : "boolean"
              },
              "value" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "description" : {
                "desc" : "This is the description for ParameterFieldListString"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "STOYamlImage" : {
            "title" : "STOYamlImage",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "access_id" : {
                "type" : "string"
              },
              "access_token" : {
                "type" : "string"
              },
              "domain" : {
                "type" : "string"
              },
              "name" : {
                "type" : "string"
              },
              "region" : {
                "type" : "string"
              },
              "tag" : {
                "type" : "string"
              },
              "type" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "aws_ecr", "docker_v2", "jfrog_artifactory", "local_image" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for STOYamlImage"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "STOYamlIngestion" : {
            "title" : "STOYamlIngestion",
            "type" : "object",
            "properties" : {
              "file" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for STOYamlIngestion"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "STOYamlTarget" : {
            "title" : "STOYamlTarget",
            "type" : "object",
            "required" : [ "name", "type", "variant" ],
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "type" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "repository", "container", "instance", "configuration" ]
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "variant" : {
                "type" : "string"
              },
              "workspace" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for STOYamlTarget"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "AwsEcrScanNode_template" : {
            "title" : "AwsEcrScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AWSECR" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AWSECR"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsEcrStepInfo"
                  }
                }
              }
            } ]
          },
          "AwsEcrStepInfo" : {
            "title" : "AwsEcrStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "auth" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAuth"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default" ]
                },
                "image" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlImage"
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "auth" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAuth"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default" ]
              },
              "image" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlImage"
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "description" : {
                "desc" : "This is the description for AwsEcrStepInfo"
              }
            }
          },
          "STOYamlAuth" : {
            "title" : "STOYamlAuth",
            "type" : "object",
            "required" : [ "access_token" ],
            "properties" : {
              "access_id" : {
                "type" : "string"
              },
              "access_token" : {
                "type" : "string"
              },
              "domain" : {
                "type" : "string"
              },
              "region" : {
                "type" : "string"
              },
              "ssl" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "type" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "apiKey", "usernamePassword", "aws", "azure", "gcp" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "version" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for STOYamlAuth"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "AwsSecurityHubScanNode_template" : {
            "title" : "AwsSecurityHubScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AWSSecurityHub" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AWSSecurityHub"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsSecurityHubStepInfo"
                  }
                }
              }
            } ]
          },
          "AwsSecurityHubStepInfo" : {
            "title" : "AwsSecurityHubStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "auth" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAuth"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default" ]
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "auth" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAuth"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default" ]
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "description" : {
                "desc" : "This is the description for AwsSecurityHubStepInfo"
              }
            }
          },
          "BackgroundStepNode_template" : {
            "title" : "BackgroundStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Background" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Background"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/BackgroundStepInfo"
                  }
                }
              }
            } ]
          },
          "BackgroundStepInfo" : {
            "title" : "BackgroundStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "command" : {
                  "type" : "string"
                },
                "connectorRef" : {
                  "type" : "string"
                },
                "entrypoint" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string"
                  } ]
                },
                "envVariables" : {
                  "oneOf" : [ {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string"
                  } ]
                },
                "image" : {
                  "type" : "string"
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "portBindings" : {
                  "oneOf" : [ {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string"
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "reports" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/steps/common/UnitTestReport"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "shell" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Sh", "Bash", "Powershell", "Pwsh", "Python" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "command" : {
                "type" : "string"
              },
              "connectorRef" : {
                "type" : "string"
              },
              "entrypoint" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string"
                } ]
              },
              "envVariables" : {
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string"
                } ]
              },
              "image" : {
                "type" : "string"
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "portBindings" : {
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string"
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "reports" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/common/UnitTestReport"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "shell" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Sh", "Bash", "Powershell", "Pwsh", "Python" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for BackgroundStepInfo"
              }
            }
          },
          "UnitTestReport" : {
            "title" : "UnitTestReport",
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "JUnit" ]
              },
              "description" : {
                "desc" : "This is the description for UnitTestReport"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "JUnit"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/JUnitTestReport"
                  }
                }
              }
            } ]
          },
          "JUnitTestReport" : {
            "title" : "JUnitTestReport",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/common/UnitTestReportSpec"
            }, {
              "type" : "object",
              "properties" : {
                "paths" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string"
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for JUnitTestReport"
              }
            }
          },
          "UnitTestReportSpec" : {
            "title" : "UnitTestReportSpec",
            "type" : "object",
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for UnitTestReportSpec"
              }
            }
          },
          "BanditScanNode_template" : {
            "title" : "BanditScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Bandit" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Bandit"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/BanditStepInfo"
                  }
                }
              }
            } ]
          },
          "BanditStepInfo" : {
            "title" : "BanditStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default" ]
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default" ]
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "description" : {
                "desc" : "This is the description for BanditStepInfo"
              }
            }
          },
          "BlackDuckScanNode_template" : {
            "title" : "BlackDuckScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "BlackDuck" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "BlackDuck"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/BlackDuckStepInfo"
                  }
                }
              }
            } ]
          },
          "BlackDuckStepInfo" : {
            "title" : "BlackDuckStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "auth" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAuth"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default" ]
                },
                "image" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlImage"
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                },
                "tool" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlBlackduckToolData"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "auth" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAuth"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default" ]
              },
              "image" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlImage"
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "tool" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlBlackduckToolData"
              },
              "description" : {
                "desc" : "This is the description for BlackDuckStepInfo"
              }
            }
          },
          "STOYamlBlackduckToolData" : {
            "title" : "STOYamlBlackduckToolData",
            "type" : "object",
            "properties" : {
              "project_name" : {
                "type" : "string"
              },
              "project_version" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for STOYamlBlackduckToolData"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "BrakemanScanNode_template" : {
            "title" : "BrakemanScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Brakeman" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Brakeman"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/BrakemanStepInfo"
                  }
                }
              }
            } ]
          },
          "BrakemanStepInfo" : {
            "title" : "BrakemanStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default" ]
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default" ]
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "description" : {
                "desc" : "This is the description for BrakemanStepInfo"
              }
            }
          },
          "BurpScanNode_template" : {
            "title" : "BurpScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Burp" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Burp"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/BurpStepInfo"
                  }
                }
              }
            } ]
          },
          "BurpStepInfo" : {
            "title" : "BurpStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "auth" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAuth"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default", "never-stop-crawl-due-to-application-errors", "never-stop-audit-due-to-application-errors", "minimize-false-positives", "minimize-false-negatives", "crawl-strategy-most-complete", "crawl-strategy-more-complete", "crawl-strategy-fastest", "crawl-strategy-faster", "crawl-limit-60-minutes", "crawl-limit-30-minutes", "crawl-limit-10-minutes", "crawl-and-audit-lightweight", "crawl-and-audit-fast", "crawl-and-audit-deep", "crawl-and-audit-balanced", "audit-coverage-thorough", "audit-coverage-maximum", "audit-checks-passive", "audit-checks-medium-active", "audit-checks-light-active", "audit-checks-critical-issues-only", "audit-checks-all-except-time-based-detection-methods", "audit-checks-all-except-java-script-analysis" ]
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "instance" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlInstance"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                },
                "tool" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlBurpToolData"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "auth" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAuth"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default", "never-stop-crawl-due-to-application-errors", "never-stop-audit-due-to-application-errors", "minimize-false-positives", "minimize-false-negatives", "crawl-strategy-most-complete", "crawl-strategy-more-complete", "crawl-strategy-fastest", "crawl-strategy-faster", "crawl-limit-60-minutes", "crawl-limit-30-minutes", "crawl-limit-10-minutes", "crawl-and-audit-lightweight", "crawl-and-audit-fast", "crawl-and-audit-deep", "crawl-and-audit-balanced", "audit-coverage-thorough", "audit-coverage-maximum", "audit-checks-passive", "audit-checks-medium-active", "audit-checks-light-active", "audit-checks-critical-issues-only", "audit-checks-all-except-time-based-detection-methods", "audit-checks-all-except-java-script-analysis" ]
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "instance" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlInstance"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "tool" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlBurpToolData"
              },
              "description" : {
                "desc" : "This is the description for BurpStepInfo"
              }
            }
          },
          "STOYamlInstance" : {
            "title" : "STOYamlInstance",
            "type" : "object",
            "properties" : {
              "domain" : {
                "type" : "string"
              },
              "password" : {
                "type" : "string"
              },
              "path" : {
                "type" : "string"
              },
              "port" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "protocol" : {
                "type" : "string"
              },
              "username" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for STOYamlInstance"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "STOYamlBurpToolData" : {
            "title" : "STOYamlBurpToolData",
            "type" : "object",
            "properties" : {
              "scan_id" : {
                "type" : "string"
              },
              "site_id" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for STOYamlBurpToolData"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "CheckmarxScanNode_template" : {
            "title" : "CheckmarxScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Checkmarx" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Checkmarx"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/CheckmarxStepInfo"
                  }
                }
              }
            } ]
          },
          "CheckmarxStepInfo" : {
            "title" : "CheckmarxStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "auth" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAuth"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default" ]
                },
                "image" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlImage"
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                },
                "tool" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlCheckmarxToolData"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "auth" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAuth"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default" ]
              },
              "image" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlImage"
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "tool" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlCheckmarxToolData"
              },
              "description" : {
                "desc" : "This is the description for CheckmarxStepInfo"
              }
            }
          },
          "STOYamlCheckmarxToolData" : {
            "title" : "STOYamlCheckmarxToolData",
            "type" : "object",
            "properties" : {
              "project_name" : {
                "type" : "string"
              },
              "team_name" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for STOYamlCheckmarxToolData"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ClairScanNode_template" : {
            "title" : "ClairScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Clair" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Clair"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/ClairStepInfo"
                  }
                }
              }
            } ]
          },
          "ClairStepInfo" : {
            "title" : "ClairStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default" ]
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default" ]
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "description" : {
                "desc" : "This is the description for ClairStepInfo"
              }
            }
          },
          "CodeqlScanNode_template" : {
            "title" : "CodeqlScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "CodeQL" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "CodeQL"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/CodeqlStepInfo"
                  }
                }
              }
            } ]
          },
          "CodeqlStepInfo" : {
            "title" : "CodeqlStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default" ]
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default" ]
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "description" : {
                "desc" : "This is the description for CodeqlStepInfo"
              }
            }
          },
          "CoverityScanNode_template" : {
            "title" : "CoverityScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Coverity" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Coverity"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/CoverityStepInfo"
                  }
                }
              }
            } ]
          },
          "CoverityStepInfo" : {
            "title" : "CoverityStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/common/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default" ]
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/common/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default" ]
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "description" : {
                "desc" : "This is the description for CoverityStepInfo"
              }
            }
          },
          "CustomIngestScanNode_template" : {
            "title" : "CustomIngestScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "CustomIngest" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "CustomIngest"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/CustomIngestStepInfo"
                  }
                }
              }
            } ]
          },
          "CustomIngestStepInfo" : {
            "title" : "CustomIngestStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default", "sarif" ]
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default", "sarif" ]
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "description" : {
                "desc" : "This is the description for CustomIngestStepInfo"
              }
            }
          },
          "DataTheoremScanNode_template" : {
            "title" : "DataTheoremScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "DataTheorem" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "DataTheorem"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/DataTheoremStepInfo"
                  }
                }
              }
            } ]
          },
          "DataTheoremStepInfo" : {
            "title" : "DataTheoremStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default" ]
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default" ]
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "description" : {
                "desc" : "This is the description for DataTheoremStepInfo"
              }
            }
          },
          "DockerContentTrustScanNode_template" : {
            "title" : "DockerContentTrustScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "DockerContentTrust" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "DockerContentTrust"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/DockerContentTrustStepInfo"
                  }
                }
              }
            } ]
          },
          "DockerContentTrustStepInfo" : {
            "title" : "DockerContentTrustStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default" ]
                },
                "image" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlImage"
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default" ]
              },
              "image" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlImage"
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "description" : {
                "desc" : "This is the description for DockerContentTrustStepInfo"
              }
            }
          },
          "FortifyOnDemandScanNode_template" : {
            "title" : "FortifyOnDemandScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "FortifyOnDemand" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "FortifyOnDemand"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/FortifyOnDemandStepInfo"
                  }
                }
              }
            } ]
          },
          "FortifyOnDemandStepInfo" : {
            "title" : "FortifyOnDemandStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "auth" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAuth"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default" ]
                },
                "image" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlImage"
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                },
                "tool" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlFODToolData"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "auth" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAuth"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default" ]
              },
              "image" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlImage"
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "tool" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlFODToolData"
              },
              "description" : {
                "desc" : "This is the description for FortifyOnDemandStepInfo"
              }
            }
          },
          "STOYamlFODToolData" : {
            "title" : "STOYamlFODToolData",
            "type" : "object",
            "properties" : {
              "app_name" : {
                "type" : "string"
              },
              "audit_type" : {
                "type" : "string"
              },
              "data_center" : {
                "type" : "string"
              },
              "entitlement" : {
                "type" : "string"
              },
              "lookup_type" : {
                "type" : "string"
              },
              "owner_id" : {
                "type" : "string"
              },
              "release_name" : {
                "type" : "string"
              },
              "scan_settings" : {
                "type" : "string"
              },
              "scan_type" : {
                "type" : "string"
              },
              "target_language" : {
                "type" : "string"
              },
              "target_language_version" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for STOYamlFODToolData"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "FossaScanNode_template" : {
            "title" : "FossaScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Fossa" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Fossa"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/FossaStepInfo"
                  }
                }
              }
            } ]
          },
          "FossaStepInfo" : {
            "title" : "FossaStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "auth" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAuth"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default" ]
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                },
                "tool" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlFossaToolData"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "auth" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAuth"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default" ]
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "tool" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlFossaToolData"
              },
              "description" : {
                "desc" : "This is the description for FossaStepInfo"
              }
            }
          },
          "STOYamlFossaToolData" : {
            "title" : "STOYamlFossaToolData",
            "type" : "object",
            "properties" : {
              "policy_name" : {
                "type" : "string"
              },
              "project_name" : {
                "type" : "string"
              },
              "team_name" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for STOYamlFossaToolData"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "GitleaksScanNode_template" : {
            "title" : "GitleaksScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Gitleaks" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Gitleaks"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/GitleaksStepInfo"
                  }
                }
              }
            } ]
          },
          "GitleaksStepInfo" : {
            "title" : "GitleaksStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default" ]
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default" ]
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "description" : {
                "desc" : "This is the description for GitleaksStepInfo"
              }
            }
          },
          "GrypeScanNode_template" : {
            "title" : "GrypeScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Grype" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Grype"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/GrypeStepInfo"
                  }
                }
              }
            } ]
          },
          "GrypeStepInfo" : {
            "title" : "GrypeStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default" ]
                },
                "image" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlImage"
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default" ]
              },
              "image" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlImage"
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "description" : {
                "desc" : "This is the description for GrypeStepInfo"
              }
            }
          },
          "JfrogXrayScanNode_template" : {
            "title" : "JfrogXrayScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "JfrogXray" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "JfrogXray"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/JfrogXrayStepInfo"
                  }
                }
              }
            } ]
          },
          "JfrogXrayStepInfo" : {
            "title" : "JfrogXrayStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default" ]
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default" ]
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "description" : {
                "desc" : "This is the description for JfrogXrayStepInfo"
              }
            }
          },
          "MendScanNode_template" : {
            "title" : "MendScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Mend" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Mend"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/MendStepInfo"
                  }
                }
              }
            } ]
          },
          "MendStepInfo" : {
            "title" : "MendStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "auth" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAuth"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default" ]
                },
                "image" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlImage"
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                },
                "tool" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlMendToolData"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "auth" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAuth"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default" ]
              },
              "image" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlImage"
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "tool" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlMendToolData"
              },
              "description" : {
                "desc" : "This is the description for MendStepInfo"
              }
            }
          },
          "STOYamlMendToolData" : {
            "title" : "STOYamlMendToolData",
            "type" : "object",
            "properties" : {
              "exclude" : {
                "type" : "string"
              },
              "include" : {
                "type" : "string"
              },
              "product_name" : {
                "type" : "string"
              },
              "product_token" : {
                "type" : "string"
              },
              "project_name" : {
                "type" : "string"
              },
              "project_token" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for STOYamlMendToolData"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "MetasploitScanNode_template" : {
            "title" : "MetasploitScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Metasploit" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Metasploit"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/MetasploitStepInfo"
                  }
                }
              }
            } ]
          },
          "MetasploitStepInfo" : {
            "title" : "MetasploitStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default", "metasploit-weak-ssh", "metasploit-openssl-heartbleed" ]
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "instance" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlInstance"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default", "metasploit-weak-ssh", "metasploit-openssl-heartbleed" ]
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "instance" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlInstance"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "description" : {
                "desc" : "This is the description for MetasploitStepInfo"
              }
            }
          },
          "NessusScanNode_template" : {
            "title" : "NessusScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Nessus" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Nessus"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/NessusStepInfo"
                  }
                }
              }
            } ]
          },
          "NessusStepInfo" : {
            "title" : "NessusStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default" ]
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "instance" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlInstance"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default" ]
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "instance" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlInstance"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "description" : {
                "desc" : "This is the description for NessusStepInfo"
              }
            }
          },
          "NexusIQScanNode_template" : {
            "title" : "NexusIQScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "NexusIQ" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "NexusIQ"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/NexusIQStepInfo"
                  }
                }
              }
            } ]
          },
          "NexusIQStepInfo" : {
            "title" : "NexusIQStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default" ]
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default" ]
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "description" : {
                "desc" : "This is the description for NexusIQStepInfo"
              }
            }
          },
          "NiktoScanNode_template" : {
            "title" : "NiktoScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Nikto" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Nikto"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/NiktoStepInfo"
                  }
                }
              }
            } ]
          },
          "NiktoStepInfo" : {
            "title" : "NiktoStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default" ]
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "instance" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlInstance"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default" ]
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "instance" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlInstance"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "description" : {
                "desc" : "This is the description for NiktoStepInfo"
              }
            }
          },
          "NmapScanNode_template" : {
            "title" : "NmapScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Nmap" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Nmap"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/NmapStepInfo"
                  }
                }
              }
            } ]
          },
          "NmapStepInfo" : {
            "title" : "NmapStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default", "firewall-bypass", "unusual-port", "smb-security-mode", "exploit", "no-default-cli-flags" ]
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "instance" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlInstance"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default", "firewall-bypass", "unusual-port", "smb-security-mode", "exploit", "no-default-cli-flags" ]
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "instance" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlInstance"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "description" : {
                "desc" : "This is the description for NmapStepInfo"
              }
            }
          },
          "OpenvasScanNode_template" : {
            "title" : "OpenvasScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Openvas" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Openvas"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/OpenvasStepInfo"
                  }
                }
              }
            } ]
          },
          "OpenvasStepInfo" : {
            "title" : "OpenvasStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "auth" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAuth"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default" ]
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "instance" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlInstance"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "auth" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAuth"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default" ]
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "instance" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlInstance"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "description" : {
                "desc" : "This is the description for OpenvasStepInfo"
              }
            }
          },
          "OwaspScanNode_template" : {
            "title" : "OwaspScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Owasp" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Owasp"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/OwaspStepInfo"
                  }
                }
              }
            } ]
          },
          "OwaspStepInfo" : {
            "title" : "OwaspStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default" ]
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default" ]
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "description" : {
                "desc" : "This is the description for OwaspStepInfo"
              }
            }
          },
          "PluginStepNode_template" : {
            "title" : "PluginStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Plugin" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Plugin"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/PluginStepInfo"
                  }
                }
              }
            } ]
          },
          "PluginStepInfo" : {
            "title" : "PluginStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/ci/CIStepInfo"
            }, {
              "type" : "object",
              "properties" : {
                "connectorRef" : {
                  "type" : "string"
                },
                "entrypoint" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string"
                  } ]
                },
                "image" : {
                  "type" : "string"
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "reports" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/steps/common/UnitTestReport"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "uses" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "connectorRef" : {
                "type" : "string"
              },
              "entrypoint" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string"
                } ]
              },
              "image" : {
                "type" : "string"
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "reports" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/common/UnitTestReport"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "uses" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for PluginStepInfo"
              }
            }
          },
          "PrismaCloudScanNode_template" : {
            "title" : "PrismaCloudScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "PrismaCloud" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "PrismaCloud"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/PrismaCloudStepInfo"
                  }
                }
              }
            } ]
          },
          "PrismaCloudStepInfo" : {
            "title" : "PrismaCloudStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "auth" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAuth"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default" ]
                },
                "image" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlImage"
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "auth" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAuth"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default" ]
              },
              "image" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlImage"
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "description" : {
                "desc" : "This is the description for PrismaCloudStepInfo"
              }
            }
          },
          "ProwlerScanNode_template" : {
            "title" : "ProwlerScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Prowler" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Prowler"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/ProwlerStepInfo"
                  }
                }
              }
            } ]
          },
          "ProwlerStepInfo" : {
            "title" : "ProwlerStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "auth" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAuth"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default", "hipaa", "gdpr", "exclude_extras" ]
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "auth" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAuth"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default", "hipaa", "gdpr", "exclude_extras" ]
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "description" : {
                "desc" : "This is the description for ProwlerStepInfo"
              }
            }
          },
          "QualysScanNode_template" : {
            "title" : "QualysScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Qualys" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Qualys"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/QualysStepInfo"
                  }
                }
              }
            } ]
          },
          "QualysStepInfo" : {
            "title" : "QualysStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default" ]
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default" ]
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "description" : {
                "desc" : "This is the description for QualysStepInfo"
              }
            }
          },
          "ReapsawScanNode_template" : {
            "title" : "ReapsawScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Reapsaw" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Reapsaw"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/ReapsawStepInfo"
                  }
                }
              }
            } ]
          },
          "ReapsawStepInfo" : {
            "title" : "ReapsawStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default" ]
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default" ]
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "description" : {
                "desc" : "This is the description for ReapsawStepInfo"
              }
            }
          },
          "RunStepNode_template" : {
            "title" : "RunStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Run" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Run"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/RunStepInfo"
                  }
                }
              }
            } ]
          },
          "RunStepInfo" : {
            "title" : "RunStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "command" ],
              "properties" : {
                "command" : {
                  "type" : "string"
                },
                "connectorRef" : {
                  "type" : "string"
                },
                "envVariables" : {
                  "oneOf" : [ {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string"
                  } ]
                },
                "image" : {
                  "type" : "string"
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "reports" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/steps/common/UnitTestReport"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "shell" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Sh", "Bash", "Powershell", "Pwsh", "Python" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "command" ],
            "properties" : {
              "command" : {
                "type" : "string"
              },
              "connectorRef" : {
                "type" : "string"
              },
              "envVariables" : {
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string"
                } ]
              },
              "image" : {
                "type" : "string"
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "reports" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/common/UnitTestReport"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "shell" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Sh", "Bash", "Powershell", "Pwsh", "Python" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for RunStepInfo"
              }
            }
          },
          "SecurityNode_template" : {
            "title" : "SecurityNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Security" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AWSECR"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsEcrStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AWSSecurityHub"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsSecurityHubStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AquaTrivy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/AquaTrivyStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Bandit"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/BanditStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "BlackDuck"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/BlackDuckStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Brakeman"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/BrakemanStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Burp"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/BurpStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Checkmarx"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/CheckmarxStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Clair"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/ClairStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "CodeQL"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/CodeqlStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "CustomIngest"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/CustomIngestStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "DataTheorem"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/DataTheoremStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "DockerContentTrust"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/DockerContentTrustStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "FortifyOnDemand"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/FortifyOnDemandStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Fossa"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/FossaStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Gitleaks"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/GitleaksStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Grype"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/GrypeStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "JfrogXray"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/JfrogXrayStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Mend"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/MendStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Metasploit"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/MetasploitStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Nessus"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/NessusStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "NexusIQ"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/NexusIQStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Nikto"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/NiktoStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Nmap"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/NmapStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Openvas"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/OpenvasStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Owasp"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/OwaspStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "PrismaCloud"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/PrismaCloudStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Prowler"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/ProwlerStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Qualys"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/QualysStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Reapsaw"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/ReapsawStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Security"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/SecurityStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Semgrep"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/SemgrepStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ShiftLeft"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/ShiftLeftStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Sniper"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/SniperStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Snyk"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/SnykStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Sonarqube"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/SonarqubeStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Sysdig"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/SysdigStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Tenable"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/TenableStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Veracode"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/VeracodeStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Zap"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/ZapStepInfo"
                  }
                }
              }
            } ]
          },
          "SecurityStepInfo" : {
            "title" : "SecurityStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "description" : {
                "desc" : "This is the description for SecurityStepInfo"
              }
            }
          },
          "SemgrepStepInfo" : {
            "title" : "SemgrepStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "auth" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAuth"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default" ]
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "auth" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAuth"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default" ]
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "description" : {
                "desc" : "This is the description for SemgrepStepInfo"
              }
            }
          },
          "ShiftLeftStepInfo" : {
            "title" : "ShiftLeftStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default" ]
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default" ]
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "description" : {
                "desc" : "This is the description for ShiftLeftStepInfo"
              }
            }
          },
          "SniperStepInfo" : {
            "title" : "SniperStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default" ]
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default" ]
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "description" : {
                "desc" : "This is the description for SniperStepInfo"
              }
            }
          },
          "SnykStepInfo" : {
            "title" : "SnykStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "auth" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAuth"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default" ]
                },
                "image" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlImage"
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "auth" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAuth"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default" ]
              },
              "image" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlImage"
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "description" : {
                "desc" : "This is the description for SnykStepInfo"
              }
            }
          },
          "SonarqubeStepInfo" : {
            "title" : "SonarqubeStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "auth" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAuth"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default" ]
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                },
                "tool" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlSonarqubeToolData"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "auth" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAuth"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default" ]
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "tool" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlSonarqubeToolData"
              },
              "description" : {
                "desc" : "This is the description for SonarqubeStepInfo"
              }
            }
          },
          "STOYamlSonarqubeToolData" : {
            "title" : "STOYamlSonarqubeToolData",
            "type" : "object",
            "properties" : {
              "exclude" : {
                "type" : "string"
              },
              "include" : {
                "type" : "string"
              },
              "java" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlJavaParameters"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "project_key" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for STOYamlSonarqubeToolData"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "STOYamlJavaParameters" : {
            "title" : "STOYamlJavaParameters",
            "type" : "object",
            "properties" : {
              "binaries" : {
                "type" : "string"
              },
              "libraries" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for STOYamlJavaParameters"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "SysdigStepInfo" : {
            "title" : "SysdigStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "auth" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAuth"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default" ]
                },
                "image" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlImage"
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "auth" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAuth"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default" ]
              },
              "image" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlImage"
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "description" : {
                "desc" : "This is the description for SysdigStepInfo"
              }
            }
          },
          "TenableStepInfo" : {
            "title" : "TenableStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default" ]
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "instance" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlInstance"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default" ]
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "instance" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlInstance"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "description" : {
                "desc" : "This is the description for TenableStepInfo"
              }
            }
          },
          "VeracodeStepInfo" : {
            "title" : "VeracodeStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "auth" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAuth"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default" ]
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                },
                "tool" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlVeracodeToolData"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "auth" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAuth"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default" ]
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "tool" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlVeracodeToolData"
              },
              "description" : {
                "desc" : "This is the description for VeracodeStepInfo"
              }
            }
          },
          "STOYamlVeracodeToolData" : {
            "title" : "STOYamlVeracodeToolData",
            "type" : "object",
            "properties" : {
              "app_id" : {
                "type" : "string"
              },
              "project_name" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for STOYamlVeracodeToolData"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ZapStepInfo" : {
            "title" : "ZapStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "config", "mode", "target" ],
              "properties" : {
                "advanced" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
                },
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "config" : {
                  "type" : "string",
                  "enum" : [ "default", "quick", "attack", "standard" ]
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "ingestion" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
                },
                "instance" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlInstance"
                },
                "mode" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "ingestion", "orchestration", "extraction" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "outputVariables" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "settings" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                  }, {
                    "type" : "string"
                  } ]
                },
                "target" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
                },
                "tool" : {
                  "$ref" : "#/definitions/pipeline/steps/common/STOYamlZapToolData"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "config", "mode", "target" ],
            "properties" : {
              "advanced" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlAdvancedSettings"
              },
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "config" : {
                "type" : "string",
                "enum" : [ "default", "quick", "attack", "standard" ]
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "ingestion" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlIngestion"
              },
              "instance" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlInstance"
              },
              "mode" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "ingestion", "orchestration", "extraction" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "outputVariables" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/OutputNGVariable"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "settings" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/ParameterFieldMapStringJsonNode"
                }, {
                  "type" : "string"
                } ]
              },
              "target" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlTarget"
              },
              "tool" : {
                "$ref" : "#/definitions/pipeline/steps/common/STOYamlZapToolData"
              },
              "description" : {
                "desc" : "This is the description for ZapStepInfo"
              }
            }
          },
          "STOYamlZapToolData" : {
            "title" : "STOYamlZapToolData",
            "type" : "object",
            "properties" : {
              "context" : {
                "type" : "string"
              },
              "port" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for STOYamlZapToolData"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "SemgrepScanNode_template" : {
            "title" : "SemgrepScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Semgrep" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Semgrep"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/SemgrepStepInfo"
                  }
                }
              }
            } ]
          },
          "ShiftLeftScanNode_template" : {
            "title" : "ShiftLeftScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "ShiftLeft" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ShiftLeft"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/ShiftLeftStepInfo"
                  }
                }
              }
            } ]
          },
          "SniperScanNode_template" : {
            "title" : "SniperScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Sniper" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Sniper"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/SniperStepInfo"
                  }
                }
              }
            } ]
          },
          "SnykScanNode_template" : {
            "title" : "SnykScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Snyk" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Snyk"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/SnykStepInfo"
                  }
                }
              }
            } ]
          },
          "SonarqubeScanNode_template" : {
            "title" : "SonarqubeScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Sonarqube" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Sonarqube"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/SonarqubeStepInfo"
                  }
                }
              }
            } ]
          },
          "SysdigScanNode_template" : {
            "title" : "SysdigScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Sysdig" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Sysdig"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/SysdigStepInfo"
                  }
                }
              }
            } ]
          },
          "TenableScanNode_template" : {
            "title" : "TenableScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Tenable" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Tenable"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/TenableStepInfo"
                  }
                }
              }
            } ]
          },
          "VeracodeScanNode_template" : {
            "title" : "VeracodeScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Veracode" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Veracode"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/VeracodeStepInfo"
                  }
                }
              }
            } ]
          },
          "ZapScanNode_template" : {
            "title" : "ZapScanNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Zap" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Zap"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/ZapStepInfo"
                  }
                }
              }
            } ]
          },
          "AwsCdkBootstrapStepNode_template" : {
            "title" : "AwsCdkBootstrapStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AwsCdkBootstrap" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AwsCdkBootstrap"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkBootstrapStepInfo"
                  }
                }
              }
            } ]
          },
          "AwsCdkBootstrapStepInfo" : {
            "title" : "AwsCdkBootstrapStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "image" ],
              "properties" : {
                "appPath" : {
                  "type" : "string"
                },
                "commandOptions" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "connectorRef" : {
                  "type" : "string"
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "envVariables" : {
                  "oneOf" : [ {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string"
                  } ]
                },
                "image" : {
                  "type" : "string"
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "connectorRef", "image" ],
            "properties" : {
              "appPath" : {
                "type" : "string"
              },
              "commandOptions" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "connectorRef" : {
                "type" : "string"
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "envVariables" : {
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string"
                } ]
              },
              "image" : {
                "type" : "string"
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "description" : {
                "desc" : "This is the description for AwsCdkBootstrapStepInfo"
              }
            }
          },
          "AwsCdkSynthStepNode_template" : {
            "title" : "AwsCdkSynthStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AwsCdkSynth" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AwsCdkSynth"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkSynthStepInfo"
                  }
                }
              }
            } ]
          },
          "AwsCdkSynthStepInfo" : {
            "title" : "AwsCdkSynthStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "image" ],
              "properties" : {
                "appPath" : {
                  "type" : "string"
                },
                "commandOptions" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "connectorRef" : {
                  "type" : "string"
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "envVariables" : {
                  "oneOf" : [ {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string"
                  } ]
                },
                "exportTemplate" : {
                  "type" : "boolean"
                },
                "image" : {
                  "type" : "string"
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "stackNames" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "connectorRef", "image" ],
            "properties" : {
              "appPath" : {
                "type" : "string"
              },
              "commandOptions" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "connectorRef" : {
                "type" : "string"
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "envVariables" : {
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string"
                } ]
              },
              "exportTemplate" : {
                "type" : "boolean"
              },
              "image" : {
                "type" : "string"
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "stackNames" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for AwsCdkSynthStepInfo"
              }
            }
          },
          "AwsCdkDiffStepNode_template" : {
            "title" : "AwsCdkDiffStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AwsCdkDiff" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AwsCdkDiff"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDiffStepInfo"
                  }
                }
              }
            } ]
          },
          "AwsCdkDiffStepInfo" : {
            "title" : "AwsCdkDiffStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "image" ],
              "properties" : {
                "appPath" : {
                  "type" : "string"
                },
                "commandOptions" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "connectorRef" : {
                  "type" : "string"
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "envVariables" : {
                  "oneOf" : [ {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string"
                  } ]
                },
                "image" : {
                  "type" : "string"
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "stackNames" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "connectorRef", "image" ],
            "properties" : {
              "appPath" : {
                "type" : "string"
              },
              "commandOptions" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "connectorRef" : {
                "type" : "string"
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "envVariables" : {
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string"
                } ]
              },
              "image" : {
                "type" : "string"
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "stackNames" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for AwsCdkDiffStepInfo"
              }
            }
          },
          "AwsCdkDeployStepNode_template" : {
            "title" : "AwsCdkDeployStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AwsCdkDeploy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AwsCdkDeploy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDeployStepInfo"
                  }
                }
              }
            } ]
          },
          "AwsCdkDeployStepInfo" : {
            "title" : "AwsCdkDeployStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "image", "provisionerIdentifier" ],
              "properties" : {
                "appPath" : {
                  "type" : "string"
                },
                "commandOptions" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "connectorRef" : {
                  "type" : "string"
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "envVariables" : {
                  "oneOf" : [ {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string"
                  } ]
                },
                "image" : {
                  "type" : "string"
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "parameters" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "provisionerIdentifier" : {
                  "type" : "string"
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "stackNames" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "connectorRef", "image", "provisionerIdentifier" ],
            "properties" : {
              "appPath" : {
                "type" : "string"
              },
              "commandOptions" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "connectorRef" : {
                "type" : "string"
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "envVariables" : {
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string"
                } ]
              },
              "image" : {
                "type" : "string"
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "parameters" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "provisionerIdentifier" : {
                "type" : "string"
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "stackNames" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for AwsCdkDeployStepInfo"
              }
            }
          },
          "AwsCdkDestroyStepNode_template" : {
            "title" : "AwsCdkDestroyStepNode_template",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AwsCdkDestroy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AwsCdkDestroy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDestroyStepInfo"
                  }
                }
              }
            } ]
          },
          "AwsCdkDestroyStepInfo" : {
            "title" : "AwsCdkDestroyStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "image" ],
              "properties" : {
                "appPath" : {
                  "type" : "string"
                },
                "commandOptions" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "connectorRef" : {
                  "type" : "string"
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "envVariables" : {
                  "oneOf" : [ {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string"
                  } ]
                },
                "image" : {
                  "type" : "string"
                },
                "imagePullPolicy" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "enum" : [ "Always", "Never", "IfNotPresent" ]
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                },
                "privileged" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "stackNames" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "connectorRef", "image" ],
            "properties" : {
              "appPath" : {
                "type" : "string"
              },
              "commandOptions" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "connectorRef" : {
                "type" : "string"
              },
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "envVariables" : {
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string"
                } ]
              },
              "image" : {
                "type" : "string"
              },
              "imagePullPolicy" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Always", "Never", "IfNotPresent" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "privileged" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "stackNames" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for AwsCdkDestroyStepInfo"
              }
            }
          },
          "RunStepNode" : {
            "title" : "RunStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for RunStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Run" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Run"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/RunStepInfo"
                  }
                }
              }
            } ]
          },
          "PluginStepNode" : {
            "title" : "PluginStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for PluginStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Plugin" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Plugin"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/PluginStepInfo"
                  }
                }
              }
            } ]
          },
          "ActionStepNode" : {
            "title" : "ActionStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for ActionStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Action" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Action"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/ActionStepInfo"
                  }
                }
              }
            } ]
          },
          "DockerInfraYaml" : {
            "title" : "DockerInfraYaml",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/common/Infrastructure"
            }, {
              "type" : "object",
              "required" : [ "spec", "type" ],
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/steps/common/DockerInfraSpec"
                },
                "type" : {
                  "type" : "string",
                  "enum" : [ "KubernetesDirect", "UseFromStage", "VM" ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for DockerInfraYaml"
              }
            }
          },
          "Infrastructure" : {
            "title" : "Infrastructure",
            "type" : "object",
            "discriminator" : "type",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "KubernetesDirect", "UseFromStage", "VM" ]
              },
              "description" : {
                "desc" : "This is the description for Infrastructure"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "DockerInfraSpec" : {
            "title" : "DockerInfraSpec",
            "type" : "object",
            "required" : [ "platform" ],
            "properties" : {
              "platform" : {
                "$ref" : "#/definitions/pipeline/steps/common/ParameterFieldPlatform"
              },
              "description" : {
                "desc" : "This is the description for DockerInfraSpec"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ParameterFieldPlatform" : {
            "title" : "ParameterFieldPlatform",
            "type" : "object",
            "properties" : {
              "defaultValue" : {
                "$ref" : "#/definitions/pipeline/steps/common/Platform"
              },
              "executionInput" : {
                "type" : "boolean"
              },
              "expression" : {
                "type" : "boolean"
              },
              "expressionValue" : {
                "type" : "string"
              },
              "inputSetValidator" : {
                "$ref" : "#/definitions/pipeline/common/InputSetValidator"
              },
              "jsonResponseField" : {
                "type" : "boolean"
              },
              "responseField" : {
                "type" : "string"
              },
              "typeString" : {
                "type" : "boolean"
              },
              "value" : {
                "$ref" : "#/definitions/pipeline/steps/common/Platform"
              },
              "description" : {
                "desc" : "This is the description for ParameterFieldPlatform"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "Platform" : {
            "title" : "Platform",
            "type" : "object",
            "properties" : {
              "arch" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Amd64", "Arm64" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "os" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Linux", "MacOS", "Windows" ]
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for Platform"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "HostedVmInfraYaml" : {
            "title" : "HostedVmInfraYaml",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/common/Infrastructure"
            }, {
              "type" : "object",
              "required" : [ "spec", "type" ],
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/steps/common/HostedVmInfraSpec"
                },
                "type" : {
                  "type" : "string",
                  "enum" : [ "KubernetesDirect", "UseFromStage", "VM" ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for HostedVmInfraYaml"
              }
            }
          },
          "HostedVmInfraSpec" : {
            "title" : "HostedVmInfraSpec",
            "type" : "object",
            "required" : [ "platform" ],
            "properties" : {
              "platform" : {
                "$ref" : "#/definitions/pipeline/steps/common/ParameterFieldPlatform"
              },
              "description" : {
                "desc" : "This is the description for HostedVmInfraSpec"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "K8sDirectInfraYaml" : {
            "title" : "K8sDirectInfraYaml",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/common/Infrastructure"
            }, {
              "type" : "object",
              "required" : [ "spec", "type" ],
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/steps/common/K8sDirectInfraYamlSpec"
                },
                "type" : {
                  "type" : "string",
                  "enum" : [ "KubernetesDirect", "UseFromStage", "VM" ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for K8sDirectInfraYaml"
              }
            }
          },
          "K8sDirectInfraYamlSpec" : {
            "title" : "K8sDirectInfraYamlSpec",
            "type" : "object",
            "required" : [ "connectorRef", "namespace" ],
            "properties" : {
              "annotations" : {
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string"
                } ]
              },
              "automountServiceAccountToken" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "connectorRef" : {
                "type" : "string"
              },
              "containerSecurityContext" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/custom/SecurityContext"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "harnessImageConnectorRef" : {
                "type" : "string"
              },
              "hostNames" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "initTimeout" : {
                "type" : "string"
              },
              "labels" : {
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string"
                } ]
              },
              "namespace" : {
                "type" : "string",
                "minLength" : 1,
                "maxLength" : 256
              },
              "nodeSelector" : {
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "os" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Linux", "MacOS", "Windows" ]
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "priorityClassName" : {
                "type" : "string"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "serviceAccountName" : {
                "type" : "string"
              },
              "tolerations" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/Toleration"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "volumes" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/common/CIVolume"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for K8sDirectInfraYamlSpec"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "CIVolume" : {
            "title" : "CIVolume",
            "type" : "object",
            "discriminator" : "type",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "EmptyDir", "PersistentVolumeClaim", "HostPath" ]
              },
              "description" : {
                "desc" : "This is the description for CIVolume"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "UseFromStageInfraYaml" : {
            "title" : "UseFromStageInfraYaml",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/common/Infrastructure"
            }, {
              "type" : "object",
              "required" : [ "useFromStage" ],
              "properties" : {
                "useFromStage" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for UseFromStageInfraYaml"
              }
            }
          },
          "VmInfraYaml" : {
            "title" : "VmInfraYaml",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/common/Infrastructure"
            }, {
              "type" : "object",
              "required" : [ "spec", "type" ],
              "properties" : {
                "spec" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/steps/common/VmPoolYaml"
                  } ]
                },
                "type" : {
                  "type" : "string",
                  "enum" : [ "KubernetesDirect", "UseFromStage", "VM" ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for VmInfraYaml"
              }
            }
          },
          "VmPoolYaml" : {
            "title" : "VmPoolYaml",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/common/VmInfraSpec"
            }, {
              "type" : "object",
              "required" : [ "spec", "type" ],
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/steps/common/VmPoolYamlSpec"
                },
                "type" : {
                  "type" : "string",
                  "enum" : [ "Pool" ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for VmPoolYaml"
              }
            }
          },
          "VmInfraSpec" : {
            "title" : "VmInfraSpec",
            "type" : "object",
            "discriminator" : "type",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "Pool" ]
              },
              "description" : {
                "desc" : "This is the description for VmInfraSpec"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "VmPoolYamlSpec" : {
            "title" : "VmPoolYamlSpec",
            "type" : "object",
            "properties" : {
              "harnessImageConnectorRef" : {
                "type" : "string"
              },
              "identifier" : {
                "type" : "string"
              },
              "initTimeout" : {
                "type" : "string"
              },
              "os" : {
                "oneOf" : [ {
                  "type" : "string",
                  "enum" : [ "Linux", "MacOS", "Windows" ]
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "poolName" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for VmPoolYamlSpec"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "CloudRuntime" : {
            "title" : "CloudRuntime",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/common/Runtime"
            }, {
              "type" : "object",
              "required" : [ "spec", "type" ],
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/steps/common/CloudRuntimeSpec"
                },
                "type" : {
                  "type" : "string",
                  "enum" : [ "Cloud" ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for CloudRuntime"
              }
            }
          },
          "Runtime" : {
            "title" : "Runtime",
            "type" : "object",
            "discriminator" : "type",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "Docker", "Cloud" ]
              },
              "description" : {
                "desc" : "This is the description for Runtime"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "CloudRuntimeSpec" : {
            "title" : "CloudRuntimeSpec",
            "type" : "object",
            "properties" : {
              "size" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for CloudRuntimeSpec"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "DockerRuntime" : {
            "title" : "DockerRuntime",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/common/Runtime"
            }, {
              "type" : "object",
              "required" : [ "spec", "type" ],
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/steps/common/DockerRuntimeSpec"
                },
                "type" : {
                  "type" : "string",
                  "enum" : [ "Docker" ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for DockerRuntime"
              }
            }
          },
          "DockerRuntimeSpec" : {
            "title" : "DockerRuntimeSpec",
            "type" : "object",
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for DockerRuntimeSpec"
              }
            }
          },
          "DependencyElement" : {
            "title" : "DependencyElement",
            "type" : "object",
            "required" : [ "identifier", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for DependencyElement"
              },
              "identifier" : {
                "type" : "string"
              },
              "name" : {
                "type" : "string"
              },
              "spec" : {
                "$ref" : "#/definitions/pipeline/steps/common/DependencySpecType"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Service" ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "DependencySpecType" : {
            "title" : "DependencySpecType",
            "type" : "object",
            "discriminator" : "type",
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for DependencySpecType"
              }
            }
          },
          "BackgroundStepNode" : {
            "title" : "BackgroundStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for BackgroundStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Background" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Background"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/BackgroundStepInfo"
                  }
                }
              }
            } ]
          },
          "AwsCdkBootstrapStepNode" : {
            "title" : "AwsCdkBootstrapStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for AwsCdkBootstrapStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AwsCdkBootstrap" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AwsCdkBootstrap"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkBootstrapStepInfo"
                  }
                }
              }
            } ]
          },
          "AwsCdkSynthStepNode" : {
            "title" : "AwsCdkSynthStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for AwsCdkSynthStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AwsCdkSynth" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AwsCdkSynth"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkSynthStepInfo"
                  }
                }
              }
            } ]
          },
          "AwsCdkDiffStepNode" : {
            "title" : "AwsCdkDiffStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for AwsCdkDiffStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AwsCdkDiff" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AwsCdkDiff"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDiffStepInfo"
                  }
                }
              }
            } ]
          },
          "AwsCdkDeployStepNode" : {
            "title" : "AwsCdkDeployStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for AwsCdkDeployStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AwsCdkDeploy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AwsCdkDeploy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDeployStepInfo"
                  }
                }
              }
            } ]
          },
          "AwsCdkDestroyStepNode" : {
            "title" : "AwsCdkDestroyStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for AwsCdkDestroyStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AwsCdkDestroy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AwsCdkDestroy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDestroyStepInfo"
                  }
                }
              }
            } ]
          },
          "AquaTrivyScanNode" : {
            "title" : "AquaTrivyScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for AquaTrivyScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AquaTrivy" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AquaTrivy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/AquaTrivyStepInfo"
                  }
                }
              }
            } ]
          },
          "AwsEcrScanNode" : {
            "title" : "AwsEcrScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for AwsEcrScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AWSECR" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AWSECR"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsEcrStepInfo"
                  }
                }
              }
            } ]
          },
          "AwsSecurityHubScanNode" : {
            "title" : "AwsSecurityHubScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for AwsSecurityHubScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AWSSecurityHub" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AWSSecurityHub"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsSecurityHubStepInfo"
                  }
                }
              }
            } ]
          },
          "BanditScanNode" : {
            "title" : "BanditScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for BanditScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Bandit" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Bandit"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/BanditStepInfo"
                  }
                }
              }
            } ]
          },
          "BlackDuckScanNode" : {
            "title" : "BlackDuckScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for BlackDuckScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "BlackDuck" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "BlackDuck"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/BlackDuckStepInfo"
                  }
                }
              }
            } ]
          },
          "BrakemanScanNode" : {
            "title" : "BrakemanScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for BrakemanScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Brakeman" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Brakeman"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/BrakemanStepInfo"
                  }
                }
              }
            } ]
          },
          "BurpScanNode" : {
            "title" : "BurpScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for BurpScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Burp" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Burp"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/BurpStepInfo"
                  }
                }
              }
            } ]
          },
          "CheckmarxScanNode" : {
            "title" : "CheckmarxScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for CheckmarxScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Checkmarx" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Checkmarx"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/CheckmarxStepInfo"
                  }
                }
              }
            } ]
          },
          "ClairScanNode" : {
            "title" : "ClairScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for ClairScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Clair" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Clair"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/ClairStepInfo"
                  }
                }
              }
            } ]
          },
          "CodeqlScanNode" : {
            "title" : "CodeqlScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for CodeqlScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "CodeQL" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "CodeQL"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/CodeqlStepInfo"
                  }
                }
              }
            } ]
          },
          "CoverityScanNode" : {
            "title" : "CoverityScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for CoverityScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][-0-9a-zA-Z_\\s]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Coverity" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Coverity"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/CoverityStepInfo"
                  }
                }
              }
            } ]
          },
          "CustomIngestScanNode" : {
            "title" : "CustomIngestScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for CustomIngestScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "CustomIngest" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "CustomIngest"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/CustomIngestStepInfo"
                  }
                }
              }
            } ]
          },
          "DataTheoremScanNode" : {
            "title" : "DataTheoremScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for DataTheoremScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "DataTheorem" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "DataTheorem"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/DataTheoremStepInfo"
                  }
                }
              }
            } ]
          },
          "DockerContentTrustScanNode" : {
            "title" : "DockerContentTrustScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for DockerContentTrustScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "DockerContentTrust" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "DockerContentTrust"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/DockerContentTrustStepInfo"
                  }
                }
              }
            } ]
          },
          "FortifyOnDemandScanNode" : {
            "title" : "FortifyOnDemandScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for FortifyOnDemandScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "FortifyOnDemand" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "FortifyOnDemand"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/FortifyOnDemandStepInfo"
                  }
                }
              }
            } ]
          },
          "FossaScanNode" : {
            "title" : "FossaScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for FossaScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Fossa" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Fossa"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/FossaStepInfo"
                  }
                }
              }
            } ]
          },
          "GitleaksScanNode" : {
            "title" : "GitleaksScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for GitleaksScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Gitleaks" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Gitleaks"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/GitleaksStepInfo"
                  }
                }
              }
            } ]
          },
          "GrypeScanNode" : {
            "title" : "GrypeScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for GrypeScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Grype" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Grype"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/GrypeStepInfo"
                  }
                }
              }
            } ]
          },
          "JfrogXrayScanNode" : {
            "title" : "JfrogXrayScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for JfrogXrayScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "JfrogXray" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "JfrogXray"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/JfrogXrayStepInfo"
                  }
                }
              }
            } ]
          },
          "MendScanNode" : {
            "title" : "MendScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for MendScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Mend" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Mend"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/MendStepInfo"
                  }
                }
              }
            } ]
          },
          "MetasploitScanNode" : {
            "title" : "MetasploitScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for MetasploitScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Metasploit" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Metasploit"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/MetasploitStepInfo"
                  }
                }
              }
            } ]
          },
          "NessusScanNode" : {
            "title" : "NessusScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for NessusScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Nessus" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Nessus"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/NessusStepInfo"
                  }
                }
              }
            } ]
          },
          "NexusIQScanNode" : {
            "title" : "NexusIQScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for NexusIQScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "NexusIQ" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "NexusIQ"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/NexusIQStepInfo"
                  }
                }
              }
            } ]
          },
          "NiktoScanNode" : {
            "title" : "NiktoScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for NiktoScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Nikto" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Nikto"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/NiktoStepInfo"
                  }
                }
              }
            } ]
          },
          "NmapScanNode" : {
            "title" : "NmapScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for NmapScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Nmap" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Nmap"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/NmapStepInfo"
                  }
                }
              }
            } ]
          },
          "OpenvasScanNode" : {
            "title" : "OpenvasScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for OpenvasScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Openvas" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Openvas"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/OpenvasStepInfo"
                  }
                }
              }
            } ]
          },
          "OwaspScanNode" : {
            "title" : "OwaspScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for OwaspScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Owasp" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Owasp"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/OwaspStepInfo"
                  }
                }
              }
            } ]
          },
          "PrismaCloudScanNode" : {
            "title" : "PrismaCloudScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for PrismaCloudScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "PrismaCloud" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "PrismaCloud"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/PrismaCloudStepInfo"
                  }
                }
              }
            } ]
          },
          "ProwlerScanNode" : {
            "title" : "ProwlerScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for ProwlerScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Prowler" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Prowler"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/ProwlerStepInfo"
                  }
                }
              }
            } ]
          },
          "QualysScanNode" : {
            "title" : "QualysScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for QualysScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Qualys" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Qualys"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/QualysStepInfo"
                  }
                }
              }
            } ]
          },
          "ReapsawScanNode" : {
            "title" : "ReapsawScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for ReapsawScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Reapsaw" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Reapsaw"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/ReapsawStepInfo"
                  }
                }
              }
            } ]
          },
          "SecurityNode" : {
            "title" : "SecurityNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for SecurityNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Security" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AWSECR"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsEcrStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AWSSecurityHub"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsSecurityHubStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AquaTrivy"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/AquaTrivyStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Bandit"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/BanditStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "BlackDuck"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/BlackDuckStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Brakeman"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/BrakemanStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Burp"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/BurpStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Checkmarx"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/CheckmarxStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Clair"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/ClairStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "CodeQL"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/CodeqlStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "CustomIngest"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/CustomIngestStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "DataTheorem"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/DataTheoremStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "DockerContentTrust"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/DockerContentTrustStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "FortifyOnDemand"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/FortifyOnDemandStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Fossa"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/FossaStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Gitleaks"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/GitleaksStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Grype"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/GrypeStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "JfrogXray"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/JfrogXrayStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Mend"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/MendStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Metasploit"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/MetasploitStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Nessus"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/NessusStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "NexusIQ"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/NexusIQStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Nikto"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/NiktoStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Nmap"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/NmapStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Openvas"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/OpenvasStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Owasp"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/OwaspStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "PrismaCloud"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/PrismaCloudStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Prowler"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/ProwlerStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Qualys"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/QualysStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Reapsaw"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/ReapsawStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Security"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/SecurityStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Semgrep"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/SemgrepStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ShiftLeft"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/ShiftLeftStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Sniper"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/SniperStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Snyk"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/SnykStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Sonarqube"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/SonarqubeStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Sysdig"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/SysdigStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Tenable"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/TenableStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Veracode"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/VeracodeStepInfo"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Zap"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/ZapStepInfo"
                  }
                }
              }
            } ]
          },
          "SemgrepScanNode" : {
            "title" : "SemgrepScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for SemgrepScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Semgrep" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Semgrep"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/SemgrepStepInfo"
                  }
                }
              }
            } ]
          },
          "ShiftLeftScanNode" : {
            "title" : "ShiftLeftScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for ShiftLeftScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "ShiftLeft" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ShiftLeft"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/ShiftLeftStepInfo"
                  }
                }
              }
            } ]
          },
          "SniperScanNode" : {
            "title" : "SniperScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for SniperScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Sniper" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Sniper"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/SniperStepInfo"
                  }
                }
              }
            } ]
          },
          "SnykScanNode" : {
            "title" : "SnykScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for SnykScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Snyk" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Snyk"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/SnykStepInfo"
                  }
                }
              }
            } ]
          },
          "SonarqubeScanNode" : {
            "title" : "SonarqubeScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for SonarqubeScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Sonarqube" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Sonarqube"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/SonarqubeStepInfo"
                  }
                }
              }
            } ]
          },
          "SysdigScanNode" : {
            "title" : "SysdigScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for SysdigScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Sysdig" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Sysdig"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/SysdigStepInfo"
                  }
                }
              }
            } ]
          },
          "TenableScanNode" : {
            "title" : "TenableScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for TenableScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Tenable" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Tenable"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/TenableStepInfo"
                  }
                }
              }
            } ]
          },
          "VeracodeScanNode" : {
            "title" : "VeracodeScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for VeracodeScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Veracode" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Veracode"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/VeracodeStepInfo"
                  }
                }
              }
            } ]
          },
          "ZapScanNode" : {
            "title" : "ZapScanNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for ZapScanNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Zap" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Zap"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/common/ZapStepInfo"
                  }
                }
              }
            } ]
          }
        },
        "ci" : {
          "CIStepInfo" : {
            "title" : "CIStepInfo",
            "type" : "object",
            "discriminator" : "type",
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for CIStepInfo"
              }
            }
          },
          "ParameterFieldListString" : {
            "title" : "ParameterFieldListString",
            "type" : "object",
            "properties" : {
              "defaultValue" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "executionInput" : {
                "type" : "boolean"
              },
              "expression" : {
                "type" : "boolean"
              },
              "expressionValue" : {
                "type" : "string"
              },
              "inputSetValidator" : {
                "$ref" : "#/definitions/pipeline/common/InputSetValidator"
              },
              "jsonResponseField" : {
                "type" : "boolean"
              },
              "responseField" : {
                "type" : "string"
              },
              "typeString" : {
                "type" : "boolean"
              },
              "value" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "description" : {
                "desc" : "This is the description for ParameterFieldListString"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "GitCloneStepNode" : {
            "title" : "GitCloneStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for GitCloneStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "GitClone" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "GitClone"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/ci/GitCloneStepInfo"
                  }
                }
              }
            } ]
          },
          "GitCloneStepInfo" : {
            "title" : "GitCloneStepInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/ci/CIStepInfo"
            }, {
              "type" : "object",
              "required" : [ "build", "connectorRef" ],
              "properties" : {
                "baseImageConnectorRefs" : {
                  "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
                },
                "build" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/steps/ci/Build"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "cloneDirectory" : {
                  "type" : "string"
                },
                "connectorRef" : {
                  "type" : "string"
                },
                "depth" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "outputFilePathsContent" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                },
                "projectName" : {
                  "type" : "string"
                },
                "repoName" : {
                  "type" : "string"
                },
                "resources" : {
                  "$ref" : "#/definitions/pipeline/common/ContainerResource"
                },
                "runAsUser" : {
                  "oneOf" : [ {
                    "type" : "integer",
                    "format" : "int32"
                  }, {
                    "type" : "string"
                  } ]
                },
                "sslVerify" : {
                  "oneOf" : [ {
                    "type" : "boolean"
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "build", "connectorRef" ],
            "properties" : {
              "baseImageConnectorRefs" : {
                "$ref" : "#/definitions/pipeline/steps/ci/ParameterFieldListString"
              },
              "build" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/ci/Build"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "cloneDirectory" : {
                "type" : "string"
              },
              "connectorRef" : {
                "type" : "string"
              },
              "depth" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "outputFilePathsContent" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "projectName" : {
                "type" : "string"
              },
              "repoName" : {
                "type" : "string"
              },
              "resources" : {
                "$ref" : "#/definitions/pipeline/common/ContainerResource"
              },
              "runAsUser" : {
                "oneOf" : [ {
                  "type" : "integer",
                  "format" : "int32"
                }, {
                  "type" : "string"
                } ]
              },
              "sslVerify" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for GitCloneStepInfo"
              }
            }
          },
          "Build" : {
            "title" : "Build",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "branch", "tag", "PR", "commitSha" ]
              },
              "description" : {
                "desc" : "This is the description for Build"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "PR"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/ci/PRBuildSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "branch"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/ci/BranchBuildSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "commitSha"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/ci/CommitShaBuildSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "tag"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/ci/TagBuildSpec"
                  }
                }
              }
            } ]
          },
          "PRBuildSpec" : {
            "title" : "PRBuildSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/ci/BuildSpec"
            }, {
              "type" : "object",
              "required" : [ "number" ],
              "properties" : {
                "number" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for PRBuildSpec"
              }
            }
          },
          "BuildSpec" : {
            "title" : "BuildSpec",
            "type" : "object",
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for BuildSpec"
              }
            }
          },
          "BranchBuildSpec" : {
            "title" : "BranchBuildSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/ci/BuildSpec"
            }, {
              "type" : "object",
              "required" : [ "branch" ],
              "properties" : {
                "branch" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for BranchBuildSpec"
              }
            }
          },
          "CommitShaBuildSpec" : {
            "title" : "CommitShaBuildSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/ci/BuildSpec"
            }, {
              "type" : "object",
              "required" : [ "commitSha" ],
              "properties" : {
                "commitSha" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for CommitShaBuildSpec"
              }
            }
          },
          "TagBuildSpec" : {
            "title" : "TagBuildSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/ci/BuildSpec"
            }, {
              "type" : "object",
              "required" : [ "tag" ],
              "properties" : {
                "tag" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for TagBuildSpec"
              }
            }
          }
        },
        "cvng" : {
          "CVAnalyzeDeploymentStepNode_template" : {
            "title" : "CVAnalyzeDeploymentStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AnalyzeDeploymentImpact" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AnalyzeDeploymentImpact"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cvng/CVNGDeploymentStepInfo"
                  }
                }
              }
            } ]
          },
          "CVNGDeploymentStepInfo" : {
            "title" : "CVNGDeploymentStepInfo",
            "type" : "object",
            "required" : [ "duration" ],
            "properties" : {
              "duration" : {
                "type" : "string",
                "description" : "Format example: 12H, 1D, please put either Hours or days"
              },
              "monitoredService" : {
                "$ref" : "#/definitions/pipeline/steps/cvng/DefaultAndConfiguredMonitoredServiceNode"
              },
              "description" : {
                "desc" : "This is the description for CVNGDeploymentStepInfo"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "DefaultAndConfiguredMonitoredServiceNode" : {
            "title" : "DefaultAndConfiguredMonitoredServiceNode",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "spec" : {
                "$ref" : "#/definitions/pipeline/steps/cvng/DefaultAndConfiguredMonitoredServiceSpec"
              },
              "type" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for DefaultAndConfiguredMonitoredServiceNode"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Default"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cvng/DefaultMonitoredServiceSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Configured"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cvng/ConfiguredMonitoredServiceSpec"
                  }
                }
              }
            } ]
          },
          "DefaultAndConfiguredMonitoredServiceSpec" : {
            "title" : "DefaultAndConfiguredMonitoredServiceSpec",
            "type" : "object",
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for DefaultAndConfiguredMonitoredServiceSpec"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "DefaultMonitoredServiceSpec" : {
            "title" : "DefaultMonitoredServiceSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cvng/MonitoredServiceSpec"
            }, {
              "type" : "object",
              "properties" : { }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for DefaultMonitoredServiceSpec"
              }
            }
          },
          "MonitoredServiceSpec" : {
            "title" : "MonitoredServiceSpec",
            "type" : "object",
            "discriminator" : "type",
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for MonitoredServiceSpec"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ConfiguredMonitoredServiceSpec" : {
            "title" : "ConfiguredMonitoredServiceSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cvng/MonitoredServiceSpec"
            }, {
              "type" : "object",
              "required" : [ "monitoredServiceRef" ],
              "properties" : {
                "monitoredServiceRef" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for ConfiguredMonitoredServiceSpec"
              }
            }
          },
          "CVVerifyStepNode_template" : {
            "title" : "CVVerifyStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Verify" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Verify"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cvng/CVNGStepInfo"
                  }
                }
              }
            } ]
          },
          "CVNGStepInfo" : {
            "title" : "CVNGStepInfo",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "monitoredService" : {
                "$ref" : "#/definitions/pipeline/steps/cvng/MonitoredServiceNode"
              },
              "type" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for CVNGStepInfo"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Auto"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cvng/AutoVerificationJobSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Bluegreen"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cvng/BlueGreenVerificationJobSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Canary"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cvng/CanaryVerificationJobSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "LoadTest"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cvng/TestVerificationJobSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Rolling"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cvng/ImprovisedCanaryVerificationJobSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "SimpleVerification"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cvng/SimpleVerificationJobSpec"
                  }
                }
              }
            } ]
          },
          "MonitoredServiceNode" : {
            "title" : "MonitoredServiceNode",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for MonitoredServiceNode"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Default"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cvng/DefaultMonitoredServiceSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Template"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cvng/TemplateMonitoredServiceSpec"
                  }
                }
              }
            } ]
          },
          "TemplateMonitoredServiceSpec" : {
            "title" : "TemplateMonitoredServiceSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cvng/MonitoredServiceSpec"
            }, {
              "type" : "object",
              "required" : [ "monitoredServiceTemplateRef", "templateInputs", "versionLabel" ],
              "properties" : {
                "monitoredServiceTemplateRef" : {
                  "type" : "string"
                },
                "templateInputs" : {
                  "$ref" : "#/definitions/pipeline/common/JsonNode"
                },
                "versionLabel" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for TemplateMonitoredServiceSpec"
              }
            }
          },
          "AutoVerificationJobSpec" : {
            "title" : "AutoVerificationJobSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cvng/VerificationJobSpec"
            }, {
              "type" : "object",
              "properties" : {
                "trafficSplitPercentage" : {
                  "type" : "string",
                  "description" : "Example: 50, You can put max upto 50."
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for AutoVerificationJobSpec"
              }
            }
          },
          "VerificationJobSpec" : {
            "title" : "VerificationJobSpec",
            "type" : "object",
            "required" : [ "deploymentTag", "duration" ],
            "discriminator" : "type",
            "properties" : {
              "deploymentTag" : {
                "type" : "string",
                "description" : "You can put expression <+serviceConfig.artifacts.primary.tag> to resolve primary tag"
              },
              "duration" : {
                "type" : "string",
                "description" : "Format example: 5m, 30m, please put multiple of 5"
              },
              "sensitivity" : {
                "type" : "string",
                "description" : "Possible values: [Low, Medium, High]"
              },
              "supportedDataTypesForVerification" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "enum" : [ "TIME_SERIES", "LOG" ]
                }
              },
              "description" : {
                "desc" : "This is the description for VerificationJobSpec"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "BlueGreenVerificationJobSpec" : {
            "title" : "BlueGreenVerificationJobSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cvng/VerificationJobSpec"
            }, {
              "type" : "object",
              "properties" : {
                "trafficSplitPercentage" : {
                  "type" : "string",
                  "description" : "Example: 50, You can put max upto 50."
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for BlueGreenVerificationJobSpec"
              }
            }
          },
          "CanaryVerificationJobSpec" : {
            "title" : "CanaryVerificationJobSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cvng/VerificationJobSpec"
            }, {
              "type" : "object",
              "properties" : {
                "trafficSplitPercentage" : {
                  "type" : "string",
                  "description" : "Example: 50, You can put max upto 50."
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for CanaryVerificationJobSpec"
              }
            }
          },
          "TestVerificationJobSpec" : {
            "title" : "TestVerificationJobSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cvng/VerificationJobSpec"
            }, {
              "type" : "object",
              "properties" : {
                "baseline" : {
                  "type" : "string",
                  "description" : "Possible values: [LAST, PINNED]"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for TestVerificationJobSpec"
              }
            }
          },
          "ImprovisedCanaryVerificationJobSpec" : {
            "title" : "ImprovisedCanaryVerificationJobSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cvng/VerificationJobSpec"
            }, {
              "type" : "object",
              "properties" : {
                "trafficSplitPercentage" : {
                  "type" : "string",
                  "description" : "Example: 50, You can put max upto 50."
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for ImprovisedCanaryVerificationJobSpec"
              }
            }
          },
          "SimpleVerificationJobSpec" : {
            "title" : "SimpleVerificationJobSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/cvng/VerificationJobSpec"
            }, {
              "type" : "object",
              "properties" : { }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for SimpleVerificationJobSpec"
              }
            }
          },
          "CVVerifyStepNode" : {
            "title" : "CVVerifyStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for CVVerifyStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Verify" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Verify"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cvng/CVNGStepInfo"
                  }
                }
              }
            } ]
          },
          "CVAnalyzeDeploymentStepNode" : {
            "title" : "CVAnalyzeDeploymentStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for CVAnalyzeDeploymentStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "AnalyzeDeploymentImpact" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AnalyzeDeploymentImpact"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/cvng/CVNGDeploymentStepInfo"
                  }
                }
              }
            } ]
          }
        },
        "iacm" : {
          "IACMApprovalStepNode_template" : {
            "title" : "IACMApprovalStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "IACMApproval" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "IACMApproval"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/iacm/IACMApprovalInfo"
                  }
                }
              }
            } ]
          },
          "IACMApprovalInfo" : {
            "title" : "IACMApprovalInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "properties" : {
                "image" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "properties" : {
              "image" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for IACMApprovalInfo"
              }
            }
          },
          "IACMTerraformPluginStepNode_template" : {
            "title" : "IACMTerraformPluginStepNode_template",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "IACMTerraformPlugin" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "IACMTerraformPlugin"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/iacm/IACMTerraformPluginInfo"
                  }
                }
              }
            } ]
          },
          "IACMTerraformPluginInfo" : {
            "title" : "IACMTerraformPluginInfo",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/common/StepSpecType"
            }, {
              "type" : "object",
              "required" : [ "command" ],
              "properties" : {
                "command" : {
                  "type" : "string"
                },
                "image" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "type" : "object",
            "required" : [ "command" ],
            "properties" : {
              "command" : {
                "type" : "string"
              },
              "image" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for IACMTerraformPluginInfo"
              }
            }
          },
          "IACMTerraformPluginStepNode" : {
            "title" : "IACMTerraformPluginStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for IACMTerraformPluginStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "IACMTerraformPlugin" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "IACMTerraformPlugin"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/iacm/IACMTerraformPluginInfo"
                  }
                }
              }
            } ]
          },
          "IACMApprovalStepNode" : {
            "title" : "IACMApprovalStepNode",
            "type" : "object",
            "required" : [ "identifier", "name", "spec", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for IACMApprovalStepNode"
              },
              "enforce" : {
                "$ref" : "#/definitions/pipeline/common/PolicyConfig"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "IACMApproval" ]
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "IACMApproval"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/steps/iacm/IACMApprovalInfo"
                  }
                }
              }
            } ]
          }
        }
      },
      "TemplateLinkConfigSpec" : {
        "type" : "object",
        "title" : "TemplateLinkConfigSpec",
        "required" : [ "ref" ],
        "properties" : {
          "ref" : {
            "type" : "string",
            "description" : "ref of the template to be linked in the pipeline, format - id@version",
            "example" : "my_template@v1.0",
            "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}@[0-9a-zA-Z][^\\s/&]{0,127}$"
          },
          "inputs" : {
            "type" : "object",
            "description" : "inputs to be used in the linked template",
            "additionalProperties" : {
              "anyOf" : [ "string", "array", "list", "object", "boolean" ]
            },
            "propertyNames" : {
              "pattern" : "^[a-zA-Z_][0-9a-zA-Z_\\.$-]{0,127}$"
            }
          }
        }
      },
      "stages" : {
        "cd" : {
          "CustomDeploymentConfig_template" : {
            "title" : "CustomDeploymentConfig_template",
            "type" : "object",
            "required" : [ "execution", "infrastructure" ],
            "properties" : {
              "execution" : {
                "$ref" : "#/definitions/pipeline/stages/cd/CustomDeploymentExecutionConfig"
              },
              "infrastructure" : {
                "$ref" : "#/definitions/pipeline/stages/cd/CustomDeploymentInfraConfig"
              },
              "metadata" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for CustomDeploymentConfig"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "CustomDeploymentExecutionConfig" : {
            "title" : "CustomDeploymentExecutionConfig",
            "type" : "object",
            "properties" : {
              "stepTemplateRefs" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "description" : {
                "desc" : "This is the description for CustomDeploymentExecutionConfig"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "CustomDeploymentInfraConfig" : {
            "title" : "CustomDeploymentInfraConfig",
            "type" : "object",
            "required" : [ "fetchInstancesScript", "instanceAttributes", "instancesListPath" ],
            "properties" : {
              "fetchInstancesScript" : {
                "minLength" : 1,
                "$ref" : "#/definitions/pipeline/stages/cd/CustomDeploymentFetchInstancesScriptConfig"
              },
              "instanceAttributes" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/stages/cd/CustomDeploymentInstanceAttributes"
                },
                "minLength" : 1
              },
              "instancesListPath" : {
                "type" : "string",
                "minLength" : 1
              },
              "variables" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/stages/cd/CustomDeploymentConnectorNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/stages/cd/CustomDeploymentNumberNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/stages/cd/CustomDeploymentSecretNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/stages/cd/CustomDeploymentStringNGVariable"
                  } ]
                }
              },
              "description" : {
                "desc" : "This is the description for CustomDeploymentInfraConfig"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "CustomDeploymentFetchInstancesScriptConfig" : {
            "title" : "CustomDeploymentFetchInstancesScriptConfig",
            "type" : "object",
            "required" : [ "store" ],
            "properties" : {
              "metadata" : {
                "type" : "string"
              },
              "store" : {
                "minLength" : 1,
                "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
              },
              "description" : {
                "desc" : "This is the description for CustomDeploymentFetchInstancesScriptConfig"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "CustomDeploymentInstanceAttributes" : {
            "title" : "CustomDeploymentInstanceAttributes",
            "type" : "object",
            "required" : [ "jsonPath", "name" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for CustomDeploymentInstanceAttributes"
              },
              "jsonPath" : {
                "type" : "string",
                "minLength" : 1
              },
              "name" : {
                "type" : "string",
                "minLength" : 1
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "CustomDeploymentConnectorNGVariable" : {
            "title" : "CustomDeploymentConnectorNGVariable",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/CustomDeploymentNGVariable"
            }, {
              "type" : "object",
              "required" : [ "value" ],
              "properties" : {
                "name" : {
                  "type" : "string",
                  "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
                },
                "type" : {
                  "type" : "string",
                  "enum" : [ "Connector" ]
                },
                "value" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for CustomDeploymentConnectorNGVariable"
              }
            }
          },
          "CustomDeploymentNGVariable" : {
            "title" : "CustomDeploymentNGVariable",
            "type" : "object",
            "discriminator" : "type",
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for CustomDeploymentNGVariable"
              },
              "name" : {
                "type" : "string"
              },
              "required" : {
                "type" : "boolean"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "String", "Number", "Secret", "Connector" ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "CustomDeploymentNumberNGVariable" : {
            "title" : "CustomDeploymentNumberNGVariable",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/CustomDeploymentNGVariable"
            }, {
              "type" : "object",
              "required" : [ "value" ],
              "properties" : {
                "name" : {
                  "type" : "string",
                  "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
                },
                "type" : {
                  "type" : "string",
                  "enum" : [ "Number" ]
                },
                "value" : {
                  "oneOf" : [ {
                    "type" : "number",
                    "format" : "double"
                  }, {
                    "type" : "string",
                    "pattern" : "(^[+-]?[0-9]+\\.?[0-9]*$|(<\\+.+>.*)|^$)"
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for CustomDeploymentNumberNGVariable"
              }
            }
          },
          "CustomDeploymentSecretNGVariable" : {
            "title" : "CustomDeploymentSecretNGVariable",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/CustomDeploymentNGVariable"
            }, {
              "type" : "object",
              "required" : [ "value" ],
              "properties" : {
                "name" : {
                  "type" : "string",
                  "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
                },
                "type" : {
                  "type" : "string",
                  "enum" : [ "Secret" ]
                },
                "value" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for CustomDeploymentSecretNGVariable"
              }
            }
          },
          "CustomDeploymentStringNGVariable" : {
            "title" : "CustomDeploymentStringNGVariable",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/CustomDeploymentNGVariable"
            }, {
              "type" : "object",
              "required" : [ "value" ],
              "properties" : {
                "name" : {
                  "type" : "string",
                  "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
                },
                "type" : {
                  "type" : "string",
                  "enum" : [ "String" ]
                },
                "value" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for CustomDeploymentStringNGVariable"
              }
            }
          },
          "DeploymentStageNode" : {
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "title" : "DeploymentStageNode",
            "type" : "object",
            "required" : [ "failure", "type" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "description" : "The stage description."
              },
              "id" : {
                "type" : "string",
                "description" : "The unique stage identifier.",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "description" : "The stage name.",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "delegate" : {
                "description" : "Configures the delegate matching logic.",
                "$ref" : "#/definitions/pipeline/common/Delegate"
              },
              "type" : {
                "type" : "string",
                "description" : "The stage type.",
                "enum" : [ "deployment" ]
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "variables" : {
                "type" : "object",
                "description" : "Variables defines the pipeline variable parameters.",
                "additionalProperties" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/StringVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/NumberVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/ArrayVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/BooleanVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/ObjectVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/SecretVariable"
                  } ]
                }
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(.*<\\+.*>(?!.*\\.executionInput\\(\\)).*)|(^$))$"
              },
              "labels" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              },
              "skip_instances" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              }
            },
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "deployment"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/DeploymentStageConfig"
                  }
                }
              }
            } ]
          },
          "DeploymentStageConfig" : {
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "title" : "DeploymentStageConfig",
            "type" : "object",
            "required" : [ "steps" ],
            "properties" : {
              "deployment_template" : {
                "$ref" : "#/definitions/pipeline/stages/cd/StepTemplateRef"
              },
              "steps" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/StepElementConfig"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/MergePRStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/HelmDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasBGAppSetupStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupSetupStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsRollingRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasCanaryAppSetupStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsGenOneRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/CloudformationDeleteStackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupSwapRouteStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/BambooBuildStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsCanaryDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasSwapRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sDryRunManifestStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/FetchLinkedAppsStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformDestroyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/JenkinsBuildStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerragruntApplyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasRollingRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformPlanStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sBGStageScaleDownStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgCanaryDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/SyncStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/RevertPRStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sBlueGreenStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsBlueGreenCreateServiceStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsUpgradeContainerStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsServiceSetupStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsBasicRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgRollingDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ShellScriptProvisionStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateARMResourceStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsBlueGreenSwapTargetGroupsStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/FetchInstanceScriptStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sScaleStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgCanaryDeleteStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppTrafficShiftStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppSwapSlotStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sCanaryDeleteStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasAppResizeStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasBasicAppSetupStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsTrafficShiftStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupBGStageSetupStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/HelmRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sDeleteStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sCanaryStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsCanaryDeleteStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgRollingRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsRunTaskStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsSamRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsSamBuildStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sBGSwapServicesStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureARMRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerragruntRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateBPStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsDeployWithoutTrafficStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsSamDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasCommandStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sApplyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasRollingDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/CloudformationRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sRollingRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sRollingStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenSwapServiceStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsGenOneDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/CommandStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/CloudformationCreateStackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerragruntPlanStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRunStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppSlotDeploymentStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsBlueGreenRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformApplyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasSwapRoutesStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsRollingDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/DownloadManifestsStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasRouteMappingStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/UpdateReleaseRepoStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ChaosStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerragruntDestroyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/stages/cd/CustomDeploymentConfig"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/BackgroundStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/ci/GitCloneStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cvng/CVVerifyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cvng/CVAnalyzeDeploymentStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/CdSscaOrchestrationStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/CdSscaEnforcementStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/HttpStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/EmailStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/QueueStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ShellScriptStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/CustomApprovalStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/JiraCreateStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/JiraUpdateStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/TemplateStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowApprovalStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/JiraApprovalStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/HarnessApprovalStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/BarrierStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowCreateStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowUpdateStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowImportSetStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/PolicyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/WaitStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ContainerStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/RunStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/PluginStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/ActionStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaDeployV2StepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaPackageV2StepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaPrepareRollbackV2StepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaRollbackV2StepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkBootstrapStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkSynthStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDiffStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDestroyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/UpdateGitOpsAppStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sTrafficRoutingStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/StepGroupNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ParallelNode"
                  } ]
                },
                "maxItems" : 256,
                "minItems" : 1
              },
              "rollback_steps" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/StepElementConfig"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/MergePRStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/HelmDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasBGAppSetupStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupSetupStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsRollingRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasCanaryAppSetupStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsGenOneRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/CloudformationDeleteStackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupSwapRouteStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/BambooBuildStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsCanaryDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasSwapRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sDryRunManifestStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/FetchLinkedAppsStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformDestroyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/JenkinsBuildStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerragruntApplyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasRollingRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformPlanStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sBGStageScaleDownStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgCanaryDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/SyncStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/RevertPRStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sBlueGreenStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsBlueGreenCreateServiceStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsUpgradeContainerStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsServiceSetupStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsBasicRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgRollingDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ShellScriptProvisionStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateARMResourceStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsBlueGreenSwapTargetGroupsStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/FetchInstanceScriptStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sScaleStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgCanaryDeleteStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppTrafficShiftStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppSwapSlotStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sCanaryDeleteStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasAppResizeStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasBasicAppSetupStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsTrafficShiftStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupBGStageSetupStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/HelmRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sDeleteStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sCanaryStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsCanaryDeleteStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgRollingRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsRunTaskStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsSamRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsSamBuildStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sBGSwapServicesStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureARMRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerragruntRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateBPStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsDeployWithoutTrafficStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsSamDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasCommandStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sApplyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasRollingDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/CloudformationRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sRollingRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sRollingStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenSwapServiceStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsGenOneDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/CommandStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/CloudformationCreateStackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerragruntPlanStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRunStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppSlotDeploymentStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsBlueGreenRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformApplyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasSwapRoutesStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsRollingDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/DownloadManifestsStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasRouteMappingStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/UpdateReleaseRepoStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ChaosStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerragruntDestroyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/stages/cd/CustomDeploymentConfig"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/BackgroundStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/ci/GitCloneStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cvng/CVVerifyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cvng/CVAnalyzeDeploymentStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/CdSscaOrchestrationStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/CdSscaEnforcementStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/HttpStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/EmailStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/QueueStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ShellScriptStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/CustomApprovalStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/JiraCreateStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/JiraUpdateStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/TemplateStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowApprovalStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/JiraApprovalStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/HarnessApprovalStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/BarrierStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowCreateStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowUpdateStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowImportSetStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/PolicyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/WaitStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ContainerStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/RunStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/PluginStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/ActionStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaDeployV2StepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaPackageV2StepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaPrepareRollbackV2StepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaRollbackV2StepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkBootstrapStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkSynthStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDiffStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDestroyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/UpdateGitOpsAppStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sTrafficRoutingStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/StepGroupNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ParallelNode"
                  } ]
                },
                "maxItems" : 256,
                "minItems" : 1
              },
              "environment" : {
                "$ref" : "#/definitions/pipeline/stages/cd/EnvironmentYamlV2"
              },
              "environmentGroup" : {
                "$ref" : "#/definitions/pipeline/stages/cd/EnvironmentGroupYaml"
              },
              "environments" : {
                "$ref" : "#/definitions/pipeline/stages/cd/EnvironmentsYaml"
              },
              "gitops_enabled" : {
                "type" : "boolean"
              },
              "infrastructure" : {
                "$ref" : "#/definitions/pipeline/stages/cd/PipelineInfrastructure"
              },
              "service" : {
                "$ref" : "#/definitions/pipeline/stages/cd/ServiceYamlV2"
              },
              "serviceConfig" : {
                "$ref" : "#/definitions/pipeline/stages/cd/ServiceConfig"
              },
              "services" : {
                "$ref" : "#/definitions/pipeline/stages/cd/ServicesYaml"
              },
              "desc" : {
                "type" : "string",
                "description" : "This is the description for DeploymentStageConfig"
              }
            },
            "allOf" : [ {
              "oneOf" : [ {
                "required" : [ "serviceConfig" ]
              }, {
                "required" : [ "service" ]
              }, {
                "required" : [ "services" ]
              } ]
            }, {
              "oneOf" : [ {
                "required" : [ "environment" ]
              }, {
                "required" : [ "environmentGroup" ]
              }, {
                "required" : [ "environments" ]
              }, {
                "required" : [ "infrastructure" ]
              } ]
            } ]
          },
          "StepTemplateRef" : {
            "title" : "StepTemplateRef",
            "type" : "object",
            "required" : [ "ref" ],
            "properties" : {
              "ref" : {
                "type" : "string"
              },
              "version" : {
                "type" : "string"
              },
              "desc" : {
                "description" : "This is the description for StepTemplateRef"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "CustomDeploymentConfig" : {
            "title" : "CustomDeploymentConfig",
            "type" : "object",
            "required" : [ "execution", "infrastructure" ],
            "properties" : {
              "execution" : {
                "$ref" : "#/definitions/pipeline/stages/cd/CustomDeploymentExecutionConfig"
              },
              "infrastructure" : {
                "$ref" : "#/definitions/pipeline/stages/cd/CustomDeploymentInfraConfig"
              },
              "metadata" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for CustomDeploymentConfig"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "EnvironmentYamlV2" : {
            "title" : "EnvironmentYamlV2",
            "type" : "object",
            "properties" : {
              "deploy-to-all" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "inputs" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/JsonNode"
                }, {
                  "type" : "string",
                  "pattern" : "(^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$|^$)"
                } ]
              },
              "name" : {
                "type" : "string",
                "pattern" : "^(?=\\s*\\S).*$"
              },
              "use-from-stage" : {
                "$ref" : "#/definitions/pipeline/stages/cd/EnvironmentInfraUseFromStage"
              },
              "filters" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/FilterYaml"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "git-ops-clusters" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/ClusterYaml"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "infrastructure-definition" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/stages/cd/InfraStructureDefinitionYaml"
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "infrastructure-definitions" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/InfraStructureDefinitionYaml"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$|^$)"
                } ]
              },
              "provisioner" : {
                "$ref" : "#/definitions/pipeline/stages/cd/ExecutionElementConfig"
              },
              "service-override-inputs" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/JsonNode"
                }, {
                  "type" : "string",
                  "pattern" : "(^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$|^$)"
                } ]
              },
              "services-overrides" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/stages/cd/ServiceOverrideInputsYaml"
                }
              },
              "description" : {
                "desc" : "This is the description for EnvironmentYamlV2"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "EnvironmentInfraUseFromStage" : {
            "title" : "EnvironmentInfraUseFromStage",
            "type" : "object",
            "required" : [ "stage" ],
            "properties" : {
              "metadata" : {
                "type" : "string"
              },
              "stage" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "description" : {
                "desc" : "This is used when you want to propagate environment from one of the previous stages."
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "FilterYaml" : {
            "title" : "FilterYaml",
            "type" : "object",
            "required" : [ "entities", "identifier", "spec", "type" ],
            "properties" : {
              "entities" : {
                "type" : "array",
                "uniqueItems" : true,
                "items" : {
                  "type" : "string",
                  "enum" : [ "infrastructures", "gitOpsClusters", "environments" ]
                }
              },
              "identifier" : {
                "type" : "string"
              },
              "spec" : {
                "$ref" : "#/definitions/pipeline/stages/cd/FilterSpec"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "tags", "all" ]
              },
              "description" : {
                "desc" : "This is the description for FilterYaml"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "FilterSpec" : {
            "title" : "FilterSpec",
            "type" : "object",
            "discriminator" : "type",
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for FilterSpec"
              }
            }
          },
          "ClusterYaml" : {
            "title" : "ClusterYaml",
            "type" : "object",
            "required" : [ "identifier" ],
            "properties" : {
              "identifier" : {
                "type" : "string"
              },
              "metadata" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for ClusterYaml"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "InfraStructureDefinitionYaml" : {
            "title" : "InfraStructureDefinitionYaml",
            "type" : "object",
            "required" : [ "identifier" ],
            "properties" : {
              "identifier" : {
                "type" : "string",
                "pattern" : "^(?=\\s*\\S).*$"
              },
              "inputs" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/JsonNode"
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "metadata" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for InfraStructureDefinitionYaml"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ExecutionElementConfig" : {
            "title" : "ExecutionElementConfig",
            "type" : "object",
            "required" : [ "steps" ],
            "properties" : {
              "rollbackSteps" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/stages/cd/ExecutionWrapperConfig"
                }
              },
              "steps" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/stages/cd/ExecutionWrapperConfig"
                },
                "maxItems" : 256,
                "minItems" : 1
              },
              "description" : {
                "desc" : "This is the description for ExecutionElementConfig"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ExecutionWrapperConfig" : {
            "title" : "ExecutionWrapperConfig",
            "type" : "object",
            "properties" : {
              "parallel" : {
                "$ref" : "#/definitions/pipeline/stages/cd/ParallelStepElementConfig"
              },
              "step" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepElementConfig"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/MergePRStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/HelmDeployStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TasBGAppSetupStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupSetupStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/EcsRollingRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TasCanaryAppSetupStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsGenOneRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/CloudformationDeleteStackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupSwapRouteStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/BambooBuildStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/EcsCanaryDeployStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TasSwapRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/K8sDryRunManifestStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupDeployStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/FetchLinkedAppsStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerraformDestroyStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/JenkinsBuildStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerragruntApplyStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TasRollingRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerraformPlanStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsDeployStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/K8sBGStageScaleDownStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AsgCanaryDeployStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/SyncStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/RevertPRStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/K8sBlueGreenStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerraformRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/EcsBlueGreenCreateServiceStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/EcsUpgradeContainerStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/EcsServiceSetupStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/EcsBasicRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AsgRollingDeployStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/ShellScriptProvisionStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateARMResourceStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/EcsBlueGreenSwapTargetGroupsStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/FetchInstanceScriptStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/K8sScaleStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AsgCanaryDeleteStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppTrafficShiftStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppSwapSlotStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TasRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/K8sCanaryDeleteStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TasAppResizeStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TasBasicAppSetupStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsTrafficShiftStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupBGStageSetupStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/HelmRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/K8sDeleteStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/K8sCanaryStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/EcsCanaryDeleteStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AsgRollingRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/EcsRunTaskStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AwsSamRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AwsSamBuildStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/K8sBGSwapServicesStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AzureARMRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerragruntRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateBPStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsDeployWithoutTrafficStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AwsSamDeployStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TasCommandStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/K8sApplyStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TasRollingDeployStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaDeployStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/CloudformationRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaDeployStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/K8sRollingRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/K8sRollingStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenSwapServiceStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsGenOneDeployStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/CommandStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/CloudformationCreateStackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerragruntPlanStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRunStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppSlotDeploymentStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/EcsBlueGreenRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerraformApplyStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TasSwapRoutesStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/EcsRollingDeployStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenDeployStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AsgShiftTrafficStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/DownloadManifestsStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TasRouteMappingStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/UpdateReleaseRepoStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/ChaosStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerragruntDestroyStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/stages/cd/CustomDeploymentConfig"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/BackgroundStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/ci/GitCloneStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cvng/CVVerifyStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cvng/CVAnalyzeDeploymentStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/CdSscaOrchestrationStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/CdSscaEnforcementStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/HttpStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/EmailStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/QueueStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/ShellScriptStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/CustomApprovalStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/JiraCreateStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/JiraUpdateStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/TemplateStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowApprovalStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/JiraApprovalStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/HarnessApprovalStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/BarrierStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowCreateStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowUpdateStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowImportSetStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/PolicyStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/WaitStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/ContainerStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/RunStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/PluginStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/ActionStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaDeployV2StepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaPackageV2StepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaPrepareRollbackV2StepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaRollbackV2StepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/AwsCdkBootstrapStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/AwsCdkSynthStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDiffStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDeployStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDestroyStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/UpdateGitOpsAppStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/K8sTrafficRoutingStepNode"
                } ]
              },
              "stepGroup" : {
                "$ref" : "#/definitions/pipeline/stages/cd/StepGroupElementConfig"
              },
              "description" : {
                "desc" : "This is the description for ExecutionWrapperConfig"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ParallelStepElementConfig" : {
            "title" : "ParallelStepElementConfig",
            "type" : "array",
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/definitions/pipeline/common/StepElementConfig"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/MergePRStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/HelmDeployStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/TasBGAppSetupStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupSetupStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/EcsRollingRollbackStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/TasCanaryAppSetupStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsRollbackStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsGenOneRollbackStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/CloudformationDeleteStackStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupSwapRouteStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/BambooBuildStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/EcsCanaryDeployStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/TasSwapRollbackStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/K8sDryRunManifestStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupDeployStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/FetchLinkedAppsStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/TerraformDestroyStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/JenkinsBuildStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/TerragruntApplyStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/TasRollingRollbackStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/TerraformPlanStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppRollbackStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsDeployStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/K8sBGStageScaleDownStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/AsgCanaryDeployStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/SyncStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/RevertPRStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/K8sBlueGreenStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/TerraformRollbackStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/EcsBlueGreenCreateServiceStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/EcsUpgradeContainerStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/EcsServiceSetupStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/EcsBasicRollbackStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/AsgRollingDeployStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/ShellScriptProvisionStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateARMResourceStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/EcsBlueGreenSwapTargetGroupsStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/FetchInstanceScriptStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/K8sScaleStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/AsgCanaryDeleteStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRollbackStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaRollbackStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppTrafficShiftStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppSwapSlotStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/TasRollbackStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/K8sCanaryDeleteStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/TasAppResizeStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/TasBasicAppSetupStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsTrafficShiftStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupBGStageSetupStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/HelmRollbackStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/K8sDeleteStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/K8sCanaryStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/EcsCanaryDeleteStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/AsgRollingRollbackStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/EcsRunTaskStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenRollbackStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/AwsSamRollbackStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/AwsSamBuildStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/K8sBGSwapServicesStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/AzureARMRollbackStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/TerragruntRollbackStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateBPStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsDeployWithoutTrafficStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/AwsSamDeployStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/TasCommandStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/K8sApplyStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/TasRollingDeployStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaDeployStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/CloudformationRollbackStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaDeployStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/K8sRollingRollbackStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/K8sRollingStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenSwapServiceStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsGenOneDeployStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/CommandStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/CloudformationCreateStackStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/TerragruntPlanStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRunStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppSlotDeploymentStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/EcsBlueGreenRollbackStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupRollbackStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/TerraformApplyStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/TasSwapRoutesStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaRollbackStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/EcsRollingDeployStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenDeployStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/DownloadManifestsStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/TasRouteMappingStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/UpdateReleaseRepoStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/ChaosStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/TerragruntDestroyStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/stages/cd/CustomDeploymentConfig"
              }, {
                "$ref" : "#/definitions/pipeline/steps/common/BackgroundStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/ci/GitCloneStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cvng/CVVerifyStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cvng/CVAnalyzeDeploymentStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/custom/CdSscaOrchestrationStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/custom/CdSscaEnforcementStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/custom/HttpStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/custom/EmailStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/custom/QueueStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/custom/ShellScriptStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/custom/CustomApprovalStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/custom/JiraCreateStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/custom/JiraUpdateStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/custom/TemplateStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowApprovalStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/custom/JiraApprovalStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/custom/HarnessApprovalStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/custom/BarrierStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowCreateStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowUpdateStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowImportSetStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/custom/PolicyStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/custom/WaitStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/custom/ContainerStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/common/RunStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/common/PluginStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/common/ActionStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaDeployV2StepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaPackageV2StepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaPrepareRollbackV2StepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaRollbackV2StepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/common/AwsCdkBootstrapStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/common/AwsCdkSynthStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDiffStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDeployStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDestroyStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/UpdateGitOpsAppStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/K8sTrafficRoutingStepNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/StepGroupNode"
              }, {
                "$ref" : "#/definitions/pipeline/steps/cd/ParallelNode"
              } ]
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for ParallelStepElementConfig"
              }
            }
          },
          "StepGroupElementConfig" : {
            "title" : "StepGroupElementConfig",
            "type" : "object",
            "required" : [ "identifier", "name" ],
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "sharedPaths" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "stepGroupInfra" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/K8sDirectInfra"
                } ]
              },
              "steps" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/StepElementConfig"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/MergePRStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/HelmDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasBGAppSetupStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupSetupStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsRollingRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasCanaryAppSetupStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsGenOneRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/CloudformationDeleteStackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupSwapRouteStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/BambooBuildStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsCanaryDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasSwapRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sDryRunManifestStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/FetchLinkedAppsStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformDestroyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/JenkinsBuildStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerragruntApplyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasRollingRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformPlanStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sBGStageScaleDownStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgCanaryDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/SyncStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/RevertPRStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sBlueGreenStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsBlueGreenCreateServiceStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsUpgradeContainerStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsServiceSetupStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsBasicRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgRollingDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ShellScriptProvisionStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateARMResourceStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsBlueGreenSwapTargetGroupsStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/FetchInstanceScriptStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sScaleStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgCanaryDeleteStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppTrafficShiftStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppSwapSlotStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sCanaryDeleteStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasAppResizeStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasBasicAppSetupStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsTrafficShiftStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupBGStageSetupStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/HelmRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sDeleteStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sCanaryStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsCanaryDeleteStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgRollingRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsRunTaskStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsSamRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsSamBuildStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sBGSwapServicesStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureARMRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerragruntRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateBPStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsDeployWithoutTrafficStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsSamDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasCommandStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sApplyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasRollingDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/CloudformationRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sRollingRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sRollingStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenSwapServiceStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/GoogleFunctionsGenOneDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/CommandStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/CloudformationCreateStackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerragruntPlanStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRunStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureWebAppSlotDeploymentStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsBlueGreenRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ElastigroupRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformApplyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasSwapRoutesStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/EcsRollingDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/DownloadManifestsStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TasRouteMappingStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/UpdateReleaseRepoStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ChaosStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerragruntDestroyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/stages/cd/CustomDeploymentConfig"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/BackgroundStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/ci/GitCloneStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cvng/CVVerifyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cvng/CVAnalyzeDeploymentStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/CdSscaOrchestrationStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/CdSscaEnforcementStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/HttpStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/EmailStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/QueueStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ShellScriptStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/CustomApprovalStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/JiraCreateStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/JiraUpdateStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/TemplateStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowApprovalStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/JiraApprovalStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/HarnessApprovalStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/BarrierStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowCreateStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowUpdateStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowImportSetStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/PolicyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/WaitStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ContainerStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/RunStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/PluginStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/ActionStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaDeployV2StepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaPackageV2StepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaPrepareRollbackV2StepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaRollbackV2StepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkBootstrapStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkSynthStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDiffStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDestroyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/UpdateGitOpsAppStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/K8sTrafficRoutingStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/StepGroupNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ParallelNode"
                  } ]
                },
                "maxItems" : 256,
                "minItems" : 1
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "template" : {
                "$ref" : "#/definitions/pipeline/steps/custom/TemplateLinkConfig"
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for StepGroupElementConfig"
              },
              "variables" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                  } ]
                }
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "oneOf" : [ {
                "required" : [ "template" ]
              }, {
                "required" : [ "steps" ]
              } ]
            } ]
          },
          "ServiceOverrideInputsYaml" : {
            "title" : "ServiceOverrideInputsYaml",
            "type" : "object",
            "required" : [ "serviceRef" ],
            "properties" : {
              "serviceOverrideInputs" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/JsonNode"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "serviceRef" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for ServiceOverrideInputsYaml"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "EnvironmentGroupYaml" : {
            "title" : "EnvironmentGroupYaml",
            "type" : "object",
            "required" : [ "envGroupRef" ],
            "properties" : {
              "__uuid" : {
                "type" : "string"
              },
              "deployToAll" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "name" : {
                "type" : "string",
                "pattern" : "^(?=\\s*\\S).*$"
              },
              "environments" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/EnvironmentYamlV2"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "filters" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/FilterYaml"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "metadata" : {
                "$ref" : "#/definitions/pipeline/stages/cd/EnvironmentGroupMetadata"
              },
              "description" : {
                "desc" : "This is the description for EnvironmentGroupYaml"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "EnvironmentGroupMetadata" : {
            "title" : "EnvironmentGroupMetadata",
            "type" : "object",
            "properties" : {
              "parallel" : {
                "type" : "boolean"
              },
              "description" : {
                "desc" : "This is the description for EnvironmentGroupMetadata"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "EnvironmentsYaml" : {
            "title" : "EnvironmentsYaml",
            "type" : "object",
            "properties" : {
              "filters" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/FilterYaml"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "metadata" : {
                "readOnly" : true,
                "$ref" : "#/definitions/pipeline/stages/cd/EnvironmentsMetadata"
              },
              "values" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/EnvironmentYamlV2"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for EnvironmentsYaml"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "EnvironmentsMetadata" : {
            "title" : "EnvironmentsMetadata",
            "type" : "object",
            "properties" : {
              "parallel" : {
                "type" : "boolean"
              },
              "description" : {
                "desc" : "This is the description for EnvironmentsMetadata"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "PipelineInfrastructure" : {
            "title" : "PipelineInfrastructure",
            "type" : "object",
            "properties" : {
              "allowSimultaneousDeployments" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "environment" : {
                "$ref" : "#/definitions/pipeline/stages/cd/EnvironmentYaml"
              },
              "environmentRef" : {
                "type" : "string"
              },
              "infrastructureDefinition" : {
                "$ref" : "#/definitions/pipeline/stages/cd/InfrastructureDef"
              },
              "infrastructureKey" : {
                "type" : "string"
              },
              "useFromStage" : {
                "$ref" : "#/definitions/pipeline/stages/cd/InfraUseFromStage"
              },
              "description" : {
                "desc" : "This is the description for PipelineInfrastructure"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "oneOf" : [ {
                "required" : [ "environment" ]
              }, {
                "required" : [ "environmentRef" ]
              } ]
            }, {
              "oneOf" : [ {
                "required" : [ "useFromStage" ]
              }, {
                "required" : [ "infrastructureDefinition" ]
              } ]
            } ]
          },
          "EnvironmentYaml" : {
            "title" : "EnvironmentYaml",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for EnvironmentYaml"
              },
              "identifier" : {
                "type" : "string"
              },
              "name" : {
                "type" : "string"
              },
              "tags" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              },
              "type" : {
                "type" : "string",
                "enum" : [ "PreProduction", "Production" ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "InfrastructureDef" : {
            "title" : "InfrastructureDef",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "provisioner" : {
                "$ref" : "#/definitions/pipeline/stages/cd/ExecutionElementConfig"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "KubernetesDirect", "KubernetesGcp", "KubernetesAzure", "Pdc", "SshWinRmAzure", "ServerlessAwsLambda", "AzureWebApp", "SshWinRmAws", "CustomDeployment", "ECS", "Elastigroup", "TAS", "Asg", "GoogleCloudFunctions", "AWS_SAM", "AwsLambda", "KubernetesAws", "KubernetesRancher" ]
              },
              "description" : {
                "desc" : "This is the description for InfrastructureDef"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AWS_SAM"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/AwsSamInfrastructure"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Asg"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/AsgInfrastructure"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AwsLambda"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/AwsLambdaInfrastructure"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AzureWebApp"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/AzureWebAppInfrastructure"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "CustomDeployment"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/CustomDeploymentInfrastructure"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ECS"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/EcsInfrastructure"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Elastigroup"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/ElastigroupInfrastructure"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "GoogleCloudFunctions"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/GoogleFunctionsInfrastructure"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "KubernetesAws"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/K8sAwsInfrastructure"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "KubernetesAzure"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/K8sAzureInfrastructure"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "KubernetesDirect"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/K8SDirectInfrastructure"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "KubernetesGcp"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/K8sGcpInfrastructure"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "KubernetesRancher"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/K8sRancherInfrastructure"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Pdc"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/PdcInfrastructure"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ServerlessAwsLambda"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/ServerlessAwsLambdaInfrastructure"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "SshWinRmAws"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/SshWinRmAwsInfrastructure"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "SshWinRmAzure"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/SshWinRmAzureInfrastructure"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "TAS"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/TanzuApplicationServiceInfrastructure"
                  }
                }
              }
            } ]
          },
          "AwsSamInfrastructure" : {
            "title" : "AwsSamInfrastructure",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/common/Infrastructure"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "region" ],
              "properties" : {
                "connectorRef" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "metadata" : {
                  "type" : "string"
                },
                "provisioner" : {
                  "type" : "string"
                },
                "region" : {
                  "type" : "string",
                  "minLength" : 1
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for AwsSamInfrastructure"
              }
            }
          },
          "AsgInfrastructure" : {
            "title" : "AsgInfrastructure",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/common/Infrastructure"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "region" ],
              "properties" : {
                "baseAsgName" : {
                  "type" : "string"
                },
                "connectorRef" : {
                  "type" : "string"
                },
                "metadata" : {
                  "type" : "string"
                },
                "provisioner" : {
                  "type" : "string"
                },
                "region" : {
                  "type" : "string",
                  "minLength" : 1
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for AsgInfrastructure"
              }
            }
          },
          "AwsLambdaInfrastructure" : {
            "title" : "AwsLambdaInfrastructure",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/common/Infrastructure"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "region" ],
              "properties" : {
                "connectorRef" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "metadata" : {
                  "type" : "string"
                },
                "provisioner" : {
                  "type" : "string"
                },
                "region" : {
                  "type" : "string",
                  "minLength" : 1
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for AwsLambdaInfrastructure"
              }
            }
          },
          "AzureWebAppInfrastructure" : {
            "title" : "AzureWebAppInfrastructure",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/common/Infrastructure"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "resourceGroup", "subscriptionId" ],
              "properties" : {
                "connectorRef" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "provisioner" : {
                  "type" : "string"
                },
                "resourceGroup" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "subscriptionId" : {
                  "type" : "string",
                  "minLength" : 1
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for AzureWebAppInfrastructure"
              }
            }
          },
          "CustomDeploymentInfrastructure" : {
            "title" : "CustomDeploymentInfrastructure",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/common/Infrastructure"
            }, {
              "type" : "object",
              "required" : [ "customDeploymentRef" ],
              "properties" : {
                "customDeploymentRef" : {
                  "minLength" : 1,
                  "$ref" : "#/definitions/pipeline/stages/cd/StepTemplateRef"
                },
                "metadata" : {
                  "type" : "string"
                },
                "provisioner" : {
                  "type" : "string"
                },
                "variables" : {
                  "type" : "array",
                  "items" : {
                    "oneOf" : [ {
                      "$ref" : "#/definitions/pipeline/stages/cd/CustomDeploymentConnectorNGVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/stages/cd/CustomDeploymentNumberNGVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/stages/cd/CustomDeploymentSecretNGVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/stages/cd/CustomDeploymentStringNGVariable"
                    } ]
                  }
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for CustomDeploymentInfrastructure"
              }
            }
          },
          "EcsInfrastructure" : {
            "title" : "EcsInfrastructure",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/common/Infrastructure"
            }, {
              "type" : "object",
              "required" : [ "cluster", "connectorRef", "region" ],
              "properties" : {
                "cluster" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "connectorRef" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "metadata" : {
                  "type" : "string"
                },
                "provisioner" : {
                  "type" : "string"
                },
                "region" : {
                  "type" : "string",
                  "minLength" : 1
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for EcsInfrastructure"
              }
            }
          },
          "ElastigroupInfrastructure" : {
            "title" : "ElastigroupInfrastructure",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/common/Infrastructure"
            }, {
              "type" : "object",
              "required" : [ "configuration", "connectorRef" ],
              "properties" : {
                "configuration" : {
                  "$ref" : "#/definitions/pipeline/stages/cd/ElastigroupConfiguration"
                },
                "connectorRef" : {
                  "type" : "string"
                },
                "metadata" : {
                  "type" : "string"
                },
                "provisioner" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for ElastigroupInfrastructure"
              }
            }
          },
          "ElastigroupConfiguration" : {
            "title" : "ElastigroupConfiguration",
            "type" : "object",
            "required" : [ "store" ],
            "properties" : {
              "metadata" : {
                "type" : "string"
              },
              "store" : {
                "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
              },
              "description" : {
                "desc" : "This is the description for ElastigroupConfiguration"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "GoogleFunctionsInfrastructure" : {
            "title" : "GoogleFunctionsInfrastructure",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/common/Infrastructure"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "project", "region" ],
              "properties" : {
                "connectorRef" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "metadata" : {
                  "type" : "string"
                },
                "project" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "provisioner" : {
                  "type" : "string"
                },
                "region" : {
                  "type" : "string",
                  "minLength" : 1
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for GoogleFunctionsInfrastructure"
              }
            }
          },
          "K8sAwsInfrastructure" : {
            "title" : "K8sAwsInfrastructure",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/common/Infrastructure"
            }, {
              "type" : "object",
              "required" : [ "cluster", "connectorRef", "namespace", "releaseName" ],
              "properties" : {
                "cluster" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "connectorRef" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "metadata" : {
                  "type" : "string"
                },
                "namespace" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ],
                  "minLength" : 1
                },
                "provisioner" : {
                  "type" : "string"
                },
                "releaseName" : {
                  "type" : "string",
                  "minLength" : 1
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for K8sAwsInfrastructure"
              }
            }
          },
          "K8sAzureInfrastructure" : {
            "title" : "K8sAzureInfrastructure",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/common/Infrastructure"
            }, {
              "type" : "object",
              "required" : [ "cluster", "connectorRef", "namespace", "releaseName", "resourceGroup", "subscriptionId" ],
              "properties" : {
                "cluster" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "connectorRef" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "namespace" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ],
                  "minLength" : 1
                },
                "provisioner" : {
                  "type" : "string"
                },
                "releaseName" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "resourceGroup" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "subscriptionId" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "useClusterAdminCredentials" : {
                  "type" : "boolean"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for K8sAzureInfrastructure"
              }
            }
          },
          "K8SDirectInfrastructure" : {
            "title" : "K8SDirectInfrastructure",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/common/Infrastructure"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "namespace", "releaseName" ],
              "properties" : {
                "connectorRef" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "namespace" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ],
                  "minLength" : 1
                },
                "provisioner" : {
                  "type" : "string"
                },
                "releaseName" : {
                  "type" : "string",
                  "minLength" : 1
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for K8SDirectInfrastructure"
              }
            }
          },
          "K8sGcpInfrastructure" : {
            "title" : "K8sGcpInfrastructure",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/common/Infrastructure"
            }, {
              "type" : "object",
              "required" : [ "cluster", "connectorRef", "namespace", "releaseName" ],
              "properties" : {
                "cluster" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "connectorRef" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "metadata" : {
                  "type" : "string"
                },
                "namespace" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ],
                  "minLength" : 1
                },
                "provisioner" : {
                  "type" : "string"
                },
                "releaseName" : {
                  "type" : "string",
                  "minLength" : 1
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for K8sGcpInfrastructure"
              }
            }
          },
          "K8sRancherInfrastructure" : {
            "title" : "K8sRancherInfrastructure",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/common/Infrastructure"
            }, {
              "type" : "object",
              "required" : [ "cluster", "connectorRef", "namespace", "releaseName" ],
              "properties" : {
                "cluster" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "connectorRef" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "metadata" : {
                  "type" : "string"
                },
                "namespace" : {
                  "oneOf" : [ {
                    "type" : "string",
                    "pattern" : "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ],
                  "minLength" : 1
                },
                "provisioner" : {
                  "type" : "string"
                },
                "releaseName" : {
                  "type" : "string",
                  "minLength" : 1
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for K8sRancherInfrastructure"
              }
            }
          },
          "PdcInfrastructure" : {
            "title" : "PdcInfrastructure",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/common/Infrastructure"
            }, { } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "oneOf" : [ {
              "type" : "object",
              "required" : [ "credentialsRef", "hostFilter", "hostArrayPath" ],
              "properties" : {
                "credentialsRef" : {
                  "type" : "string"
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "hostArrayPath" : {
                  "type" : "string"
                },
                "hostAttributes" : {
                  "oneOf" : [ {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string"
                  } ]
                },
                "hostFilter" : {
                  "$ref" : "#/definitions/pipeline/stages/cd/HostFilter"
                },
                "provisioner" : {
                  "type" : "string"
                }
              },
              "additionalProperties" : false
            }, {
              "type" : "object",
              "required" : [ "credentialsRef", "hostFilter", "connectorRef" ],
              "properties" : {
                "connectorRef" : {
                  "type" : "string"
                },
                "credentialsRef" : {
                  "type" : "string"
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "hostAttributes" : {
                  "oneOf" : [ {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string"
                  } ]
                },
                "hostFilter" : {
                  "$ref" : "#/definitions/pipeline/stages/cd/HostFilter"
                },
                "provisioner" : {
                  "type" : "string"
                }
              },
              "additionalProperties" : false
            }, {
              "type" : "object",
              "required" : [ "credentialsRef", "hostFilter", "hosts" ],
              "properties" : {
                "credentialsRef" : {
                  "type" : "string"
                },
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "hostAttributes" : {
                  "oneOf" : [ {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string"
                  } ]
                },
                "hostFilter" : {
                  "$ref" : "#/definitions/pipeline/stages/cd/HostFilter"
                },
                "hosts" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string"
                  } ]
                },
                "provisioner" : {
                  "type" : "string"
                }
              },
              "additionalProperties" : false
            } ],
            "properties" : {
              "description" : {
                "desc" : "This is the description for PdcInfrastructure"
              }
            }
          },
          "HostFilter" : {
            "title" : "HostFilter",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "All", "HostNames", "HostAttributes" ]
              },
              "description" : {
                "desc" : "This is the description for HostFilter"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "All"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/AllHostsFilter"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "HostAttributes"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/HostAttributesFilter"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "HostNames"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/HostNamesFilter"
                  }
                }
              }
            } ]
          },
          "AllHostsFilter" : {
            "title" : "AllHostsFilter",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/HostFilterSpec"
            }, {
              "type" : "object"
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for AllHostsFilter"
              }
            }
          },
          "HostFilterSpec" : {
            "title" : "HostFilterSpec",
            "type" : "object",
            "discriminator" : "type",
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "All", "HostNames", "HostAttributes" ]
              },
              "description" : {
                "desc" : "This is the description for HostFilterSpec"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "HostAttributesFilter" : {
            "title" : "HostAttributesFilter",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/HostFilterSpec"
            }, {
              "type" : "object",
              "properties" : {
                "value" : {
                  "oneOf" : [ {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for HostAttributesFilter"
              }
            }
          },
          "HostNamesFilter" : {
            "title" : "HostNamesFilter",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/HostFilterSpec"
            }, {
              "type" : "object",
              "properties" : {
                "value" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "(<\\+.+>.*)",
                    "minLength" : 1
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for HostNamesFilter"
              }
            }
          },
          "ServerlessAwsLambdaInfrastructure" : {
            "title" : "ServerlessAwsLambdaInfrastructure",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/common/Infrastructure"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "region", "stage" ],
              "properties" : {
                "connectorRef" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "metadata" : {
                  "type" : "string"
                },
                "provisioner" : {
                  "type" : "string"
                },
                "region" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "stage" : {
                  "type" : "string",
                  "minLength" : 1
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for ServerlessAwsLambdaInfrastructure"
              }
            }
          },
          "SshWinRmAwsInfrastructure" : {
            "title" : "SshWinRmAwsInfrastructure",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/common/Infrastructure"
            }, {
              "type" : "object",
              "required" : [ "awsInstanceFilter", "connectorRef", "credentialsRef", "hostConnectionType", "region" ],
              "properties" : {
                "awsInstanceFilter" : {
                  "$ref" : "#/definitions/pipeline/stages/cd/AwsInstanceFilter"
                },
                "connectorRef" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "credentialsRef" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "hostConnectionType" : {
                  "type" : "string",
                  "enum" : [ "PublicIP", "PrivateIP" ],
                  "minLength" : 1
                },
                "provisioner" : {
                  "type" : "string"
                },
                "region" : {
                  "type" : "string",
                  "minLength" : 1
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for SshWinRmAwsInfrastructure"
              }
            }
          },
          "AwsInstanceFilter" : {
            "title" : "AwsInstanceFilter",
            "type" : "object",
            "properties" : {
              "tags" : {
                "oneOf" : [ {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string"
                } ]
              },
              "vpcs" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "description" : {
                "desc" : "This is the description for AwsInstanceFilter"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "SshWinRmAzureInfrastructure" : {
            "title" : "SshWinRmAzureInfrastructure",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/common/Infrastructure"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "credentialsRef", "hostConnectionType", "resourceGroup", "subscriptionId" ],
              "properties" : {
                "connectorRef" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "credentialsRef" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "hostConnectionType" : {
                  "type" : "string",
                  "enum" : [ "Hostname", "PrivateIP", "PublicIP" ],
                  "minLength" : 1
                },
                "provisioner" : {
                  "type" : "string"
                },
                "resourceGroup" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "subscriptionId" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "tags" : {
                  "oneOf" : [ {
                    "type" : "object",
                    "additionalProperties" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string"
                  } ]
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for SshWinRmAzureInfrastructure"
              }
            }
          },
          "TanzuApplicationServiceInfrastructure" : {
            "title" : "TanzuApplicationServiceInfrastructure",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/steps/common/Infrastructure"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "organization", "space" ],
              "properties" : {
                "connectorRef" : {
                  "type" : "string"
                },
                "metadata" : {
                  "type" : "string"
                },
                "organization" : {
                  "type" : "string"
                },
                "provisioner" : {
                  "type" : "string"
                },
                "space" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for TanzuApplicationServiceInfrastructure"
              }
            }
          },
          "InfraUseFromStage" : {
            "title" : "InfraUseFromStage",
            "type" : "object",
            "required" : [ "stage" ],
            "properties" : {
              "overrides" : {
                "$ref" : "#/definitions/pipeline/stages/cd/InfraOverrides"
              },
              "stage" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for InfraUseFromStage"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "InfraOverrides" : {
            "title" : "InfraOverrides",
            "type" : "object",
            "properties" : {
              "environment" : {
                "$ref" : "#/definitions/pipeline/stages/cd/EnvironmentYaml"
              },
              "infrastructureDefinition" : {
                "$ref" : "#/definitions/pipeline/stages/cd/InfrastructureDef"
              },
              "description" : {
                "desc" : "This is the description for InfraOverrides"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ServiceYamlV2" : {
            "title" : "ServiceYamlV2",
            "type" : "object",
            "properties" : {
              "inputs" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/JsonNode"
                }, {
                  "type" : "string",
                  "pattern" : "(^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$|^$)"
                } ]
              },
              "name" : {
                "type" : "string",
                "pattern" : "^(?=\\s*\\S).*$"
              },
              "use-from-stage" : {
                "$ref" : "#/definitions/pipeline/stages/cd/ServiceUseFromStageV2"
              },
              "description" : {
                "desc" : "This is the description for ServiceYamlV2"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ServiceUseFromStageV2" : {
            "title" : "ServiceUseFromStageV2",
            "type" : "object",
            "required" : [ "stage" ],
            "properties" : {
              "metadata" : {
                "type" : "string"
              },
              "stage" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "description" : {
                "desc" : "This is the description for ServiceUseFromStageV2"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ServiceConfig" : {
            "title" : "ServiceConfig",
            "type" : "object",
            "properties" : {
              "service" : {
                "$ref" : "#/definitions/pipeline/stages/cd/ServiceYaml"
              },
              "defination" : {
                "$ref" : "#/definitions/pipeline/stages/cd/ServiceDefinition"
              },
              "name" : {
                "type" : "string"
              },
              "stage-overrides" : {
                "$ref" : "#/definitions/pipeline/stages/cd/StageOverridesConfig"
              },
              "use-from-stage" : {
                "$ref" : "#/definitions/pipeline/stages/cd/ServiceUseFromStage"
              },
              "description" : {
                "desc" : "This is the description for ServiceConfig"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "oneOf" : [ {
                "required" : [ "use-from-stage" ]
              }, {
                "required" : [ "service" ]
              }, {
                "required" : [ "name" ]
              } ]
            }, {
              "oneOf" : [ {
                "required" : [ "use-from-stage" ]
              }, {
                "required" : [ "defination" ]
              } ]
            } ]
          },
          "ServiceYaml" : {
            "title" : "ServiceYaml",
            "type" : "object",
            "required" : [ "identifier", "name" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for ServiceYaml"
              },
              "identifier" : {
                "type" : "string"
              },
              "name" : {
                "type" : "string"
              },
              "tags" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ServiceDefinition" : {
            "title" : "ServiceDefinition",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "type" : {
                "type" : "string",
                "enum" : [ "Kubernetes", "NativeHelm", "Ssh", "WinRm", "ServerlessAwsLambda", "AzureWebApp", "CustomDeployment", "ECS", "Elastigroup", "TAS", "Asg", "GoogleCloudFunctions", "AwsLambda", "AWS_SAM" ]
              },
              "description" : {
                "desc" : "This is the description for ServiceDefinition"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AWS_SAM"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/AwsSamServiceSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Asg"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/AsgServiceSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AwsLambda"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/AwsLambdaServiceSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AzureWebApp"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/AzureWebAppServiceSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "CustomDeployment"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/CustomDeploymentServiceSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ECS"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/EcsServiceSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Elastigroup"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/ElastigroupServiceSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "GoogleCloudFunctions"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/GoogleCloudFunctionsServiceSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Kubernetes"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/KubernetesServiceSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "NativeHelm"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/NativeHelmServiceSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ServerlessAwsLambda"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/ServerlessAwsLambdaServiceSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Ssh"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/SshServiceSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "TAS"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/TanzuApplicationServiceSpec"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "WinRm"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/WinRmServiceSpec"
                  }
                }
              }
            } ]
          },
          "AwsSamServiceSpec" : {
            "title" : "AwsSamServiceSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/ServiceSpec"
            }, {
              "type" : "object",
              "properties" : { }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for AwsSamServiceSpec"
              }
            }
          },
          "ServiceSpec" : {
            "title" : "ServiceSpec",
            "type" : "object",
            "discriminator" : "type",
            "properties" : {
              "artifacts" : {
                "$ref" : "#/definitions/pipeline/stages/cd/ArtifactListConfig"
              },
              "configFiles" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/stages/cd/ConfigFileWrapper"
                }
              },
              "manifests" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/ManifestConfigWrapper"
                }
              },
              "variables" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/common/NGVariable"
                }
              },
              "description" : {
                "desc" : "This is the description for ServiceSpec"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ArtifactListConfig" : {
            "title" : "ArtifactListConfig",
            "type" : "object",
            "properties" : {
              "primary" : {
                "$ref" : "#/definitions/pipeline/stages/cd/PrimaryArtifact"
              },
              "sidecars" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/stages/cd/SidecarArtifactWrapper"
                }
              },
              "description" : {
                "desc" : "This is the description for ArtifactListConfig"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "PrimaryArtifact" : {
            "title" : "PrimaryArtifact",
            "type" : "object",
            "properties" : {
              "primaryArtifactRef" : {
                "type" : "string"
              },
              "sources" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/stages/cd/ArtifactSource"
                }
              },
              "type" : {
                "type" : "string",
                "enum" : [ "DockerRegistry", "Gcr", "Ecr", "Nexus3Registry", "Nexus2Registry", "ArtifactoryRegistry", "CustomArtifact", "Acr", "Jenkins", "AmazonS3", "GoogleArtifactRegistry", "GithubPackageRegistry", "AzureArtifacts", "AmazonMachineImage", "Bamboo", "GoogleCloudStorage", "GoogleCloudSource" ]
              },
              "description" : {
                "desc" : "This is the description for PrimaryArtifact"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Acr"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/AcrArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AmazonMachineImage"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/AMIArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AmazonS3"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/AmazonS3ArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ArtifactoryRegistry"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/ArtifactoryRegistryArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AzureArtifacts"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/AzureArtifactsConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Bamboo"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/BambooArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "CustomArtifact"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/CustomArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "DockerRegistry"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/DockerHubArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Ecr"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/EcrArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Gcr"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/GcrArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "GithubPackageRegistry"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/GithubPackagesArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "GoogleArtifactRegistry"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/GoogleArtifactRegistryConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "GoogleCloudSource"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/GoogleCloudSourceArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "GoogleCloudStorage"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/GoogleCloudStorageArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Jenkins"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/JenkinsArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Nexus2Registry"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/Nexus2RegistryArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Nexus3Registry"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/NexusRegistryArtifactConfig"
                  }
                }
              }
            } ]
          },
          "ArtifactSource" : {
            "title" : "ArtifactSource",
            "type" : "object",
            "required" : [ "identifier" ],
            "properties" : {
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "metadata" : {
                "type" : "string"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "template" : {
                "$ref" : "#/definitions/pipeline/steps/custom/TemplateLinkConfig"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "DockerRegistry", "Gcr", "Ecr", "Nexus3Registry", "Nexus2Registry", "ArtifactoryRegistry", "CustomArtifact", "Acr", "Jenkins", "AmazonS3", "GoogleArtifactRegistry", "GithubPackageRegistry", "AzureArtifacts", "AmazonMachineImage", "Bamboo", "GoogleCloudStorage", "GoogleCloudSource" ]
              },
              "description" : {
                "desc" : "This is the description for ArtifactSource"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Acr"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/AcrArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AmazonMachineImage"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/AMIArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AmazonS3"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/AmazonS3ArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ArtifactoryRegistry"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/ArtifactoryRegistryArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AzureArtifacts"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/AzureArtifactsConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Bamboo"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/BambooArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "CustomArtifact"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/CustomArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "DockerRegistry"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/DockerHubArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Ecr"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/EcrArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Gcr"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/GcrArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "GithubPackageRegistry"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/GithubPackagesArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "GoogleArtifactRegistry"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/GoogleArtifactRegistryConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "GoogleCloudSource"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/GoogleCloudSourceArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "GoogleCloudStorage"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/GoogleCloudStorageArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Jenkins"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/JenkinsArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Nexus2Registry"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/Nexus2RegistryArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Nexus3Registry"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/NexusRegistryArtifactConfig"
                  }
                }
              }
            } ]
          },
          "AcrArtifactConfig" : {
            "title" : "AcrArtifactConfig",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/ArtifactConfig"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "registry", "repository", "subscriptionId" ],
              "properties" : {
                "connectorRef" : {
                  "type" : "string"
                },
                "digest" : {
                  "type" : "string"
                },
                "registry" : {
                  "type" : "string"
                },
                "repository" : {
                  "type" : "string"
                },
                "subscriptionId" : {
                  "type" : "string"
                },
                "tag" : {
                  "type" : "string"
                },
                "tagRegex" : {
                  "type" : "string"
                }
              }
            }, {
              "oneOf" : [ {
                "required" : [ "tagRegex" ]
              }, {
                "required" : [ "tag" ]
              } ]
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for AcrArtifactConfig"
              }
            }
          },
          "ArtifactConfig" : {
            "title" : "ArtifactConfig",
            "type" : "object",
            "discriminator" : "type",
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for ArtifactConfig"
              }
            }
          },
          "AMIArtifactConfig" : {
            "title" : "AMIArtifactConfig",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/ArtifactConfig"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "region" ],
              "properties" : {
                "connectorRef" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "filters" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/stages/cd/AMIFilter"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "region" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "tags" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/definitions/pipeline/stages/cd/AMITag"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "version" : {
                  "type" : "string"
                },
                "versionRegex" : {
                  "type" : "string"
                }
              }
            }, {
              "oneOf" : [ {
                "required" : [ "versionRegex" ]
              }, {
                "required" : [ "version" ]
              } ]
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for AMIArtifactConfig"
              }
            }
          },
          "AMIFilter" : {
            "title" : "AMIFilter",
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "value" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for AMIFilter"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "AMITag" : {
            "title" : "AMITag",
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "value" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for AMITag"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "AmazonS3ArtifactConfig" : {
            "title" : "AmazonS3ArtifactConfig",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/ArtifactConfig"
            }, {
              "type" : "object",
              "required" : [ "bucketName", "connectorRef" ],
              "properties" : {
                "bucketName" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "connectorRef" : {
                  "type" : "string"
                },
                "filePath" : {
                  "type" : "string"
                },
                "filePathRegex" : {
                  "type" : "string"
                },
                "region" : {
                  "type" : "string"
                }
              }
            }, {
              "oneOf" : [ {
                "required" : [ "filePath" ]
              }, {
                "required" : [ "filePathRegex" ]
              } ]
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for AmazonS3ArtifactConfig"
              }
            }
          },
          "ArtifactoryRegistryArtifactConfig" : {
            "title" : "ArtifactoryRegistryArtifactConfig",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/ArtifactConfig"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "repository", "repositoryFormat" ],
              "properties" : {
                "artifactDirectory" : {
                  "type" : "string"
                },
                "artifactPath" : {
                  "type" : "string"
                },
                "artifactPathFilter" : {
                  "type" : "string"
                },
                "connectorRef" : {
                  "type" : "string"
                },
                "digest" : {
                  "type" : "string"
                },
                "repository" : {
                  "type" : "string"
                },
                "repositoryFormat" : {
                  "type" : "string",
                  "enum" : [ "docker", "generic" ]
                },
                "repositoryUrl" : {
                  "type" : "string"
                },
                "tag" : {
                  "type" : "string"
                },
                "tagRegex" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for ArtifactoryRegistryArtifactConfig"
              }
            }
          },
          "AzureArtifactsConfig" : {
            "title" : "AzureArtifactsConfig",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/ArtifactConfig"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "feed", "package", "packageType", "scope" ],
              "properties" : {
                "connectorRef" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "feed" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "package" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "packageType" : {
                  "type" : "string",
                  "enum" : [ "maven", "nuget", "upack" ]
                },
                "project" : {
                  "type" : "string"
                },
                "scope" : {
                  "type" : "string",
                  "enum" : [ "project", "org" ]
                },
                "version" : {
                  "type" : "string"
                },
                "versionRegex" : {
                  "type" : "string"
                }
              }
            }, {
              "oneOf" : [ {
                "required" : [ "versionRegex" ]
              }, {
                "required" : [ "version" ]
              } ]
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for AzureArtifactsConfig"
              }
            }
          },
          "BambooArtifactConfig" : {
            "title" : "BambooArtifactConfig",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/ArtifactConfig"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "planKey" ],
              "properties" : {
                "artifactPaths" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "build" : {
                  "type" : "string"
                },
                "connectorRef" : {
                  "type" : "string"
                },
                "planKey" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for BambooArtifactConfig"
              }
            }
          },
          "CustomArtifactConfig" : {
            "title" : "CustomArtifactConfig",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/ArtifactConfig"
            }, {
              "type" : "object",
              "required" : [ "version" ],
              "properties" : {
                "delegateSelectors" : {
                  "oneOf" : [ {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }, {
                    "type" : "string",
                    "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                    "minLength" : 1
                  } ]
                },
                "inputs" : {
                  "type" : "array",
                  "items" : {
                    "oneOf" : [ {
                      "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                    }, {
                      "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                    } ]
                  }
                },
                "metadata" : {
                  "type" : "string"
                },
                "scripts" : {
                  "$ref" : "#/definitions/pipeline/stages/cd/CustomArtifactScripts"
                },
                "timeout" : {
                  "type" : "string",
                  "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+input>.*)|(.*<\\+.*>.*)|(^$))$"
                },
                "version" : {
                  "type" : "string"
                },
                "versionRegex" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for CustomArtifactConfig"
              }
            }
          },
          "CustomArtifactScripts" : {
            "title" : "CustomArtifactScripts",
            "type" : "object",
            "required" : [ "fetchAllArtifacts" ],
            "properties" : {
              "fetchAllArtifacts" : {
                "$ref" : "#/definitions/pipeline/stages/cd/FetchAllArtifacts"
              },
              "description" : {
                "desc" : "This is the description for CustomArtifactScripts"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "FetchAllArtifacts" : {
            "title" : "FetchAllArtifacts",
            "type" : "object",
            "required" : [ "spec" ],
            "properties" : {
              "artifactsArrayPath" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/cd/ParameterFieldString"
                }, {
                  "type" : "string"
                } ]
              },
              "attributes" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                  } ]
                }
              },
              "spec" : {
                "$ref" : "#/definitions/pipeline/stages/cd/CustomArtifactScriptInfo"
              },
              "versionPath" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/cd/ParameterFieldString"
                }, {
                  "type" : "string"
                } ]
              },
              "description" : {
                "desc" : "This is the description for FetchAllArtifacts"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "CustomArtifactScriptInfo" : {
            "title" : "CustomArtifactScriptInfo",
            "type" : "object",
            "required" : [ "shell", "source" ],
            "properties" : {
              "shell" : {
                "type" : "string",
                "enum" : [ "Bash", "PowerShell" ]
              },
              "source" : {
                "$ref" : "#/definitions/pipeline/stages/cd/CustomArtifactScriptSourceWrapper"
              },
              "description" : {
                "desc" : "This is the description for CustomArtifactScriptInfo"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "CustomArtifactScriptSourceWrapper" : {
            "title" : "CustomArtifactScriptSourceWrapper",
            "type" : "object",
            "required" : [ "spec", "type" ],
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for CustomArtifactScriptSourceWrapper"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Inline"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/CustomScriptInlineSource"
                  }
                }
              }
            } ]
          },
          "CustomScriptInlineSource" : {
            "title" : "CustomScriptInlineSource",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/CustomScriptBaseSource"
            }, {
              "type" : "object",
              "properties" : {
                "script" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for CustomScriptInlineSource"
              }
            }
          },
          "CustomScriptBaseSource" : {
            "title" : "CustomScriptBaseSource",
            "type" : "object",
            "discriminator" : "type",
            "properties" : {
              "type" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for CustomScriptBaseSource"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "DockerHubArtifactConfig" : {
            "title" : "DockerHubArtifactConfig",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/ArtifactConfig"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "imagePath" ],
              "properties" : {
                "connectorRef" : {
                  "type" : "string"
                },
                "digest" : {
                  "type" : "string"
                },
                "imagePath" : {
                  "type" : "string"
                },
                "tag" : {
                  "type" : "string"
                },
                "tagRegex" : {
                  "type" : "string"
                }
              }
            }, {
              "oneOf" : [ {
                "required" : [ "tagRegex" ]
              }, {
                "required" : [ "tag" ]
              } ]
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for DockerHubArtifactConfig"
              }
            }
          },
          "EcrArtifactConfig" : {
            "title" : "EcrArtifactConfig",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/ArtifactConfig"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "imagePath", "region" ],
              "properties" : {
                "connectorRef" : {
                  "type" : "string"
                },
                "digest" : {
                  "type" : "string"
                },
                "imagePath" : {
                  "type" : "string"
                },
                "metadata" : {
                  "type" : "string"
                },
                "region" : {
                  "type" : "string"
                },
                "registryId" : {
                  "type" : "string"
                },
                "tag" : {
                  "type" : "string"
                },
                "tagRegex" : {
                  "type" : "string"
                }
              }
            }, {
              "oneOf" : [ {
                "required" : [ "tagRegex" ]
              }, {
                "required" : [ "tag" ]
              } ]
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for EcrArtifactConfig"
              }
            }
          },
          "GcrArtifactConfig" : {
            "title" : "GcrArtifactConfig",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/ArtifactConfig"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "imagePath", "registryHostname" ],
              "properties" : {
                "connectorRef" : {
                  "type" : "string"
                },
                "digest" : {
                  "type" : "string"
                },
                "imagePath" : {
                  "type" : "string"
                },
                "registryHostname" : {
                  "type" : "string"
                },
                "tag" : {
                  "type" : "string"
                },
                "tagRegex" : {
                  "type" : "string"
                }
              }
            }, {
              "oneOf" : [ {
                "required" : [ "tagRegex" ]
              }, {
                "required" : [ "tag" ]
              } ]
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for GcrArtifactConfig"
              }
            }
          },
          "GithubPackagesArtifactConfig" : {
            "title" : "GithubPackagesArtifactConfig",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/ArtifactConfig"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "packageName", "packageType" ],
              "properties" : {
                "artifactId" : {
                  "type" : "string"
                },
                "connectorRef" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "digest" : {
                  "type" : "string"
                },
                "extension" : {
                  "type" : "string"
                },
                "groupId" : {
                  "type" : "string"
                },
                "org" : {
                  "type" : "string"
                },
                "packageName" : {
                  "type" : "string",
                  "minLength" : 1
                },
                "packageType" : {
                  "type" : "string",
                  "enum" : [ "npm", "maven", "rubygems", "nuget", "container" ]
                },
                "user" : {
                  "type" : "string"
                },
                "version" : {
                  "type" : "string"
                },
                "versionRegex" : {
                  "type" : "string"
                }
              }
            }, {
              "oneOf" : [ {
                "required" : [ "versionRegex" ]
              }, {
                "required" : [ "version" ]
              } ]
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for GithubPackagesArtifactConfig"
              }
            }
          },
          "GoogleArtifactRegistryConfig" : {
            "title" : "GoogleArtifactRegistryConfig",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/ArtifactConfig"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "package", "project", "region", "repositoryName", "repositoryType" ],
              "properties" : {
                "connectorRef" : {
                  "type" : "string"
                },
                "digest" : {
                  "type" : "string"
                },
                "metadata" : {
                  "type" : "string"
                },
                "package" : {
                  "type" : "string"
                },
                "project" : {
                  "type" : "string"
                },
                "region" : {
                  "type" : "string"
                },
                "repositoryName" : {
                  "type" : "string"
                },
                "repositoryType" : {
                  "type" : "string",
                  "enum" : [ "docker" ]
                },
                "version" : {
                  "type" : "string"
                },
                "versionRegex" : {
                  "type" : "string"
                }
              }
            }, {
              "oneOf" : [ {
                "required" : [ "versionRegex" ]
              }, {
                "required" : [ "version" ]
              } ]
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for GoogleArtifactRegistryConfig"
              }
            }
          },
          "GoogleCloudSourceArtifactConfig" : {
            "title" : "GoogleCloudSourceArtifactConfig",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/ArtifactConfig"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "fetchType", "project", "repository", "sourceDirectory" ],
              "properties" : {
                "branch" : {
                  "type" : "string"
                },
                "commitId" : {
                  "type" : "string"
                },
                "connectorRef" : {
                  "type" : "string"
                },
                "fetchType" : {
                  "type" : "string",
                  "enum" : [ "Branch", "Commit", "Tag" ]
                },
                "project" : {
                  "type" : "string"
                },
                "repository" : {
                  "type" : "string"
                },
                "sourceDirectory" : {
                  "type" : "string"
                },
                "tag" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for GoogleCloudSourceArtifactConfig"
              }
            }
          },
          "GoogleCloudStorageArtifactConfig" : {
            "title" : "GoogleCloudStorageArtifactConfig",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/ArtifactConfig"
            }, {
              "type" : "object",
              "required" : [ "artifactPath", "bucket", "connectorRef", "project" ],
              "properties" : {
                "artifactPath" : {
                  "type" : "string"
                },
                "bucket" : {
                  "type" : "string"
                },
                "connectorRef" : {
                  "type" : "string"
                },
                "project" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for GoogleCloudStorageArtifactConfig"
              }
            }
          },
          "JenkinsArtifactConfig" : {
            "title" : "JenkinsArtifactConfig",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/ArtifactConfig"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "jobName" ],
              "properties" : {
                "artifactPath" : {
                  "type" : "string"
                },
                "build" : {
                  "type" : "string"
                },
                "connectorRef" : {
                  "type" : "string"
                },
                "jobName" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for JenkinsArtifactConfig"
              }
            }
          },
          "Nexus2RegistryArtifactConfig" : {
            "title" : "Nexus2RegistryArtifactConfig",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/ArtifactConfig"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "repository", "repositoryFormat" ],
              "properties" : {
                "connectorRef" : {
                  "type" : "string"
                },
                "metadata" : {
                  "type" : "string"
                },
                "repository" : {
                  "type" : "string"
                },
                "repositoryFormat" : {
                  "type" : "string",
                  "enum" : [ "maven", "npm", "nuget" ]
                },
                "tag" : {
                  "type" : "string"
                },
                "tagRegex" : {
                  "type" : "string"
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "repositoryFormat" : {
                    "const" : "docker"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/NexusRegistryDockerConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "repositoryFormat" : {
                    "const" : "maven"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/NexusRegistryMavenConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "repositoryFormat" : {
                    "const" : "npm"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/NexusRegistryNpmConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "repositoryFormat" : {
                    "const" : "nuget"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/NexusRegistryNugetConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "repositoryFormat" : {
                    "const" : "raw"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/NexusRegistryRawConfig"
                  }
                }
              }
            }, {
              "oneOf" : [ {
                "required" : [ "tagRegex" ]
              }, {
                "required" : [ "tag" ]
              } ]
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for Nexus2RegistryArtifactConfig"
              }
            }
          },
          "NexusRegistryDockerConfig" : {
            "title" : "NexusRegistryDockerConfig",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/NexusRegistryConfigSpec"
            }, {
              "type" : "object",
              "required" : [ "artifactPath" ],
              "properties" : {
                "artifactPath" : {
                  "type" : "string"
                },
                "repositoryPort" : {
                  "oneOf" : [ {
                    "type" : "string"
                  }, {
                    "type" : "integer"
                  } ]
                },
                "repositoryUrl" : {
                  "type" : "string"
                }
              }
            }, {
              "oneOf" : [ {
                "required" : [ "repositoryPort" ]
              }, {
                "required" : [ "repositoryUrl" ]
              } ]
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for NexusRegistryDockerConfig"
              }
            }
          },
          "NexusRegistryConfigSpec" : {
            "title" : "NexusRegistryConfigSpec",
            "type" : "object",
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for NexusRegistryConfigSpec"
              }
            }
          },
          "NexusRegistryMavenConfig" : {
            "title" : "NexusRegistryMavenConfig",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/NexusRegistryConfigSpec"
            }, {
              "type" : "object",
              "required" : [ "artifactId", "groupId" ],
              "properties" : {
                "artifactId" : {
                  "type" : "string"
                },
                "classifier" : {
                  "type" : "string"
                },
                "extension" : {
                  "type" : "string"
                },
                "groupId" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for NexusRegistryMavenConfig"
              }
            }
          },
          "NexusRegistryNpmConfig" : {
            "title" : "NexusRegistryNpmConfig",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/NexusRegistryConfigSpec"
            }, {
              "type" : "object",
              "required" : [ "packageName" ],
              "properties" : {
                "packageName" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for NexusRegistryNpmConfig"
              }
            }
          },
          "NexusRegistryNugetConfig" : {
            "title" : "NexusRegistryNugetConfig",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/NexusRegistryConfigSpec"
            }, {
              "type" : "object",
              "required" : [ "packageName" ],
              "properties" : {
                "packageName" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for NexusRegistryNugetConfig"
              }
            }
          },
          "NexusRegistryRawConfig" : {
            "title" : "NexusRegistryRawConfig",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/NexusRegistryConfigSpec"
            }, {
              "type" : "object",
              "required" : [ "group" ],
              "properties" : {
                "group" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for NexusRegistryRawConfig"
              }
            }
          },
          "NexusRegistryArtifactConfig" : {
            "title" : "NexusRegistryArtifactConfig",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/ArtifactConfig"
            }, {
              "type" : "object",
              "required" : [ "connectorRef", "repository", "repositoryFormat" ],
              "properties" : {
                "artifactPath" : {
                  "type" : "string"
                },
                "connectorRef" : {
                  "type" : "string"
                },
                "digest" : {
                  "type" : "string"
                },
                "metadata" : {
                  "type" : "string"
                },
                "repository" : {
                  "type" : "string"
                },
                "repositoryFormat" : {
                  "type" : "string",
                  "enum" : [ "docker", "maven", "npm", "nuget", "raw" ]
                },
                "repositoryPort" : {
                  "oneOf" : [ {
                    "type" : "string"
                  }, {
                    "type" : "integer"
                  } ]
                },
                "repositoryUrl" : {
                  "type" : "string"
                },
                "tag" : {
                  "type" : "string"
                },
                "tagRegex" : {
                  "type" : "string"
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "repositoryFormat" : {
                    "const" : "docker"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/NexusRegistryDockerConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "repositoryFormat" : {
                    "const" : "maven"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/NexusRegistryMavenConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "repositoryFormat" : {
                    "const" : "npm"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/NexusRegistryNpmConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "repositoryFormat" : {
                    "const" : "nuget"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/NexusRegistryNugetConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "repositoryFormat" : {
                    "const" : "raw"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/NexusRegistryRawConfig"
                  }
                }
              }
            }, {
              "oneOf" : [ {
                "required" : [ "tagRegex" ]
              }, {
                "required" : [ "tag" ]
              } ]
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for NexusRegistryArtifactConfig"
              }
            }
          },
          "SidecarArtifactWrapper" : {
            "title" : "SidecarArtifactWrapper",
            "type" : "object",
            "properties" : {
              "sidecar" : {
                "$ref" : "#/definitions/pipeline/stages/cd/SidecarArtifact"
              },
              "description" : {
                "desc" : "This is the description for SidecarArtifactWrapper"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "SidecarArtifact" : {
            "title" : "SidecarArtifact",
            "type" : "object",
            "required" : [ "identifier" ],
            "properties" : {
              "identifier" : {
                "type" : "string"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "template" : {
                "$ref" : "#/definitions/pipeline/steps/custom/TemplateLinkConfig"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "DockerRegistry", "Gcr", "Ecr", "Nexus3Registry", "Nexus2Registry", "ArtifactoryRegistry", "CustomArtifact", "Acr", "Jenkins", "AmazonS3", "GoogleArtifactRegistry", "GithubPackageRegistry", "AzureArtifacts", "AmazonMachineImage", "Bamboo", "GoogleCloudStorage", "GoogleCloudSource" ]
              },
              "description" : {
                "desc" : "This is the description for SidecarArtifact"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Acr"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/AcrArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AmazonMachineImage"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/AMIArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AmazonS3"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/AmazonS3ArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ArtifactoryRegistry"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/ArtifactoryRegistryArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AzureArtifacts"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/AzureArtifactsConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Bamboo"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/BambooArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "CustomArtifact"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/CustomArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "DockerRegistry"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/DockerHubArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Ecr"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/EcrArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Gcr"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/GcrArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "GithubPackageRegistry"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/GithubPackagesArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "GoogleArtifactRegistry"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/GoogleArtifactRegistryConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "GoogleCloudSource"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/GoogleCloudSourceArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "GoogleCloudStorage"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/GoogleCloudStorageArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Jenkins"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/JenkinsArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Nexus2Registry"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/Nexus2RegistryArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Nexus3Registry"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/NexusRegistryArtifactConfig"
                  }
                }
              }
            }, {
              "oneOf" : [ {
                "required" : [ "template" ]
              }, {
                "required" : [ "spec" ]
              } ]
            } ]
          },
          "ConfigFileWrapper" : {
            "title" : "ConfigFileWrapper",
            "type" : "object",
            "properties" : {
              "configFile" : {
                "$ref" : "#/definitions/pipeline/stages/cd/ConfigFile"
              },
              "description" : {
                "desc" : "This is the description for ConfigFileWrapper"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ConfigFile" : {
            "title" : "ConfigFile",
            "type" : "object",
            "required" : [ "identifier", "spec" ],
            "properties" : {
              "identifier" : {
                "type" : "string"
              },
              "spec" : {
                "$ref" : "#/definitions/pipeline/stages/cd/ConfigFileAttributes"
              },
              "description" : {
                "desc" : "This is the description for ConfigFile"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ConfigFileAttributes" : {
            "title" : "ConfigFileAttributes",
            "type" : "object",
            "required" : [ "store" ],
            "properties" : {
              "configFileAttributeStepParameters" : {
                "$ref" : "#/definitions/pipeline/stages/cd/ConfigFileAttributeStepParameters"
              },
              "store" : {
                "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
              },
              "description" : {
                "desc" : "This is the description for ConfigFileAttributes"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ConfigFileAttributeStepParameters" : {
            "title" : "ConfigFileAttributeStepParameters",
            "type" : "object",
            "properties" : {
              "store" : {
                "$ref" : "#/definitions/pipeline/stages/cd/StoreConfigWrapperParameters"
              },
              "description" : {
                "desc" : "This is the description for ConfigFileAttributeStepParameters"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "StoreConfigWrapperParameters" : {
            "title" : "StoreConfigWrapperParameters",
            "type" : "object",
            "properties" : {
              "spec" : {
                "$ref" : "#/definitions/pipeline/steps/cd/StoreConfig"
              },
              "type" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for StoreConfigWrapperParameters"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "AsgServiceSpec" : {
            "title" : "AsgServiceSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/ServiceSpec"
            }, {
              "type" : "object",
              "properties" : {
                "userData" : {
                  "$ref" : "#/definitions/pipeline/stages/cd/UserDataConfiguration"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for AsgServiceSpec"
              }
            }
          },
          "UserDataConfiguration" : {
            "title" : "UserDataConfiguration",
            "type" : "object",
            "required" : [ "store" ],
            "properties" : {
              "metadata" : {
                "type" : "string"
              },
              "store" : {
                "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
              },
              "description" : {
                "desc" : "This is the description for UserDataConfiguration"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "AwsLambdaServiceSpec" : {
            "title" : "AwsLambdaServiceSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/ServiceSpec"
            }, {
              "type" : "object",
              "properties" : { }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for AwsLambdaServiceSpec"
              }
            }
          },
          "AzureWebAppServiceSpec" : {
            "title" : "AzureWebAppServiceSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/ServiceSpec"
            }, {
              "type" : "object",
              "properties" : {
                "applicationSettings" : {
                  "$ref" : "#/definitions/pipeline/stages/cd/ApplicationSettingsConfiguration"
                },
                "connectionStrings" : {
                  "$ref" : "#/definitions/pipeline/stages/cd/ConnectionStringsConfiguration"
                },
                "startupCommand" : {
                  "$ref" : "#/definitions/pipeline/stages/cd/StartupCommandConfiguration"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for AzureWebAppServiceSpec"
              }
            }
          },
          "ApplicationSettingsConfiguration" : {
            "title" : "ApplicationSettingsConfiguration",
            "type" : "object",
            "required" : [ "store" ],
            "properties" : {
              "metadata" : {
                "type" : "string"
              },
              "store" : {
                "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
              },
              "description" : {
                "desc" : "This is the description for ApplicationSettingsConfiguration"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ConnectionStringsConfiguration" : {
            "title" : "ConnectionStringsConfiguration",
            "type" : "object",
            "required" : [ "store" ],
            "properties" : {
              "metadata" : {
                "type" : "string"
              },
              "store" : {
                "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
              },
              "description" : {
                "desc" : "This is the description for ConnectionStringsConfiguration"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "StartupCommandConfiguration" : {
            "title" : "StartupCommandConfiguration",
            "type" : "object",
            "required" : [ "store" ],
            "properties" : {
              "metadata" : {
                "type" : "string"
              },
              "store" : {
                "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
              },
              "description" : {
                "desc" : "This is the description for StartupCommandConfiguration"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "CustomDeploymentServiceSpec" : {
            "title" : "CustomDeploymentServiceSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/ServiceSpec"
            }, {
              "type" : "object",
              "required" : [ "customDeploymentRef" ],
              "properties" : {
                "customDeploymentRef" : {
                  "minLength" : 1,
                  "$ref" : "#/definitions/pipeline/stages/cd/StepTemplateRef"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for CustomDeploymentServiceSpec"
              }
            }
          },
          "EcsServiceSpec" : {
            "title" : "EcsServiceSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/ServiceSpec"
            }, {
              "type" : "object",
              "properties" : {
                "ecsTaskDefinitionArn" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for EcsServiceSpec"
              }
            }
          },
          "ElastigroupServiceSpec" : {
            "title" : "ElastigroupServiceSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/ServiceSpec"
            }, {
              "type" : "object",
              "properties" : {
                "startupScript" : {
                  "$ref" : "#/definitions/pipeline/stages/cd/StartupScriptConfiguration"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for ElastigroupServiceSpec"
              }
            }
          },
          "StartupScriptConfiguration" : {
            "title" : "StartupScriptConfiguration",
            "type" : "object",
            "required" : [ "store" ],
            "properties" : {
              "metadata" : {
                "type" : "string"
              },
              "store" : {
                "$ref" : "#/definitions/pipeline/steps/cd/StoreConfigWrapper"
              },
              "description" : {
                "desc" : "This is the description for StartupScriptConfiguration"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "GoogleCloudFunctionsServiceSpec" : {
            "title" : "GoogleCloudFunctionsServiceSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/ServiceSpec"
            }, {
              "type" : "object",
              "properties" : {
                "environmentType" : {
                  "type" : "string"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for GoogleCloudFunctionsServiceSpec"
              }
            }
          },
          "KubernetesServiceSpec" : {
            "title" : "KubernetesServiceSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/ServiceSpec"
            }, {
              "type" : "object",
              "properties" : {
                "hooks" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/ServiceHookWrapper"
                  }
                },
                "manifestConfigurations" : {
                  "$ref" : "#/definitions/pipeline/stages/cd/ManifestConfigurations"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for KubernetesServiceSpec"
              }
            }
          },
          "ServiceHookWrapper" : {
            "title" : "ServiceHookWrapper",
            "type" : "object",
            "properties" : {
              "postHook" : {
                "$ref" : "#/definitions/pipeline/stages/cd/ServiceHook"
              },
              "preHook" : {
                "$ref" : "#/definitions/pipeline/stages/cd/ServiceHook"
              },
              "description" : {
                "desc" : "This is the description for ServiceHookWrapper"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "oneOf" : [ {
                "required" : [ "preHook" ]
              }, {
                "required" : [ "postHook" ]
              } ]
            } ]
          },
          "ServiceHook" : {
            "title" : "ServiceHook",
            "type" : "object",
            "required" : [ "identifier", "store", "storeType" ],
            "properties" : {
              "actions" : {
                "type" : "array",
                "items" : {
                  "type" : "string",
                  "enum" : [ "FetchFiles", "TemplateManifest", "SteadyStateCheck" ]
                }
              },
              "identifier" : {
                "type" : "string"
              },
              "storeType" : {
                "type" : "string",
                "enum" : [ "Inline" ]
              },
              "description" : {
                "desc" : "This is the description for ServiceHook"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "storeType" : {
                    "const" : "Artifactory"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "store" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/ArtifactoryStoreConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "storeType" : {
                    "const" : "AzureRepo"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "store" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureRepoStore"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "storeType" : {
                    "const" : "Bitbucket"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "store" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/BitbucketStore"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "storeType" : {
                    "const" : "CustomRemote"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "store" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/CustomRemoteStoreConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "storeType" : {
                    "const" : "Gcs"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "store" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/GcsStoreConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "storeType" : {
                    "const" : "Git"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "store" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/GitStore"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "storeType" : {
                    "const" : "GitLab"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "store" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/GitLabStore"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "storeType" : {
                    "const" : "Github"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "store" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/GithubStore"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "storeType" : {
                    "const" : "Harness"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "store" : {
                    "$ref" : "#/definitions/pipeline/steps/custom/HarnessStore"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "storeType" : {
                    "const" : "Http"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "store" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/HttpStoreConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "storeType" : {
                    "const" : "InheritFromManifest"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "store" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/InheritFromManifestStoreConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "storeType" : {
                    "const" : "Inline"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "store" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/InlineStoreConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "storeType" : {
                    "const" : "OciHelmChart"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "store" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/OciHelmChartConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "storeType" : {
                    "const" : "S3"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "store" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/S3StoreConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "storeType" : {
                    "const" : "S3Url"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "store" : {
                    "$ref" : "#/definitions/pipeline/steps/cd/S3UrlStoreConfig"
                  }
                }
              }
            } ]
          },
          "ManifestConfigurations" : {
            "title" : "ManifestConfigurations",
            "type" : "object",
            "properties" : {
              "primaryManifestRef" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for ManifestConfigurations"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "NativeHelmServiceSpec" : {
            "title" : "NativeHelmServiceSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/ServiceSpec"
            }, {
              "type" : "object",
              "properties" : {
                "hooks" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/ServiceHookWrapper"
                  }
                },
                "manifestConfigurations" : {
                  "$ref" : "#/definitions/pipeline/stages/cd/ManifestConfigurations"
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for NativeHelmServiceSpec"
              }
            }
          },
          "ServerlessAwsLambdaServiceSpec" : {
            "title" : "ServerlessAwsLambdaServiceSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/ServiceSpec"
            }, {
              "type" : "object",
              "properties" : { }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for ServerlessAwsLambdaServiceSpec"
              }
            }
          },
          "SshServiceSpec" : {
            "title" : "SshServiceSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/ServiceSpec"
            }, {
              "type" : "object",
              "properties" : { }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for SshServiceSpec"
              }
            }
          },
          "TanzuApplicationServiceSpec" : {
            "title" : "TanzuApplicationServiceSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/ServiceSpec"
            }, {
              "type" : "object",
              "properties" : { }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for TanzuApplicationServiceSpec"
              }
            }
          },
          "WinRmServiceSpec" : {
            "title" : "WinRmServiceSpec",
            "allOf" : [ {
              "$ref" : "#/definitions/pipeline/stages/cd/ServiceSpec"
            }, {
              "type" : "object",
              "properties" : {
                "artifactOverrideSets" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/ArtifactOverrideSetWrapper"
                  }
                },
                "configFileOverrideSets" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/ConfigFileOverrideSetWrapper"
                  }
                },
                "manifestOverrideSets" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/ManifestOverrideSetWrapper"
                  }
                },
                "variableOverrideSets" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/NGVariableOverrideSetWrapper"
                  }
                }
              }
            } ],
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for WinRmServiceSpec"
              }
            }
          },
          "ArtifactOverrideSetWrapper" : {
            "title" : "ArtifactOverrideSetWrapper",
            "type" : "object",
            "properties" : {
              "overrideSet" : {
                "$ref" : "#/definitions/pipeline/stages/cd/ArtifactOverrideSets"
              },
              "description" : {
                "desc" : "This is the description for ArtifactOverrideSetWrapper"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ArtifactOverrideSets" : {
            "title" : "ArtifactOverrideSets",
            "type" : "object",
            "properties" : {
              "artifacts" : {
                "$ref" : "#/definitions/pipeline/stages/cd/ArtifactListConfig"
              },
              "identifier" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for ArtifactOverrideSets"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ConfigFileOverrideSetWrapper" : {
            "title" : "ConfigFileOverrideSetWrapper",
            "type" : "object",
            "properties" : {
              "overrideSet" : {
                "$ref" : "#/definitions/pipeline/stages/cd/ConfigFileOverrideSets"
              },
              "description" : {
                "desc" : "This is the description for ConfigFileOverrideSetWrapper"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ConfigFileOverrideSets" : {
            "title" : "ConfigFileOverrideSets",
            "type" : "object",
            "properties" : {
              "configFiles" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/stages/cd/ConfigFileWrapper"
                }
              },
              "identifier" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for ConfigFileOverrideSets"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ManifestOverrideSetWrapper" : {
            "title" : "ManifestOverrideSetWrapper",
            "type" : "object",
            "properties" : {
              "overrideSet" : {
                "$ref" : "#/definitions/pipeline/stages/cd/ManifestOverrideSets"
              },
              "description" : {
                "desc" : "This is the description for ManifestOverrideSetWrapper"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ManifestOverrideSets" : {
            "title" : "ManifestOverrideSets",
            "type" : "object",
            "properties" : {
              "identifier" : {
                "type" : "string"
              },
              "manifests" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/ManifestConfigWrapper"
                }
              },
              "description" : {
                "desc" : "This is the description for ManifestOverrideSets"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "NGVariableOverrideSetWrapper" : {
            "title" : "NGVariableOverrideSetWrapper",
            "type" : "object",
            "properties" : {
              "overrideSet" : {
                "$ref" : "#/definitions/pipeline/stages/cd/NGVariableOverrideSets"
              },
              "description" : {
                "desc" : "This is the description for NGVariableOverrideSetWrapper"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "NGVariableOverrideSets" : {
            "title" : "NGVariableOverrideSets",
            "type" : "object",
            "properties" : {
              "identifier" : {
                "type" : "string"
              },
              "variables" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                  } ]
                }
              },
              "description" : {
                "desc" : "This is the description for NGVariableOverrideSets"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "StageOverridesConfig" : {
            "title" : "StageOverridesConfig",
            "type" : "object",
            "properties" : {
              "artifacts" : {
                "$ref" : "#/definitions/pipeline/stages/cd/ArtifactListConfig"
              },
              "configFiles" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/stages/cd/ConfigFileWrapper"
                }
              },
              "manifests" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/steps/cd/ManifestConfigWrapper"
                }
              },
              "variables" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                  } ]
                }
              },
              "description" : {
                "desc" : "This is the description for StageOverridesConfig"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ServiceUseFromStage" : {
            "title" : "ServiceUseFromStage",
            "type" : "object",
            "required" : [ "stage" ],
            "properties" : {
              "metadata" : {
                "type" : "string"
              },
              "overrides" : {
                "$ref" : "#/definitions/pipeline/stages/cd/ServiceOverrides"
              },
              "stage" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for ServiceUseFromStage"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ServiceOverrides" : {
            "title" : "ServiceOverrides",
            "type" : "object",
            "properties" : {
              "description" : {
                "type" : "string",
                "desc" : "This is the description for ServiceOverrides"
              },
              "name" : {
                "type" : "string"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ServicesYaml" : {
            "title" : "ServicesYaml",
            "type" : "object",
            "properties" : {
              "metadata" : {
                "readOnly" : true,
                "$ref" : "#/definitions/pipeline/stages/cd/ServicesMetadata"
              },
              "values" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/ServiceYamlV2"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for ServicesYaml"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ServicesMetadata" : {
            "title" : "ServicesMetadata",
            "type" : "object",
            "properties" : {
              "parallel" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string"
                } ]
              },
              "description" : {
                "desc" : "This is the description for ServicesMetadata"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ArtifactSource_template" : {
            "title" : "ArtifactSource_template",
            "type" : "object",
            "required" : [ ],
            "properties" : {
              "metadata" : {
                "type" : "string"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "DockerRegistry", "Gcr", "Ecr", "Nexus3Registry", "Nexus2Registry", "ArtifactoryRegistry", "CustomArtifact", "Acr", "Jenkins", "AmazonS3", "GoogleArtifactRegistry", "GithubPackageRegistry", "AzureArtifacts", "AmazonMachineImage", "Bamboo", "GoogleCloudStorage", "GoogleCloudSource" ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Acr"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/AcrArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AmazonMachineImage"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/AMIArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AmazonS3"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/AmazonS3ArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "ArtifactoryRegistry"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/ArtifactoryRegistryArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "AzureArtifacts"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/AzureArtifactsConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Bamboo"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/BambooArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "CustomArtifact"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/CustomArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "DockerRegistry"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/DockerHubArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Ecr"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/EcrArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Gcr"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/GcrArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "GithubPackageRegistry"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/GithubPackagesArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "GoogleArtifactRegistry"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/GoogleArtifactRegistryConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "GoogleCloudSource"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/GoogleCloudSourceArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "GoogleCloudStorage"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/GoogleCloudStorageArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Jenkins"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/JenkinsArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Nexus2Registry"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/Nexus2RegistryArtifactConfig"
                  }
                }
              }
            }, {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Nexus3Registry"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cd/NexusRegistryArtifactConfig"
                  }
                }
              }
            } ]
          }
        },
        "iacm" : {
          "IACMStageNode" : {
            "title" : "IACMStageNode",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "type" : "string",
                "desc" : "This is the description for IACMStageNode"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "tags" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              },
              "type" : {
                "type" : "string",
                "enum" : [ "IACM" ]
              },
              "variables" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                  } ]
                }
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/custom/StageWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "IACM"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/iacm/IACMStageConfigImpl"
                  }
                }
              }
            } ]
          },
          "IACMStageConfigImpl" : {
            "title" : "IACMStageConfigImpl",
            "type" : "object",
            "required" : [ "workspace" ],
            "properties" : {
              "cloneCodebase" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "execution" : {
                "$ref" : "#/definitions/pipeline/stages/iacm/ExecutionElementConfig"
              },
              "infrastructure" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/common/DockerInfraYaml"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/HostedVmInfraYaml"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/K8sDirectInfraYaml"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/UseFromStageInfraYaml"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/VmInfraYaml"
                } ]
              },
              "platform" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/common/Platform"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "runtime" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/common/CloudRuntime"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/DockerRuntime"
                } ]
              },
              "serviceDependencies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/common/DependencyElement"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "sharedPaths" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string"
                } ]
              },
              "workspace" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for IACMStageConfigImpl"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ExecutionElementConfig" : {
            "title" : "ExecutionElementConfig",
            "type" : "object",
            "required" : [ "steps" ],
            "properties" : {
              "steps" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/stages/iacm/ExecutionWrapperConfig"
                },
                "maxItems" : 256,
                "minItems" : 1
              },
              "description" : {
                "desc" : "This is the description for ExecutionElementConfig"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ExecutionWrapperConfig" : {
            "title" : "ExecutionWrapperConfig",
            "type" : "object",
            "properties" : {
              "parallel" : {
                "$ref" : "#/definitions/pipeline/stages/iacm/ParallelStepElementConfig"
              },
              "step" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepElementConfig"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/RunStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/PluginStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/ActionStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/iacm/IACMTerraformPluginStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/iacm/IACMApprovalStepNode"
                } ]
              },
              "description" : {
                "desc" : "This is the description for ExecutionWrapperConfig"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ParallelStepElementConfig" : {
            "title" : "ParallelStepElementConfig",
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/pipeline/stages/iacm/ExecutionWrapperConfig"
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for ParallelStepElementConfig"
              }
            }
          }
        },
        "security" : {
          "SecurityStageNode" : {
            "title" : "SecurityStageNode",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "type" : "string",
                "desc" : "This is the description for SecurityStageNode"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "tags" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              },
              "type" : {
                "type" : "string",
                "enum" : [ "SecurityTests" ]
              },
              "variables" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                  } ]
                }
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/custom/StageWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "SecurityTests"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/security/SecurityStageConfigImpl"
                  }
                }
              }
            } ]
          },
          "SecurityStageConfigImpl" : {
            "title" : "SecurityStageConfigImpl",
            "type" : "object",
            "properties" : {
              "cloneCodebase" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "execution" : {
                "$ref" : "#/definitions/pipeline/stages/security/ExecutionElementConfig"
              },
              "infrastructure" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/common/DockerInfraYaml"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/HostedVmInfraYaml"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/K8sDirectInfraYaml"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/UseFromStageInfraYaml"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/VmInfraYaml"
                } ]
              },
              "platform" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/common/Platform"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "runtime" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/common/CloudRuntime"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/DockerRuntime"
                } ]
              },
              "serviceDependencies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/common/DependencyElement"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "sharedPaths" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string"
                } ]
              },
              "description" : {
                "desc" : "This is the description for SecurityStageConfigImpl"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ExecutionElementConfig" : {
            "title" : "ExecutionElementConfig",
            "type" : "object",
            "required" : [ "steps" ],
            "properties" : {
              "steps" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/stages/security/ExecutionWrapperConfig"
                },
                "maxItems" : 256,
                "minItems" : 1
              },
              "description" : {
                "desc" : "This is the description for ExecutionElementConfig"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ExecutionWrapperConfig" : {
            "title" : "ExecutionWrapperConfig",
            "type" : "object",
            "properties" : {
              "parallel" : {
                "$ref" : "#/definitions/pipeline/stages/security/ParallelStepElementConfig"
              },
              "step" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepElementConfig"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/AquaTrivyScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/AwsEcrScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/AwsSecurityHubScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/BackgroundStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/BanditScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/BlackDuckScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/BrakemanScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/BurpScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/CheckmarxScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/ClairScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/CodeqlScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/CoverityScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/CustomIngestScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/DataTheoremScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/DockerContentTrustScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/FortifyOnDemandScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/FossaScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/GitleaksScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/GrypeScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/JfrogXrayScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/MendScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/MetasploitScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/NessusScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/NexusIQScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/NiktoScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/NmapScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/OpenvasScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/OwaspScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/PluginStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/PrismaCloudScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/ProwlerScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/QualysScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/ReapsawScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/RunStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/SecurityNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/SemgrepScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/ShiftLeftScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/SniperScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/SnykScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/SonarqubeScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/SysdigScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/TenableScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/VeracodeScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/ZapScanNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/PolicyStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/TemplateStepNode"
                } ]
              },
              "description" : {
                "desc" : "This is the description for ExecutionWrapperConfig"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ParallelStepElementConfig" : {
            "title" : "ParallelStepElementConfig",
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/pipeline/stages/security/ExecutionWrapperConfig"
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for ParallelStepElementConfig"
              }
            }
          }
        },
        "approval" : {
          "ApprovalStageNode" : {
            "title" : "ApprovalStageNode",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "type" : "string",
                "desc" : "This is the description for ApprovalStageNode"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "tags" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Approval" ]
              },
              "variables" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                  } ]
                }
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/custom/StageWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Approval"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/approval/ApprovalStageConfig"
                  }
                }
              }
            } ]
          },
          "ApprovalStageConfig" : {
            "title" : "ApprovalStageConfig",
            "type" : "object",
            "required" : [ "execution" ],
            "properties" : {
              "execution" : {
                "$ref" : "#/definitions/pipeline/stages/approval/ExecutionElementConfig"
              },
              "description" : {
                "desc" : "This is the description for ApprovalStageConfig"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ExecutionElementConfig" : {
            "title" : "ExecutionElementConfig",
            "type" : "object",
            "required" : [ "steps" ],
            "properties" : {
              "steps" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/stages/approval/ExecutionWrapperConfig"
                },
                "maxItems" : 256,
                "minItems" : 1
              },
              "description" : {
                "desc" : "This is the description for ExecutionElementConfig"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ExecutionWrapperConfig" : {
            "title" : "ExecutionWrapperConfig",
            "type" : "object",
            "properties" : {
              "parallel" : {
                "$ref" : "#/definitions/pipeline/stages/approval/ParallelStepElementConfig"
              },
              "step" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepElementConfig"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/BarrierStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/WaitStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowApprovalStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/stages/template/TemplateStageNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/HarnessApprovalStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowUpdateStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/HttpStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/FlagConfigurationStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/EmailStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/QueueStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowCreateStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/ShellScriptStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/CdSscaEnforcementStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/JiraCreateStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/CdSscaOrchestrationStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/JiraUpdateStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/ContainerStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/JiraApprovalStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/CustomApprovalStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowImportSetStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/PolicyStepNode"
                } ]
              },
              "stepGroup" : {
                "$ref" : "#/definitions/pipeline/stages/approval/StepGroupElementConfig"
              },
              "description" : {
                "desc" : "This is the description for ExecutionWrapperConfig"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ParallelStepElementConfig" : {
            "title" : "ParallelStepElementConfig",
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/pipeline/stages/approval/ExecutionWrapperConfig"
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for ParallelStepElementConfig"
              }
            }
          },
          "StepGroupElementConfig" : {
            "title" : "StepGroupElementConfig",
            "type" : "object",
            "required" : [ "identifier", "name" ],
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "sharedPaths" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "stepGroupInfra" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/K8sDirectInfra"
                } ]
              },
              "steps" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/stages/approval/ExecutionWrapperConfig"
                },
                "maxItems" : 256,
                "minItems" : 1
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "template" : {
                "$ref" : "#/definitions/pipeline/steps/custom/TemplateLinkConfig"
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for StepGroupElementConfig"
              },
              "variables" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                  } ]
                }
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "oneOf" : [ {
                "required" : [ "template" ]
              }, {
                "required" : [ "steps" ]
              } ]
            } ]
          }
        },
        "template" : {
          "TemplateStageNode" : {
            "title" : "TemplateStageNode",
            "type" : "object",
            "required" : [ "type", "spec" ],
            "properties" : {
              "desc" : {
                "type" : "string",
                "desc" : "This is the description for TemplateStageNode"
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "template" ]
              },
              "spec" : {
                "$ref" : "#/definitions/pipeline/TemplateLinkConfigSpec"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "template"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/TemplateLinkConfigSpec"
                  }
                }
              }
            } ]
          }
        },
        "custom" : {
          "PipelineStageNode" : {
            "title" : "PipelineStageNode",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "type" : "string",
                "desc" : "This is the description for PipelineStageNode"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "tags" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              },
              "type" : {
                "type" : "string",
                "enum" : [ "Pipeline" ]
              },
              "variables" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                  } ]
                }
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/custom/StageWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "Pipeline"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/custom/PipelineStageConfig"
                  }
                }
              }
            } ]
          },
          "PipelineStageConfig" : {
            "title" : "PipelineStageConfig",
            "type" : "object",
            "required" : [ "org", "pipeline", "project" ],
            "properties" : {
              "inputSetReferences" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "inputs" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/JsonNode"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "org" : {
                "type" : "string"
              },
              "outputs" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/stages/custom/PipelineStageOutputs"
                }
              },
              "pipeline" : {
                "type" : "string"
              },
              "pipelineInputs" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/JsonNode"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "project" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for PipelineStageConfig"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "PipelineStageOutputs" : {
            "title" : "PipelineStageOutputs",
            "type" : "object",
            "required" : [ "name", "value" ],
            "properties" : {
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "value" : {
                "type" : "string"
              },
              "description" : {
                "desc" : "This is the description for PipelineStageOutputs"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "CustomStageNode" : {
            "title" : "CustomStageNode",
            "type" : "object",
            "required" : [ "type", "spec" ],
            "properties" : {
              "desc" : {
                "description" : "The stage description.",
                "type" : "string"
              },
              "id" : {
                "description" : "The unique stage identifier.",
                "pattern" : "^[a-zA-Z0-9_-]+$",
                "type" : "string"
              },
              "name" : {
                "description" : "The stage name.",
                "type" : "string"
              },
              "strategy" : {
                "description" : "The stage execution strategy.",
                "$ref" : "#/definitions/pipeline/common/Strategy"
              },
              "delegate" : {
                "description" : "Configures the delegate matching logic.",
                "$ref" : "#/definitions/pipeline/common/Delegate"
              },
              "type" : {
                "description" : "The stage type.",
                "enum" : [ "custom" ],
                "type" : "string"
              },
              "when" : {
                "description" : "The stage conditional logic.",
                "type" : "string"
              },
              "failure" : {
                "$ref" : "#/definitions/pipeline/common/FailureList"
              },
              "variables" : {
                "type" : "object",
                "description" : "Variables defines the pipeline variable parameters.",
                "additionalProperties" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/StringVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/NumberVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/ArrayVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/BooleanVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/ObjectVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/SecretVariable"
                  } ]
                },
                "propertyNames" : {
                  "pattern" : "^[a-zA-Z_][0-9a-zA-Z_\\.$-]{0,127}$"
                }
              },
              "timeout" : {
                "type" : "string",
                "pattern" : "^(([1-9])+\\d+[s])|(((([1-9])+\\d*[mhwd])+([\\s]?\\d+[smhwd])*)|(<\\+.+>.*)|(^$))$"
              },
              "labels" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "custom"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/custom/CustomStageSpecElementConfig"
                  }
                }
              }
            } ]
          },
          "CustomStageSpecElementConfig" : {
            "title" : "CustomStageSpecElementConfig",
            "type" : "object",
            "required" : [ "steps" ],
            "properties" : {
              "rollbackSteps" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/StepElementConfig"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/BackgroundStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformApplyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformPlanStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformDestroyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/CloudformationCreateStackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/CloudformationDeleteStackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/CloudformationRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateARMResourceStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateBPStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureARMRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/JenkinsBuildStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ShellScriptProvisionStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ChaosStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerragruntPlanStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerragruntApplyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerragruntDestroyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerragruntRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgCanaryDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgCanaryDeleteStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgRollingDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgRollingRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenSwapServiceStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRunStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsSamDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/DownloadManifestsStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsSamBuildStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsSamRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/BambooBuildStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/HttpStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/EmailStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/QueueStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ShellScriptStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/CustomApprovalStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/JiraCreateStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/JiraUpdateStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/TemplateStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowApprovalStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/JiraApprovalStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/HarnessApprovalStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/BarrierStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowCreateStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowUpdateStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowImportSetStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/FlagConfigurationStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/PolicyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/WaitStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ContainerStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/RunStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/PluginStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/ActionStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaDeployV2StepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaPackageV2StepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaPrepareRollbackV2StepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaRollbackV2StepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkBootstrapStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkSynthStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDiffStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDestroyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/StepGroupNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ParallelNode"
                  } ]
                }
              },
              "steps" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/StepElementConfig"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/BackgroundStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformApplyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformPlanStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformDestroyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/CloudformationCreateStackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/CloudformationDeleteStackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/CloudformationRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateARMResourceStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateBPStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AzureARMRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/JenkinsBuildStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ShellScriptProvisionStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ChaosStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerragruntPlanStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerragruntApplyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerragruntDestroyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerragruntRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgCanaryDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgCanaryDeleteStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgRollingDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgRollingRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenSwapServiceStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRunStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsSamDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/DownloadManifestsStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsSamBuildStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsSamRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaRollbackStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/BambooBuildStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/HttpStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/EmailStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/QueueStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ShellScriptStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/CustomApprovalStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/JiraCreateStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/JiraUpdateStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/TemplateStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowApprovalStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/JiraApprovalStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/HarnessApprovalStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/BarrierStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowCreateStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowUpdateStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowImportSetStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/FlagConfigurationStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/PolicyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/WaitStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ContainerStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/RunStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/PluginStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/ActionStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaDeployV2StepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaPackageV2StepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaPrepareRollbackV2StepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaRollbackV2StepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkBootstrapStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkSynthStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDiffStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDeployStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDestroyStepNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/StepGroupNode"
                  }, {
                    "$ref" : "#/definitions/pipeline/steps/custom/ParallelNode"
                  } ]
                },
                "maxItems" : 256,
                "minItems" : 1
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          }
        },
        "cf" : {
          "FeatureFlagStageNode" : {
            "title" : "FeatureFlagStageNode",
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "type" : "string",
                "desc" : "This is the description for FeatureFlagStageNode"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "id" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "tags" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              },
              "type" : {
                "type" : "string",
                "enum" : [ "FeatureFlag" ]
              },
              "variables" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                  } ]
                }
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/custom/StageWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "FeatureFlag"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/cf/FeatureFlagStageConfig"
                  }
                }
              }
            } ]
          },
          "FeatureFlagStageConfig" : {
            "title" : "FeatureFlagStageConfig",
            "type" : "object",
            "properties" : {
              "execution" : {
                "$ref" : "#/definitions/pipeline/stages/cf/ExecutionElementConfig"
              },
              "description" : {
                "desc" : "This is the description for FeatureFlagStageConfig"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ExecutionElementConfig" : {
            "title" : "ExecutionElementConfig",
            "type" : "object",
            "required" : [ "steps" ],
            "properties" : {
              "steps" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/stages/cf/ExecutionWrapperConfig"
                },
                "maxItems" : 256,
                "minItems" : 1
              },
              "description" : {
                "desc" : "This is the description for ExecutionElementConfig"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ExecutionWrapperConfig" : {
            "title" : "ExecutionWrapperConfig",
            "type" : "object",
            "properties" : {
              "parallel" : {
                "$ref" : "#/definitions/pipeline/stages/cf/ParallelStepElementConfig"
              },
              "step" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepElementConfig"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/BackgroundStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/ci/GitCloneStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerraformApplyStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerraformPlanStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerraformDestroyStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerraformRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/CloudformationCreateStackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/CloudformationDeleteStackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/CloudformationRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateARMResourceStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AzureCreateBPStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AzureARMRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/JenkinsBuildStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/ShellScriptProvisionStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/ChaosStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerragruntPlanStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerragruntApplyStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerragruntDestroyStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerragruntRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AsgCanaryDeployStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AsgCanaryDeleteStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AsgRollingDeployStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AsgRollingRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenDeployStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AsgBlueGreenSwapServiceStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRunStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaDeployStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AwsSamDeployStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/DownloadManifestsStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AwsSamBuildStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AwsSamRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/TerraformCloudRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/AwsLambdaRollbackStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/BambooBuildStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/HttpStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/EmailStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/QueueStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/ShellScriptStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/CustomApprovalStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/JiraCreateStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/JiraUpdateStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/TemplateStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowApprovalStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/JiraApprovalStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/HarnessApprovalStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/BarrierStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowCreateStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowUpdateStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/ServiceNowImportSetStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/FlagConfigurationStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/PolicyStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/WaitStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/custom/ContainerStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/RunStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/PluginStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/ActionStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaDeployV2StepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaPackageV2StepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaPrepareRollbackV2StepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/cd/ServerlessAwsLambdaRollbackV2StepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/AwsCdkBootstrapStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/AwsCdkSynthStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDiffStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDeployStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/AwsCdkDestroyStepNode"
                } ]
              },
              "stepGroup" : {
                "$ref" : "#/definitions/pipeline/stages/cf/StepGroupElementConfig"
              },
              "description" : {
                "desc" : "This is the description for ExecutionWrapperConfig"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ParallelStepElementConfig" : {
            "title" : "ParallelStepElementConfig",
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/pipeline/stages/cf/ExecutionWrapperConfig"
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for ParallelStepElementConfig"
              }
            }
          },
          "StepGroupElementConfig" : {
            "title" : "StepGroupElementConfig",
            "type" : "object",
            "required" : [ "identifier", "name" ],
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
              },
              "sharedPaths" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "stepGroupInfra" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/K8sDirectInfra"
                } ]
              },
              "steps" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/stages/cf/ExecutionWrapperConfig"
                },
                "maxItems" : 256,
                "minItems" : 1
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "template" : {
                "$ref" : "#/definitions/pipeline/steps/custom/TemplateLinkConfig"
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "desc" : "This is the description for StepGroupElementConfig"
              },
              "variables" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                  } ]
                }
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "oneOf" : [ {
                "required" : [ "template" ]
              }, {
                "required" : [ "steps" ]
              } ]
            } ]
          }
        },
        "ParallelStageElementConfig" : {
          "type" : "object",
          "title" : "ParallelStageElementConfig",
          "required" : [ "type" ],
          "properties" : {
            "id" : {
              "type" : "string",
              "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
            },
            "name" : {
              "type" : "string",
              "pattern" : "^[a-zA-Z_0-9-.][-0-9a-zA-Z_\\s.]{0,127}$"
            },
            "description" : {
              "desc" : "This is the description for ParallelStageElementConfig"
            },
            "type" : {
              "type" : "string",
              "enum" : [ "parallel" ]
            }
          },
          "$schema" : "http://json-schema.org/draft-07/schema#",
          "allOf" : [ {
            "if" : {
              "properties" : {
                "type" : {
                  "const" : "parallel"
                }
              }
            },
            "then" : {
              "properties" : {
                "spec" : {
                  "$ref" : "#/definitions/pipeline/stages/ParallelStageElementNodeConfig"
                }
              }
            }
          } ]
        },
        "ParallelStageElementNodeConfig" : {
          "type" : "object",
          "title" : "ParallelStageElementNodeConfig",
          "properties" : {
            "stages" : {
              "type" : "array",
              "items" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/stages/iacm/IACMStageNode"
                }, {
                  "$ref" : "#/definitions/pipeline/stages/cd/DeploymentStageNode"
                }, {
                  "$ref" : "#/definitions/pipeline/stages/security/SecurityStageNode"
                }, {
                  "$ref" : "#/definitions/pipeline/stages/approval/ApprovalStageNode"
                }, {
                  "$ref" : "#/definitions/pipeline/stages/custom/PipelineStageNode"
                }, {
                  "$ref" : "#/definitions/pipeline/stages/custom/CustomStageNode"
                }, {
                  "$ref" : "#/definitions/pipeline/stages/cf/FeatureFlagStageNode"
                }, {
                  "$ref" : "#/definitions/pipeline/stages/template/TemplateStageNode"
                }, {
                  "$ref" : "#/definitions/pipeline/stages/ParallelStageElementConfig"
                }, {
                  "$ref" : "#/definitions/pipeline/stages/idp/IDPStageNode"
                } ]
              },
              "maxItems" : 256,
              "minItems" : 1
            }
          },
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "idp" : {
          "IDPStageNode" : {
            "title" : "IDPStageNode",
            "type" : "object",
            "required" : [ "identifier", "name", "type" ],
            "properties" : {
              "delegateSelectors" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "(<\\+.+>.*)",
                  "minLength" : 1
                } ]
              },
              "description" : {
                "type" : "string",
                "desc" : "This is the description for IDPStageNode"
              },
              "failureStrategies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/common/FailureStrategyConfig"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "identifier" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][0-9a-zA-Z_]{0,127}$"
              },
              "name" : {
                "type" : "string",
                "pattern" : "^[a-zA-Z_][-0-9a-zA-Z_\\s]{0,127}$"
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StrategyConfig"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              },
              "tags" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                }
              },
              "type" : {
                "type" : "string",
                "enum" : [ "IDP" ]
              },
              "variables" : {
                "type" : "array",
                "items" : {
                  "oneOf" : [ {
                    "$ref" : "#/definitions/pipeline/common/NumberNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/SecretNGVariable"
                  }, {
                    "$ref" : "#/definitions/pipeline/common/StringNGVariable"
                  } ]
                }
              },
              "when" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/custom/StageWhenCondition"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>$",
                  "minLength" : 1
                } ]
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "allOf" : [ {
              "if" : {
                "properties" : {
                  "type" : {
                    "const" : "IDP"
                  }
                }
              },
              "then" : {
                "properties" : {
                  "spec" : {
                    "$ref" : "#/definitions/pipeline/stages/idp/IDPStageConfigImpl"
                  }
                }
              }
            } ]
          },
          "IDPStageConfigImpl" : {
            "title" : "IDPStageConfigImpl",
            "type" : "object",
            "properties" : {
              "cloneCodebase" : {
                "oneOf" : [ {
                  "type" : "boolean"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "execution" : {
                "$ref" : "#/definitions/pipeline/stages/idp/ExecutionElementConfig"
              },
              "infrastructure" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/common/DockerInfraYaml"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/HostedVmInfraYaml"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/K8sDirectInfraYaml"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/UseFromStageInfraYaml"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/VmInfraYaml"
                } ]
              },
              "platform" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/common/Platform"
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "runtime" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/steps/common/CloudRuntime"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/DockerRuntime"
                } ]
              },
              "serviceDependencies" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/pipeline/steps/common/DependencyElement"
                  }
                }, {
                  "type" : "string",
                  "pattern" : "^<\\+input>((\\.)((executionInput\\(\\))|(allowedValues|default|regex)\\(.+?\\)))*$",
                  "minLength" : 1
                } ]
              },
              "sharedPaths" : {
                "oneOf" : [ {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }, {
                  "type" : "string"
                } ]
              },
              "description" : {
                "desc" : "This is the description for IDPStageConfigImpl"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ExecutionElementConfig" : {
            "title" : "ExecutionElementConfig",
            "type" : "object",
            "required" : [ "steps" ],
            "properties" : {
              "steps" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/pipeline/stages/idp/ExecutionWrapperConfig"
                },
                "maxItems" : 2147483647,
                "minItems" : 1
              },
              "description" : {
                "desc" : "This is the description for ExecutionElementConfig"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ExecutionWrapperConfig" : {
            "title" : "ExecutionWrapperConfig",
            "type" : "object",
            "properties" : {
              "parallel" : {
                "$ref" : "#/definitions/pipeline/stages/idp/ParallelStepElementConfig"
              },
              "step" : {
                "oneOf" : [ {
                  "$ref" : "#/definitions/pipeline/common/StepElementConfig"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/RunStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/ci/GitCloneStepNode"
                }, {
                  "$ref" : "#/definitions/pipeline/steps/common/PluginStepNode"
                } ]
              },
              "description" : {
                "desc" : "This is the description for ExecutionWrapperConfig"
              }
            },
            "$schema" : "http://json-schema.org/draft-07/schema#"
          },
          "ParallelStepElementConfig" : {
            "title" : "ParallelStepElementConfig",
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/pipeline/stages/idp/ExecutionWrapperConfig"
            },
            "$schema" : "http://json-schema.org/draft-07/schema#",
            "properties" : {
              "description" : {
                "desc" : "This is the description for ParallelStepElementConfig"
              }
            }
          }
        }
      },
      "Options" : {
        "type" : "object",
        "title" : "Options",
        "properties" : {
          "clone" : {
            "description" : "Configures the default clone behavior.",
            "$ref" : "#/definitions/pipeline/Clone"
          },
          "repository" : {
            "description" : "Configures the default repository.",
            "$ref" : "#/definitions/pipeline/Repository"
          },
          "registry" : {
            "description" : "Provides the default registry credentials.",
            "$ref" : "#/definitions/pipeline/Registry"
          },
          "resources" : {
            "description" : "Configures the default stage and step resources.",
            "$ref" : "#/definitions/pipeline/Resources"
          },
          "delegate" : {
            "description" : "Configures the default delegate matching logic.",
            "anyOf" : [ {
              "items" : {
                "type" : "string"
              },
              "type" : "array"
            }, {
              "type" : "string"
            } ]
          },
          "status" : {
            "description" : "Configures the scm status checks.",
            "$ref" : "#/definitions/pipeline/Status"
          },
          "envs" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Provides the default environment variables."
          }
        }
      },
      "Clone" : {
        "title" : "Clone",
        "type" : "object",
        "description" : "Clone defines the default clone behavior.",
        "properties" : {
          "depth" : {
            "description" : "Depth defines the clone depth.",
            "type" : "number"
          },
          "disabled" : {
            "description" : "Disabled disables the default clone step.",
            "type" : "boolean"
          },
          "insecure" : {
            "description" : "Insecure disables ssl verification.",
            "type" : "boolean"
          },
          "strategy" : {
            "description" : "Strategy configures the clone strategy.",
            "type" : "string",
            "enum" : [ "source-branch", "merge" ]
          },
          "trace" : {
            "description" : "Trace enables trace logging.",
            "type" : "boolean"
          },
          "ref" : {
            "description" : "Reference defines the clone ref.",
            "$ref" : "#/definitions/pipeline/Reference"
          }
        }
      },
      "Reference" : {
        "title" : "Reference",
        "description" : "Reference defines a git clone reference.",
        "type" : "object",
        "properties" : {
          "name" : {
            "description" : "Name provides ref name.",
            "type" : "string"
          },
          "type" : {
            "description" : "Type defines the ref type.",
            "type" : "string",
            "enum" : [ "branch", "tag", "pr" ]
          },
          "sha" : {
            "description" : "Sha provides the ref sha.",
            "type" : "string"
          }
        }
      },
      "Repository" : {
        "title" : "Repository",
        "description" : "Repository defines a remote git repository.",
        "type" : "object",
        "properties" : {
          "connector" : {
            "description" : "Connector provides the repository connector.",
            "type" : "string"
          },
          "name" : {
            "description" : "Name provides the repository name.",
            "type" : "string"
          }
        }
      },
      "Registry" : {
        "title" : "Registry",
        "description" : "Registry provides container registry details.",
        "type" : "object",
        "properties" : {
          "connector" : {
            "oneOf" : [ {
              "type" : "string"
            }, {
              "type" : "array",
              "items" : {
                "oneOf" : [ {
                  "type" : "object",
                  "$ref" : "#/definitions/pipeline/RegistryConnector"
                }, {
                  "type" : "string"
                } ]
              }
            }, {
              "type" : "object",
              "$ref" : "#/definitions/pipeline/RegistryConnector"
            } ]
          },
          "mirror" : {
            "oneOf" : [ {
              "type" : "string"
            }, {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            } ]
          }
        },
        "x-go-skip" : true,
        "examples" : [ {
          "registry" : {
            "connector" : "connector.dockerhub"
          }
        }, {
          "registry" : {
            "connector" : [ "connector.dockerhub", "connector.gcr" ]
          }
        }, {
          "registry" : {
            "connector" : [ {
              "name" : "connector.dockerhub"
            }, {
              "name" : "connector.gcr",
              "match" : "us.gcr.io"
            } ]
          }
        }, {
          "registry" : {
            "mirror" : "mirror.gcr.io"
          }
        }, {
          "registry" : {
            "mirror" : [ "mirror.gcr.io", "mirror.harness.io" ]
          }
        } ]
      },
      "RegistryConnector" : {
        "title" : "RegistryConnector",
        "description" : "RegistryConnector provides a registry connector.",
        "type" : "object",
        "properties" : {
          "name" : {
            "description" : "Name provides the registry connector name.",
            "type" : "string"
          },
          "match" : {
            "description" : "Match provides the regitry connector endpoint.",
            "type" : "string"
          }
        },
        "x-go-skip" : true
      },
      "Resources" : {
        "title" : "Resources",
        "description" : "Defines the container resource request and limits.",
        "properties" : {
          "limits" : {
            "$ref" : "#/definitions/pipeline/Resource"
          },
          "requests" : {
            "$ref" : "#/definitions/pipeline/Resource"
          }
        },
        "type" : "object"
      },
      "Resource" : {
        "title" : "Resource",
        "type" : "object",
        "description" : "Resource defines the system resources.",
        "properties" : {
          "cpu" : {
            "type" : [ "string", "number" ]
          },
          "memory" : {
            "format" : "bytes",
            "type" : [ "string", "number" ]
          }
        }
      },
      "Status" : {
        "title" : "Status",
        "type" : "object",
        "properties" : {
          "disabled" : {
            "type" : "boolean"
          },
          "level" : {
            "type" : "string",
            "enum" : [ "pipeline", "stage" ]
          },
          "matrix" : {
            "type" : "string",
            "enum" : [ "itemize", "summarize" ]
          },
          "name" : {
            "type" : "string"
          }
        }
      }
    }
  }
}