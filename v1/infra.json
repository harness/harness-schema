{
  "title" : "InfraDefEntity",
  "type" : "object",
  "required" : [ "spec", "version", "kind" ],
  "properties" : {
    "version" : {
      "description" : "Version defines the schema version.",
      "type" : "number",
      "enum" : [ 1 ]
    },
    "kind" : {
      "description" : "defines the kind of yaml (pipeline/template/service/infra)",
      "type" : "string",
      "enum" : [ "infra-def" ]
    },
    "spec" : {
      "type" : "object",
      "description" : "definition of infra structure entity",
      "$ref" : "#/definitions/infraStructureEntity/InfraDefSpec"
    },
    "desc" : {
      "description" : "This is the description for Infra Structure Definition Entity"
    }
  },
  "$schema" : "http://json-schema.org/draft-07/schema#",
  "definitions" : {
    "infraStructureEntity" : {
      "InfraDefSpec" : {
        "title" : "InfraDefSpec",
        "type" : "object",
        "required" : [ "spec", "type", "variables" ],
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "kubernetes-gcp" ]
          },
          "parallel" : {
            "oneOf" : [ {
              "type" : "string"
            }, {
              "type" : "boolean"
            } ],
            "description" : "true value of parallel field allow multiple deployment on same infra simultaneously"
          },
          "variables" : {
            "type" : "object",
            "description" : "Variables defines for infra structure definition",
            "additionalProperties" : {
              "oneOf" : [ {
                "$ref" : "#/definitions/pipeline/common/StringVariable"
              }, {
                "$ref" : "#/definitions/pipeline/common/NumberVariable"
              }, {
                "$ref" : "#/definitions/pipeline/common/ArrayVariable"
              }, {
                "$ref" : "#/definitions/pipeline/common/BooleanVariable"
              }, {
                "$ref" : "#/definitions/pipeline/common/ObjectVariable"
              }, {
                "$ref" : "#/definitions/pipeline/common/SecretVariable"
              } ]
            }
          },
          "inputs" : {
            "type" : "object",
            "description" : "Inputs defines the infrastructure input parameters.",
            "additionalProperties" : {
              "oneOf" : [ {
                "$ref" : "#/definitions/pipeline/common/StringInput"
              }, {
                "$ref" : "#/definitions/pipeline/common/NumberInput"
              }, {
                "$ref" : "#/definitions/pipeline/common/ArrayInput"
              }, {
                "$ref" : "#/definitions/pipeline/common/BooleanInput"
              }, {
                "$ref" : "#/definitions/pipeline/common/ObjectInput"
              }, {
                "$ref" : "#/definitions/pipeline/common/SecretInput"
              } ]
            },
            "propertyNames" : {
              "pattern" : "^[a-zA-Z_][0-9a-zA-Z_\\.$-]{0,127}$"
            }
          }
        },
        "allOf" : [ {
          "if" : {
            "properties" : {
              "type" : {
                "const" : "kubernetes-gcp"
              }
            }
          },
          "then" : {
            "properties" : {
              "spec" : {
                "$ref" : "#/definitions/infraStructureEntity/KubernetesGcpInfraDefSpec"
              }
            }
          }
        } ],
        "$schema" : "http://json-schema.org/draft-07/schema#"
      },
      "KubernetesGcpInfraDefSpec" : {
        "title" : "KubernetesGcpInfraDefSpec",
        "allOf" : [ {
          "$ref" : "#/definitions/infraStructureEntity/BasicInfraDefSpec"
        }, {
          "type" : "object",
          "required" : [ "connector", "cluster", "namespace", "release" ],
          "properties" : {
            "cluster" : {
              "type" : "string",
              "minLength" : 1
            },
            "connector" : {
              "type" : "string",
              "minLength" : 1
            },
            "namespace" : {
              "type" : "string",
              "minLength" : 1
            },
            "release" : {
              "type" : "string",
              "minLength" : 1
            }
          }
        } ],
        "$schema" : "http://json-schema.org/draft-07/schema#"
      },
      "BasicInfraDefSpec" : {
        "title" : "BasicInfraDefSpec",
        "type" : "object",
        "discriminator" : "type",
        "$schema" : "http://json-schema.org/draft-07/schema#"
      }
    },
    "pipeline" : {
      "common" : {
        "StringVariable" : {
          "title" : "StringVariable",
          "allOf" : [ {
            "$ref" : "#/definitions/pipeline/common/Variable"
          }, {
            "type" : "object",
            "required" : [ "type", "value" ],
            "properties" : {
              "default" : {
                "type" : "string"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "string" ]
              },
              "value" : {
                "type" : "string",
                "metadata" : {
                  "inputProperties" : {
                    "dependsOn" : [ "type" ]
                  }
                }
              },
              "validator" : {
                "type" : "object",
                "oneOf" : [ {
                  "allOf" : [ {
                    "properties" : {
                      "allowed" : {
                        "description" : "defines allowed values for a variable",
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    }
                  } ],
                  "required" : [ "allowed" ]
                }, {
                  "allOf" : [ {
                    "properties" : {
                      "regex" : {
                        "description" : "defines regex pattern for a variable value",
                        "type" : "string"
                      }
                    }
                  } ],
                  "required" : [ "regex" ]
                } ]
              }
            }
          } ],
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "Variable" : {
          "title" : "Variable",
          "type" : "object",
          "discriminator" : "type",
          "description" : "Variable defines a variable object",
          "properties" : {
            "type" : {
              "description" : "Type defines the variable type.",
              "type" : "string",
              "enum" : [ "string", "number", "boolean", "array", "object", "secret" ]
            },
            "desc" : {
              "type" : "string",
              "description" : "Desc defines the variable description."
            },
            "required" : {
              "type" : "boolean",
              "description" : "Required indicates the variable is required."
            },
            "execution_input" : {
              "description" : "a boolean that defines whether the value is an execution input",
              "type" : "boolean",
              "default" : false
            }
          }
        },
        "NumberVariable" : {
          "title" : "NumberVariable",
          "allOf" : [ {
            "$ref" : "#/definitions/pipeline/common/Variable"
          }, {
            "type" : "object",
            "required" : [ "type", "value" ],
            "properties" : {
              "default" : {
                "type" : "number",
                "format" : "double"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "number" ]
              },
              "value" : {
                "oneOf" : [ {
                  "type" : "number",
                  "format" : "double"
                }, {
                  "type" : "string",
                  "pattern" : "((^[+-]?[0-9]*\\.?[0-9]+$)|(<\\+.+>.*))"
                } ],
                "metadata" : {
                  "inputProperties" : {
                    "dependsOn" : [ "type" ]
                  }
                }
              },
              "validator" : {
                "type" : "object",
                "oneOf" : [ {
                  "allOf" : [ {
                    "properties" : {
                      "allowed" : {
                        "description" : "defines allowed values for a variable",
                        "type" : "array",
                        "items" : {
                          "oneOf" : [ {
                            "type" : "number",
                            "format" : "double"
                          }, {
                            "type" : "string",
                            "pattern" : "((^[+-]?[0-9]*\\.?[0-9]+$)|(<\\+.+>.*))"
                          } ]
                        }
                      }
                    }
                  } ],
                  "required" : [ "allowed" ]
                }, {
                  "allOf" : [ {
                    "properties" : {
                      "regex" : {
                        "description" : "defines regex pattern for an variable value",
                        "type" : "string"
                      }
                    }
                  } ],
                  "required" : [ "regex" ]
                } ]
              }
            }
          } ],
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "ArrayVariable" : {
          "title" : "ArrayVariable",
          "allOf" : [ {
            "$ref" : "#/definitions/pipeline/common/Variable"
          }, {
            "type" : "object",
            "required" : [ "type", "value" ],
            "properties" : {
              "default" : {
                "type" : "array"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "array" ]
              },
              "value" : {
                "type" : "array"
              },
              "validator" : {
                "type" : "object",
                "oneOf" : [ {
                  "allOf" : [ {
                    "properties" : {
                      "allowed" : {
                        "description" : "defines allowed values for a variable",
                        "type" : "array",
                        "items" : {
                          "type" : "array"
                        }
                      }
                    }
                  } ],
                  "required" : [ "allowed" ]
                }, {
                  "allOf" : [ {
                    "properties" : {
                      "regex" : {
                        "description" : "defines regex pattern for a variable value",
                        "type" : "string"
                      }
                    }
                  } ],
                  "required" : [ "regex" ]
                } ]
              }
            }
          } ],
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "BooleanVariable" : {
          "title" : "BooleanVariable",
          "allOf" : [ {
            "$ref" : "#/definitions/pipeline/common/Variable"
          }, {
            "type" : "object",
            "required" : [ "type", "value" ],
            "properties" : {
              "default" : {
                "type" : "boolean"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "boolean" ]
              },
              "value" : {
                "type" : "boolean"
              }
            }
          } ],
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "ObjectVariable" : {
          "title" : "ObjectVariable",
          "allOf" : [ {
            "$ref" : "#/definitions/pipeline/common/Variable"
          }, {
            "type" : "object",
            "required" : [ "type", "value" ],
            "properties" : {
              "default" : {
                "type" : "object"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "object" ]
              },
              "value" : {
                "type" : "object"
              },
              "validator" : {
                "type" : "object",
                "oneOf" : [ {
                  "allOf" : [ {
                    "properties" : {
                      "allowed" : {
                        "description" : "defines allowed values for a variable",
                        "type" : "array",
                        "items" : {
                          "type" : "object"
                        }
                      }
                    }
                  } ],
                  "required" : [ "allowed" ]
                }, {
                  "allOf" : [ {
                    "properties" : {
                      "regex" : {
                        "description" : "defines regex pattern for a variable value",
                        "type" : "string"
                      }
                    }
                  } ],
                  "required" : [ "regex" ]
                } ]
              }
            }
          } ],
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "SecretVariable" : {
          "title" : "SecretVariable",
          "allOf" : [ {
            "$ref" : "#/definitions/pipeline/common/Variable"
          }, {
            "type" : "object",
            "required" : [ "type", "value" ],
            "properties" : {
              "default" : {
                "type" : "string"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "secret" ]
              },
              "value" : {
                "type" : "string",
                "metadata" : {
                  "inputProperties" : {
                    "dependsOn" : [ "type" ]
                  }
                }
              }
            }
          } ],
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "StringInput" : {
          "title" : "StringInput",
          "allOf" : [ {
            "$ref" : "#/definitions/pipeline/common/Input"
          }, {
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "default" : {
                "type" : "string"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "string" ]
              },
              "value" : {
                "type" : "string"
              },
              "validator" : {
                "type" : "object",
                "oneOf" : [ {
                  "allOf" : [ {
                    "properties" : {
                      "allowed" : {
                        "description" : "defines allowed values for an input",
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    }
                  } ],
                  "required" : [ "allowed" ]
                }, {
                  "allOf" : [ {
                    "properties" : {
                      "regex" : {
                        "description" : "defines regex pattern for an input value",
                        "type" : "string"
                      }
                    }
                  } ],
                  "required" : [ "regex" ]
                } ]
              }
            }
          } ],
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "Input" : {
          "title" : "Input",
          "type" : "object",
          "discriminator" : "type",
          "description" : "Input defines an input parameter.",
          "properties" : {
            "type" : {
              "description" : "Type defines the input type.",
              "type" : "string",
              "enum" : [ "string", "number", "boolean", "array", "object", "secret" ]
            },
            "desc" : {
              "type" : "string",
              "description" : "Desc defines the input description."
            },
            "required" : {
              "type" : "boolean",
              "description" : "Required indicates the input is required."
            },
            "execution_input" : {
              "description" : "a boolean that defines whether the value is an execution input",
              "type" : "boolean",
              "default" : false
            }
          }
        },
        "NumberInput" : {
          "title" : "NumberInput",
          "allOf" : [ {
            "$ref" : "#/definitions/pipeline/common/Input"
          }, {
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "default" : {
                "type" : "number",
                "format" : "double"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "number" ]
              },
              "value" : {
                "oneOf" : [ {
                  "type" : "number",
                  "format" : "double"
                }, {
                  "type" : "string",
                  "pattern" : "((^[+-]?[0-9]*\\.?[0-9]+$)|(<\\+.+>.*))"
                } ]
              },
              "validator" : {
                "type" : "object",
                "oneOf" : [ {
                  "allOf" : [ {
                    "properties" : {
                      "allowed" : {
                        "description" : "defines allowed values for an input",
                        "type" : "array",
                        "items" : {
                          "oneOf" : [ {
                            "type" : "number",
                            "format" : "double"
                          }, {
                            "type" : "string",
                            "pattern" : "((^[+-]?[0-9]*\\.?[0-9]+$)|(<\\+.+>.*))"
                          } ]
                        }
                      }
                    }
                  } ],
                  "required" : [ "allowed" ]
                }, {
                  "allOf" : [ {
                    "properties" : {
                      "regex" : {
                        "description" : "defines regex pattern for an input value",
                        "type" : "string"
                      }
                    }
                  } ],
                  "required" : [ "regex" ]
                } ]
              }
            }
          } ],
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "ArrayInput" : {
          "title" : "ArrayInput",
          "allOf" : [ {
            "$ref" : "#/definitions/pipeline/common/Input"
          }, {
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "default" : {
                "type" : "array"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "array" ]
              },
              "value" : {
                "type" : "array"
              },
              "validator" : {
                "type" : "object",
                "oneOf" : [ {
                  "allOf" : [ {
                    "properties" : {
                      "allowed" : {
                        "description" : "defines allowed values for an input",
                        "type" : "array",
                        "items" : {
                          "type" : "array"
                        }
                      }
                    }
                  } ],
                  "required" : [ "allowed" ]
                }, {
                  "allOf" : [ {
                    "properties" : {
                      "regex" : {
                        "description" : "defines regex pattern for an input value",
                        "type" : "string"
                      }
                    }
                  } ],
                  "required" : [ "regex" ]
                } ]
              }
            }
          } ],
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "BooleanInput" : {
          "title" : "BooleanInput",
          "allOf" : [ {
            "$ref" : "#/definitions/pipeline/common/Input"
          }, {
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "default" : {
                "type" : "boolean"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "boolean" ]
              },
              "value" : {
                "type" : "boolean"
              }
            }
          } ],
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "ObjectInput" : {
          "title" : "ObjectInput",
          "allOf" : [ {
            "$ref" : "#/definitions/pipeline/common/Input"
          }, {
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "default" : {
                "type" : "object"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "object" ]
              },
              "value" : {
                "type" : "object"
              },
              "validator" : {
                "type" : "object",
                "oneOf" : [ {
                  "allOf" : [ {
                    "properties" : {
                      "allowed" : {
                        "description" : "defines allowed values for an input",
                        "type" : "array",
                        "items" : {
                          "type" : "object"
                        }
                      }
                    }
                  } ],
                  "required" : [ "allowed" ]
                }, {
                  "allOf" : [ {
                    "properties" : {
                      "regex" : {
                        "description" : "defines regex pattern for an input value",
                        "type" : "string"
                      }
                    }
                  } ],
                  "required" : [ "regex" ]
                } ]
              }
            }
          } ],
          "$schema" : "http://json-schema.org/draft-07/schema#"
        },
        "SecretInput" : {
          "title" : "SecretInput",
          "allOf" : [ {
            "$ref" : "#/definitions/pipeline/common/Input"
          }, {
            "type" : "object",
            "required" : [ "type" ],
            "properties" : {
              "default" : {
                "type" : "string"
              },
              "type" : {
                "type" : "string",
                "enum" : [ "secret" ]
              },
              "value" : {
                "type" : "string"
              }
            }
          } ],
          "$schema" : "http://json-schema.org/draft-07/schema#"
        }
      }
    }
  }
}